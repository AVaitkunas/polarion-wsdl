// Code generated by gowsdl DO NOT EDIT.

package tracker_ws

import (
	"context"
	"encoding/xml"
	"time"

	"github.com/hooklift/gowsdl/soap"
)

// against "unused imports"
var (
	_ time.Time
	_ xml.Name
)

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type AddApprovee struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addApprovee"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	ApproveeId string `xml:"approveeId,omitempty" json:"approveeId,omitempty"`
}

type AddApproveeResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addApproveeResponse"`
}

type AddAssignee struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addAssignee"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	AssigneeId string `xml:"assigneeId,omitempty" json:"assigneeId,omitempty"`
}

type AddAssigneeResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addAssigneeResponse"`

	AddAssigneeReturn bool `xml:"addAssigneeReturn,omitempty" json:"addAssigneeReturn,omitempty"`
}

type AddCategory struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addCategory"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	CategoryId string `xml:"categoryId,omitempty" json:"categoryId,omitempty"`
}

type AddCategoryResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addCategoryResponse"`

	AddCategoryReturn bool `xml:"addCategoryReturn,omitempty" json:"addCategoryReturn,omitempty"`
}

type AddComment struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addComment"`

	ParentObjectUri *SubterraURI `xml:"parentObjectUri,omitempty" json:"parentObjectUri,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	Content *Text `xml:"content,omitempty" json:"content,omitempty"`
}

type AddCommentResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addCommentResponse"`

	AddCommentReturn *SubterraURI `xml:"addCommentReturn,omitempty" json:"addCommentReturn,omitempty"`
}

type AddCommentToActivity struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addCommentToActivity"`

	ActivityGlobalId string `xml:"activityGlobalId,omitempty" json:"activityGlobalId,omitempty"`

	CommentText *Text `xml:"commentText,omitempty" json:"commentText,omitempty"`
}

type AddCommentToActivityResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addCommentToActivityResponse"`
}

type AddExternalLinkedRevision struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addExternalLinkedRevision"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	RepositoryName string `xml:"repositoryName,omitempty" json:"repositoryName,omitempty"`

	RevisionId string `xml:"revisionId,omitempty" json:"revisionId,omitempty"`
}

type AddExternalLinkedRevisionResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addExternalLinkedRevisionResponse"`

	AddExternalLinkedRevisionReturn bool `xml:"addExternalLinkedRevisionReturn,omitempty" json:"addExternalLinkedRevisionReturn,omitempty"`
}

type AddExternallyLinkedItem struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addExternallyLinkedItem"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	LinkedExternalWorkitemURI string `xml:"linkedExternalWorkitemURI,omitempty" json:"linkedExternalWorkitemURI,omitempty"`

	Role *EnumOptionId `xml:"role,omitempty" json:"role,omitempty"`
}

type AddExternallyLinkedItemResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addExternallyLinkedItemResponse"`

	AddExternallyLinkedItemReturn bool `xml:"addExternallyLinkedItemReturn,omitempty" json:"addExternallyLinkedItemReturn,omitempty"`
}

type AddHyperlink struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addHyperlink"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	Url string `xml:"url,omitempty" json:"url,omitempty"`

	Role *EnumOptionId `xml:"role,omitempty" json:"role,omitempty"`
}

type AddHyperlinkResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addHyperlinkResponse"`

	AddHyperlinkReturn bool `xml:"addHyperlinkReturn,omitempty" json:"addHyperlinkReturn,omitempty"`
}

type AddLinkedItem struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addLinkedItem"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	LinkedWorkitemURI *SubterraURI `xml:"linkedWorkitemURI,omitempty" json:"linkedWorkitemURI,omitempty"`

	Role *EnumOptionId `xml:"role,omitempty" json:"role,omitempty"`
}

type AddLinkedItemResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addLinkedItemResponse"`

	AddLinkedItemReturn bool `xml:"addLinkedItemReturn,omitempty" json:"addLinkedItemReturn,omitempty"`
}

type AddLinkedItemWithRev struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addLinkedItemWithRev"`

	In0 *SubterraURI `xml:"in0,omitempty" json:"in0,omitempty"`

	In1 *SubterraURI `xml:"in1,omitempty" json:"in1,omitempty"`

	In2 *EnumOptionId `xml:"in2,omitempty" json:"in2,omitempty"`

	In3 string `xml:"in3,omitempty" json:"in3,omitempty"`

	In4 bool `xml:"in4,omitempty" json:"in4,omitempty"`
}

type AddLinkedItemWithRevResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addLinkedItemWithRevResponse"`

	AddLinkedItemWithRevReturn bool `xml:"addLinkedItemWithRevReturn,omitempty" json:"addLinkedItemWithRevReturn,omitempty"`
}

type AddLinkedOslcItem struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addLinkedOslcItem"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	LinkedOslcItemURI string `xml:"linkedOslcItemURI,omitempty" json:"linkedOslcItemURI,omitempty"`

	Role *EnumOptionId `xml:"role,omitempty" json:"role,omitempty"`

	Label string `xml:"label,omitempty" json:"label,omitempty"`
}

type AddLinkedOslcItemResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addLinkedOslcItemResponse"`

	AddLinkedOslcItemReturn bool `xml:"addLinkedOslcItemReturn,omitempty" json:"addLinkedOslcItemReturn,omitempty"`
}

type AddLinkedRevision struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addLinkedRevision"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	RevisionId string `xml:"revisionId,omitempty" json:"revisionId,omitempty"`
}

type AddLinkedRevisionResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addLinkedRevisionResponse"`

	AddLinkedRevisionReturn bool `xml:"addLinkedRevisionReturn,omitempty" json:"addLinkedRevisionReturn,omitempty"`
}

type AddPlaningContraint struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addPlaningContraint"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	Date soap.XSDDateTime `xml:"date,omitempty" json:"date,omitempty"`

	Constraint *EnumOptionId `xml:"constraint,omitempty" json:"constraint,omitempty"`
}

type AddPlaningContraintResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl addPlaningContraintResponse"`

	AddPlaningContraintReturn bool `xml:"addPlaningContraintReturn,omitempty" json:"addPlaningContraintReturn,omitempty"`
}

type CanCommentActivity struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl canCommentActivity"`

	ActivityGlobalId string `xml:"activityGlobalId,omitempty" json:"activityGlobalId,omitempty"`
}

type CanCommentActivityResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl canCommentActivityResponse"`

	CanCommentActivityReturn bool `xml:"canCommentActivityReturn,omitempty" json:"canCommentActivityReturn,omitempty"`
}

type CanCurrentUserAddCommentToActivity struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl canCurrentUserAddCommentToActivity"`

	ActivityGlobalId string `xml:"activityGlobalId,omitempty" json:"activityGlobalId,omitempty"`
}

type CanCurrentUserAddCommentToActivityResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl canCurrentUserAddCommentToActivityResponse"`

	CanCurrentUserAddCommentToActivityReturn bool `xml:"canCurrentUserAddCommentToActivityReturn,omitempty" json:"canCurrentUserAddCommentToActivityReturn,omitempty"`
}

type CreateAttachment struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createAttachment"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	FileName string `xml:"fileName,omitempty" json:"fileName,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	Data []byte `xml:"data,omitempty" json:"data,omitempty"`
}

type CreateAttachmentResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createAttachmentResponse"`
}

type CreateBaseline struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createBaseline"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Revision string `xml:"revision,omitempty" json:"revision,omitempty"`
}

type CreateBaselineResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createBaselineResponse"`

	CreateBaselineReturn *Baseline `xml:"createBaselineReturn,omitempty" json:"createBaselineReturn,omitempty"`
}

type CreateComment struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createComment"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	Content *Text `xml:"content,omitempty" json:"content,omitempty"`
}

type CreateCommentResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createCommentResponse"`
}

type CreateCommentNew struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createCommentNew"`

	ParentURI *SubterraURI `xml:"parentURI,omitempty" json:"parentURI,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	Content *Text `xml:"content,omitempty" json:"content,omitempty"`

	VisibleTo []string `xml:"visibleTo,omitempty" json:"visibleTo,omitempty"`
}

type CreateCommentNewResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createCommentNewResponse"`

	CreateCommentNewReturn *SubterraURI `xml:"createCommentNewReturn,omitempty" json:"createCommentNewReturn,omitempty"`
}

type CreateDocument struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createDocument"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	Location *Location `xml:"location,omitempty" json:"location,omitempty"`

	DocumentName string `xml:"documentName,omitempty" json:"documentName,omitempty"`

	DocumentTitle string `xml:"documentTitle,omitempty" json:"documentTitle,omitempty"`

	AllowedWITypes []*EnumOptionId `xml:"allowedWITypes,omitempty" json:"allowedWITypes,omitempty"`

	StructureLinkRole *EnumOptionId `xml:"structureLinkRole,omitempty" json:"structureLinkRole,omitempty"`

	HomePageContent string `xml:"homePageContent,omitempty" json:"homePageContent,omitempty"`
}

type CreateDocumentResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createDocumentResponse"`

	CreateDocumentReturn string `xml:"createDocumentReturn,omitempty" json:"createDocumentReturn,omitempty"`
}

type CreateDocumentComment struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createDocumentComment"`

	DocumentURI *SubterraURI `xml:"documentURI,omitempty" json:"documentURI,omitempty"`

	Text *Text `xml:"text,omitempty" json:"text,omitempty"`
}

type CreateDocumentCommentResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createDocumentCommentResponse"`

	CreateDocumentCommentReturn *SubterraURI `xml:"createDocumentCommentReturn,omitempty" json:"createDocumentCommentReturn,omitempty"`
}

type CreateDocumentCommentReferringWI struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createDocumentCommentReferringWI"`

	DocumentURI *SubterraURI `xml:"documentURI,omitempty" json:"documentURI,omitempty"`

	WorkItemURI *SubterraURI `xml:"workItemURI,omitempty" json:"workItemURI,omitempty"`

	Text *Text `xml:"text,omitempty" json:"text,omitempty"`
}

type CreateDocumentCommentReferringWIResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createDocumentCommentReferringWIResponse"`

	CreateDocumentCommentReferringWIReturn *SubterraURI `xml:"createDocumentCommentReferringWIReturn,omitempty" json:"createDocumentCommentReferringWIReturn,omitempty"`
}

type CreateDocumentCommentReply struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createDocumentCommentReply"`

	ParentURI *SubterraURI `xml:"parentURI,omitempty" json:"parentURI,omitempty"`

	Text *Text `xml:"text,omitempty" json:"text,omitempty"`
}

type CreateDocumentCommentReplyResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createDocumentCommentReplyResponse"`

	CreateDocumentCommentReplyReturn *SubterraURI `xml:"createDocumentCommentReplyReturn,omitempty" json:"createDocumentCommentReplyReturn,omitempty"`
}

type CreateFolder struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createFolder"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	ParentName string `xml:"parentName,omitempty" json:"parentName,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`
}

type CreateFolderResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createFolderResponse"`

	CreateFolderReturn *Folder `xml:"createFolderReturn,omitempty" json:"createFolderReturn,omitempty"`
}

type CreateModule struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createModule"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	Location *Location `xml:"location,omitempty" json:"location,omitempty"`

	ModuleName string `xml:"moduleName,omitempty" json:"moduleName,omitempty"`

	AllowedWITypes []*EnumOptionId `xml:"allowedWITypes,omitempty" json:"allowedWITypes,omitempty"`

	StructureLinkRole *EnumOptionId `xml:"structureLinkRole,omitempty" json:"structureLinkRole,omitempty"`

	ParentToChild bool `xml:"parentToChild,omitempty" json:"parentToChild,omitempty"`

	HomePageContent string `xml:"homePageContent,omitempty" json:"homePageContent,omitempty"`
}

type CreateModuleResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createModuleResponse"`

	CreateModuleReturn string `xml:"createModuleReturn,omitempty" json:"createModuleReturn,omitempty"`
}

type CreateWorkItem struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createWorkItem"`

	Content *WorkItem `xml:"content,omitempty" json:"content,omitempty"`
}

type CreateWorkItemResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createWorkItemResponse"`

	CreateWorkItemReturn string `xml:"createWorkItemReturn,omitempty" json:"createWorkItemReturn,omitempty"`
}

type CreateWorkItemInModule struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createWorkItemInModule"`

	ModuleURI *SubterraURI `xml:"moduleURI,omitempty" json:"moduleURI,omitempty"`

	ParentWorkItemURI *SubterraURI `xml:"parentWorkItemURI,omitempty" json:"parentWorkItemURI,omitempty"`

	WorkItem *WorkItem `xml:"workItem,omitempty" json:"workItem,omitempty"`
}

type CreateWorkItemInModuleResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createWorkItemInModuleResponse"`

	CreateWorkItemInModuleReturn string `xml:"createWorkItemInModuleReturn,omitempty" json:"createWorkItemInModuleReturn,omitempty"`
}

type CreateWorkRecord struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createWorkRecord"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	User *User `xml:"user,omitempty" json:"user,omitempty"`

	Date soap.XSDDate `xml:"date,omitempty" json:"date,omitempty"`

	TimeSpent *Duration `xml:"timeSpent,omitempty" json:"timeSpent,omitempty"`
}

type CreateWorkRecordResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createWorkRecordResponse"`
}

type CreateWorkRecordWithTypeAndComment struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createWorkRecordWithTypeAndComment"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	User *User `xml:"user,omitempty" json:"user,omitempty"`

	Date soap.XSDDate `xml:"date,omitempty" json:"date,omitempty"`

	Type_ *EnumOptionId `xml:"type,omitempty" json:"type,omitempty"`

	TimeSpent *Duration `xml:"timeSpent,omitempty" json:"timeSpent,omitempty"`

	Comment string `xml:"comment,omitempty" json:"comment,omitempty"`
}

type CreateWorkRecordWithTypeAndCommentResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl createWorkRecordWithTypeAndCommentResponse"`
}

type DeleteAttachment struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl deleteAttachment"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`
}

type DeleteAttachmentResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl deleteAttachmentResponse"`
}

type DeleteBaseline struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl deleteBaseline"`

	BaselineURI *SubterraURI `xml:"baselineURI,omitempty" json:"baselineURI,omitempty"`
}

type DeleteBaselineResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl deleteBaselineResponse"`
}

type DeleteModule struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl deleteModule"`

	ModuleURI *SubterraURI `xml:"moduleURI,omitempty" json:"moduleURI,omitempty"`
}

type DeleteModuleResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl deleteModuleResponse"`
}

type DeleteWorkItem struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl deleteWorkItem"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`
}

type DeleteWorkItemResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl deleteWorkItemResponse"`
}

type DeleteWorkRecord struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl deleteWorkRecord"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	WorkRecordURI *SubterraURI `xml:"workRecordURI,omitempty" json:"workRecordURI,omitempty"`
}

type DeleteWorkRecordResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl deleteWorkRecordResponse"`
}

type DoAutoSuspect struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl doAutoSuspect"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`
}

type DoAutoSuspectResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl doAutoSuspectResponse"`
}

type DoAutoassign struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl doAutoassign"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`
}

type DoAutoassignResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl doAutoassignResponse"`
}

type EditApproval struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl editApproval"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	ApproveeId string `xml:"approveeId,omitempty" json:"approveeId,omitempty"`

	Status *EnumOptionId `xml:"status,omitempty" json:"status,omitempty"`
}

type EditApprovalResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl editApprovalResponse"`
}

type ExportDocumentToPDF struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl exportDocumentToPDF"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`

	ExportPdfProperties *PdfProperties `xml:"exportPdfProperties,omitempty" json:"exportPdfProperties,omitempty"`
}

type ExportDocumentToPDFResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl exportDocumentToPDFResponse"`

	ExportDocumentToPDFReturn []byte `xml:"exportDocumentToPDFReturn,omitempty" json:"exportDocumentToPDFReturn,omitempty"`
}

type GenerateHistory struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl generateHistory"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	IgnoredFields []string `xml:"ignoredFields,omitempty" json:"ignoredFields,omitempty"`

	FieldOrder []string `xml:"fieldOrder,omitempty" json:"fieldOrder,omitempty"`
}

type GenerateHistoryResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl generateHistoryResponse"`

	GenerateHistoryReturn []*Change `xml:"generateHistoryReturn,omitempty" json:"generateHistoryReturn,omitempty"`
}

type GetActivityByGlobalId struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getActivityByGlobalId"`

	ActivityGlobalId string `xml:"activityGlobalId,omitempty" json:"activityGlobalId,omitempty"`
}

type GetActivityByGlobalIdResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getActivityByGlobalIdResponse"`

	GetActivityByGlobalIdReturn *Activity `xml:"getActivityByGlobalIdReturn,omitempty" json:"getActivityByGlobalIdReturn,omitempty"`
}

type GetAllEnumOptionIdsForId struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAllEnumOptionIdsForId"`

	ProjectID string `xml:"projectID,omitempty" json:"projectID,omitempty"`

	EnumId string `xml:"enumId,omitempty" json:"enumId,omitempty"`
}

type GetAllEnumOptionIdsForIdResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAllEnumOptionIdsForIdResponse"`

	GetAllEnumOptionIdsForIdReturn []*EnumOptionId `xml:"getAllEnumOptionIdsForIdReturn,omitempty" json:"getAllEnumOptionIdsForIdReturn,omitempty"`
}

type GetAllEnumOptionIdsForKey struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAllEnumOptionIdsForKey"`

	ProjectID string `xml:"projectID,omitempty" json:"projectID,omitempty"`

	Key string `xml:"key,omitempty" json:"key,omitempty"`
}

type GetAllEnumOptionIdsForKeyResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAllEnumOptionIdsForKeyResponse"`

	GetAllEnumOptionIdsForKeyReturn []*EnumOptionId `xml:"getAllEnumOptionIdsForKeyReturn,omitempty" json:"getAllEnumOptionIdsForKeyReturn,omitempty"`
}

type GetAllEnumOptionsForId struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAllEnumOptionsForId"`

	ProjectID string `xml:"projectID,omitempty" json:"projectID,omitempty"`

	EnumID string `xml:"enumID,omitempty" json:"enumID,omitempty"`
}

type GetAllEnumOptionsForIdResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAllEnumOptionsForIdResponse"`

	GetAllEnumOptionsForIdReturn []*EnumOption `xml:"getAllEnumOptionsForIdReturn,omitempty" json:"getAllEnumOptionsForIdReturn,omitempty"`
}

type GetAllEnumOptionsForKey struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAllEnumOptionsForKey"`

	ProjectID string `xml:"projectID,omitempty" json:"projectID,omitempty"`

	Key string `xml:"key,omitempty" json:"key,omitempty"`
}

type GetAllEnumOptionsForKeyResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAllEnumOptionsForKeyResponse"`

	GetAllEnumOptionsForKeyReturn []*EnumOption `xml:"getAllEnumOptionsForKeyReturn,omitempty" json:"getAllEnumOptionsForKeyReturn,omitempty"`
}

type GetAllowedApprovers struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAllowedApprovers"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`
}

type GetAllowedApproversResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAllowedApproversResponse"`

	GetAllowedApproversReturn []*User `xml:"getAllowedApproversReturn,omitempty" json:"getAllowedApproversReturn,omitempty"`
}

type GetAllowedAssignees struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAllowedAssignees"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`
}

type GetAllowedAssigneesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAllowedAssigneesResponse"`

	GetAllowedAssigneesReturn []*User `xml:"getAllowedAssigneesReturn,omitempty" json:"getAllowedAssigneesReturn,omitempty"`
}

type GetAttachment struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAttachment"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	AttachmentId string `xml:"attachmentId,omitempty" json:"attachmentId,omitempty"`
}

type GetAttachmentResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAttachmentResponse"`

	GetAttachmentReturn []byte `xml:"getAttachmentReturn,omitempty" json:"getAttachmentReturn,omitempty"`
}

type GetAvailableActions struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAvailableActions"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`
}

type GetAvailableActionsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAvailableActionsResponse"`

	GetAvailableActionsReturn []*WorkflowAction `xml:"getAvailableActionsReturn,omitempty" json:"getAvailableActionsReturn,omitempty"`
}

type GetAvailableEnumOptionIdsForId struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAvailableEnumOptionIdsForId"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	EnumID string `xml:"enumID,omitempty" json:"enumID,omitempty"`
}

type GetAvailableEnumOptionIdsForIdResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAvailableEnumOptionIdsForIdResponse"`

	GetAvailableEnumOptionIdsForIdReturn []*EnumOptionId `xml:"getAvailableEnumOptionIdsForIdReturn,omitempty" json:"getAvailableEnumOptionIdsForIdReturn,omitempty"`
}

type GetAvailableEnumOptionIdsForKey struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAvailableEnumOptionIdsForKey"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	Key string `xml:"key,omitempty" json:"key,omitempty"`
}

type GetAvailableEnumOptionIdsForKeyResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getAvailableEnumOptionIdsForKeyResponse"`

	GetAvailableEnumOptionIdsForKeyReturn []*EnumOptionId `xml:"getAvailableEnumOptionIdsForKeyReturn,omitempty" json:"getAvailableEnumOptionIdsForKeyReturn,omitempty"`
}

type GetBackLinkedWorkitems struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getBackLinkedWorkitems"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`
}

type GetBackLinkedWorkitemsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getBackLinkedWorkitemsResponse"`

	GetBackLinkedWorkitemsReturn []*LinkedWorkItem `xml:"getBackLinkedWorkitemsReturn,omitempty" json:"getBackLinkedWorkitemsReturn,omitempty"`
}

type GetCategories struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getCategories"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`
}

type GetCategoriesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getCategoriesResponse"`

	GetCategoriesReturn []*Category `xml:"getCategoriesReturn,omitempty" json:"getCategoriesReturn,omitempty"`
}

type GetChildFolders struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getChildFolders"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	ParentFolderId string `xml:"parentFolderId,omitempty" json:"parentFolderId,omitempty"`
}

type GetChildFoldersResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getChildFoldersResponse"`

	GetChildFoldersReturn []*Folder `xml:"getChildFoldersReturn,omitempty" json:"getChildFoldersReturn,omitempty"`
}

type GetCustomField struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getCustomField"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	Key string `xml:"key,omitempty" json:"key,omitempty"`
}

type GetCustomFieldResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getCustomFieldResponse"`

	GetCustomFieldReturn *CustomField `xml:"getCustomFieldReturn,omitempty" json:"getCustomFieldReturn,omitempty"`
}

type GetCustomFieldKeys struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getCustomFieldKeys"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`
}

type GetCustomFieldKeysResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getCustomFieldKeysResponse"`

	GetCustomFieldKeysReturn []string `xml:"getCustomFieldKeysReturn,omitempty" json:"getCustomFieldKeysReturn,omitempty"`
}

type GetCustomFieldType struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getCustomFieldType"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	Key string `xml:"key,omitempty" json:"key,omitempty"`
}

type GetCustomFieldTypeResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getCustomFieldTypeResponse"`

	GetCustomFieldTypeReturn *CustomFieldType `xml:"getCustomFieldTypeReturn,omitempty" json:"getCustomFieldTypeReturn,omitempty"`
}

type GetCustomFieldTypes struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getCustomFieldTypes"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`
}

type GetCustomFieldTypesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getCustomFieldTypesResponse"`

	GetCustomFieldTypesReturn []*CustomFieldType `xml:"getCustomFieldTypesReturn,omitempty" json:"getCustomFieldTypesReturn,omitempty"`
}

type GetDefaultLanguageDefinition struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getDefaultLanguageDefinition"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`
}

type GetDefaultLanguageDefinitionResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getDefaultLanguageDefinitionResponse"`

	GetDefaultLanguageDefinitionReturn *LanguageDefinition `xml:"getDefaultLanguageDefinitionReturn,omitempty" json:"getDefaultLanguageDefinitionReturn,omitempty"`
}

type GetDefinedCustomFieldKeys struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getDefinedCustomFieldKeys"`

	ProjectID string `xml:"projectID,omitempty" json:"projectID,omitempty"`

	TypeID string `xml:"typeID,omitempty" json:"typeID,omitempty"`
}

type GetDefinedCustomFieldKeysResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getDefinedCustomFieldKeysResponse"`

	GetDefinedCustomFieldKeysReturn []string `xml:"getDefinedCustomFieldKeysReturn,omitempty" json:"getDefinedCustomFieldKeysReturn,omitempty"`
}

type GetDefinedCustomFieldType struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getDefinedCustomFieldType"`

	ProjectID string `xml:"projectID,omitempty" json:"projectID,omitempty"`

	TypeID string `xml:"typeID,omitempty" json:"typeID,omitempty"`

	Key string `xml:"key,omitempty" json:"key,omitempty"`
}

type GetDefinedCustomFieldTypeResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getDefinedCustomFieldTypeResponse"`

	GetDefinedCustomFieldTypeReturn *CustomFieldType `xml:"getDefinedCustomFieldTypeReturn,omitempty" json:"getDefinedCustomFieldTypeReturn,omitempty"`
}

type GetDefinedCustomFieldTypes struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getDefinedCustomFieldTypes"`

	ProjectID string `xml:"projectID,omitempty" json:"projectID,omitempty"`

	TypeID string `xml:"typeID,omitempty" json:"typeID,omitempty"`
}

type GetDefinedCustomFieldTypesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getDefinedCustomFieldTypesResponse"`

	GetDefinedCustomFieldTypesReturn []*CustomFieldType `xml:"getDefinedCustomFieldTypesReturn,omitempty" json:"getDefinedCustomFieldTypesReturn,omitempty"`
}

type GetDocumentSpaces struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getDocumentSpaces"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`
}

type GetDocumentSpacesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getDocumentSpacesResponse"`

	GetDocumentSpacesReturn []string `xml:"getDocumentSpacesReturn,omitempty" json:"getDocumentSpacesReturn,omitempty"`
}

type GetDurationHours struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getDurationHours"`

	Duration string `xml:"duration,omitempty" json:"duration,omitempty"`
}

type GetDurationHoursResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getDurationHoursResponse"`

	GetDurationHoursReturn float32 `xml:"getDurationHoursReturn,omitempty" json:"getDurationHoursReturn,omitempty"`
}

type GetEnumControlKeyForId struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumControlKeyForId"`

	ProjectID string `xml:"projectID,omitempty" json:"projectID,omitempty"`

	EnumID string `xml:"enumID,omitempty" json:"enumID,omitempty"`
}

type GetEnumControlKeyForIdResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumControlKeyForIdResponse"`

	GetEnumControlKeyForIdReturn string `xml:"getEnumControlKeyForIdReturn,omitempty" json:"getEnumControlKeyForIdReturn,omitempty"`
}

type GetEnumControlKeyForKey struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumControlKeyForKey"`

	ProjectID string `xml:"projectID,omitempty" json:"projectID,omitempty"`

	Key string `xml:"key,omitempty" json:"key,omitempty"`
}

type GetEnumControlKeyForKeyResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumControlKeyForKeyResponse"`

	GetEnumControlKeyForKeyReturn string `xml:"getEnumControlKeyForKeyReturn,omitempty" json:"getEnumControlKeyForKeyReturn,omitempty"`
}

type GetEnumOptionFromObjectUriForId struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionFromObjectUriForId"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`

	EnumId string `xml:"enumId,omitempty" json:"enumId,omitempty"`
}

type GetEnumOptionFromObjectUriForIdResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionFromObjectUriForIdResponse"`

	GetEnumOptionFromObjectUriForIdReturn *EnumOption `xml:"getEnumOptionFromObjectUriForIdReturn,omitempty" json:"getEnumOptionFromObjectUriForIdReturn,omitempty"`
}

type GetEnumOptionFromObjectUriForKey struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionFromObjectUriForKey"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`

	PrototypeName string `xml:"prototypeName,omitempty" json:"prototypeName,omitempty"`

	Key string `xml:"key,omitempty" json:"key,omitempty"`
}

type GetEnumOptionFromObjectUriForKeyResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionFromObjectUriForKeyResponse"`

	GetEnumOptionFromObjectUriForKeyReturn *EnumOption `xml:"getEnumOptionFromObjectUriForKeyReturn,omitempty" json:"getEnumOptionFromObjectUriForKeyReturn,omitempty"`
}

type GetEnumOptionWithEnumId struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionWithEnumId"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	EnumID string `xml:"enumID,omitempty" json:"enumID,omitempty"`

	Id *EnumOptionId `xml:"id,omitempty" json:"id,omitempty"`
}

type GetEnumOptionWithEnumIdResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionWithEnumIdResponse"`

	GetEnumOptionWithEnumIdReturn *EnumOption `xml:"getEnumOptionWithEnumIdReturn,omitempty" json:"getEnumOptionWithEnumIdReturn,omitempty"`
}

type GetEnumOptionWithKey struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionWithKey"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	Key string `xml:"key,omitempty" json:"key,omitempty"`

	Id *EnumOptionId `xml:"id,omitempty" json:"id,omitempty"`
}

type GetEnumOptionWithKeyResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionWithKeyResponse"`

	GetEnumOptionWithKeyReturn *EnumOption `xml:"getEnumOptionWithKeyReturn,omitempty" json:"getEnumOptionWithKeyReturn,omitempty"`
}

type GetEnumOptionsForId struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionsForId"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	EnumID string `xml:"enumID,omitempty" json:"enumID,omitempty"`
}

type GetEnumOptionsForIdResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionsForIdResponse"`

	GetEnumOptionsForIdReturn []*EnumOption `xml:"getEnumOptionsForIdReturn,omitempty" json:"getEnumOptionsForIdReturn,omitempty"`
}

type GetEnumOptionsForIdWithControl struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionsForIdWithControl"`

	ProjectID string `xml:"projectID,omitempty" json:"projectID,omitempty"`

	EnumID string `xml:"enumID,omitempty" json:"enumID,omitempty"`

	ControlValue string `xml:"controlValue,omitempty" json:"controlValue,omitempty"`
}

type GetEnumOptionsForIdWithControlResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionsForIdWithControlResponse"`

	GetEnumOptionsForIdWithControlReturn []*EnumOption `xml:"getEnumOptionsForIdWithControlReturn,omitempty" json:"getEnumOptionsForIdWithControlReturn,omitempty"`
}

type GetEnumOptionsForKey struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionsForKey"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	Key string `xml:"key,omitempty" json:"key,omitempty"`
}

type GetEnumOptionsForKeyResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionsForKeyResponse"`

	GetEnumOptionsForKeyReturn []*EnumOption `xml:"getEnumOptionsForKeyReturn,omitempty" json:"getEnumOptionsForKeyReturn,omitempty"`
}

type GetEnumOptionsForKeyWithControl struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionsForKeyWithControl"`

	ProjectID string `xml:"projectID,omitempty" json:"projectID,omitempty"`

	Key string `xml:"key,omitempty" json:"key,omitempty"`

	ControlValue string `xml:"controlValue,omitempty" json:"controlValue,omitempty"`
}

type GetEnumOptionsForKeyWithControlResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getEnumOptionsForKeyWithControlResponse"`

	GetEnumOptionsForKeyWithControlReturn []*EnumOption `xml:"getEnumOptionsForKeyWithControlReturn,omitempty" json:"getEnumOptionsForKeyWithControlReturn,omitempty"`
}

type GetFilteredEnumOptionsForKey struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getFilteredEnumOptionsForKey"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`

	Key string `xml:"key,omitempty" json:"key,omitempty"`

	Filter string `xml:"filter,omitempty" json:"filter,omitempty"`
}

type GetFilteredEnumOptionsForKeyResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getFilteredEnumOptionsForKeyResponse"`

	GetFilteredEnumOptionsForKeyReturn []*EnumOption `xml:"getFilteredEnumOptionsForKeyReturn,omitempty" json:"getFilteredEnumOptionsForKeyReturn,omitempty"`
}

type GetFolder struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getFolder"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	FolderName string `xml:"folderName,omitempty" json:"folderName,omitempty"`
}

type GetFolderResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getFolderResponse"`

	GetFolderReturn *Folder `xml:"getFolderReturn,omitempty" json:"getFolderReturn,omitempty"`
}

type GetFolderForURI struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getFolderForURI"`

	ObjectURI *SubterraURI `xml:"objectURI,omitempty" json:"objectURI,omitempty"`
}

type GetFolderForURIResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getFolderForURIResponse"`

	GetFolderForURIReturn *Folder `xml:"getFolderForURIReturn,omitempty" json:"getFolderForURIReturn,omitempty"`
}

type GetFolders struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getFolders"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`
}

type GetFoldersResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getFoldersResponse"`

	GetFoldersReturn []*Folder `xml:"getFoldersReturn,omitempty" json:"getFoldersReturn,omitempty"`
}

type GetInitialWorkflowAction struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getInitialWorkflowAction"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`
}

type GetInitialWorkflowActionResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getInitialWorkflowActionResponse"`

	GetInitialWorkflowActionReturn *WorkflowAction `xml:"getInitialWorkflowActionReturn,omitempty" json:"getInitialWorkflowActionReturn,omitempty"`
}

type GetInitialWorkflowActionForProjectAndType struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getInitialWorkflowActionForProjectAndType"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	WiType *EnumOptionId `xml:"wiType,omitempty" json:"wiType,omitempty"`
}

type GetInitialWorkflowActionForProjectAndTypeResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getInitialWorkflowActionForProjectAndTypeResponse"`

	GetInitialWorkflowActionForProjectAndTypeReturn *WorkflowAction `xml:"getInitialWorkflowActionForProjectAndTypeReturn,omitempty" json:"getInitialWorkflowActionForProjectAndTypeReturn,omitempty"`
}

type GetLanguageDefinition struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getLanguageDefinition"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`
}

type GetLanguageDefinitionResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getLanguageDefinitionResponse"`

	GetLanguageDefinitionReturn *LanguageDefinition `xml:"getLanguageDefinitionReturn,omitempty" json:"getLanguageDefinitionReturn,omitempty"`
}

type GetLanguageDefinitions struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getLanguageDefinitions"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`
}

type GetLanguageDefinitionsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getLanguageDefinitionsResponse"`

	GetLanguageDefinitionsReturn []*LanguageDefinition `xml:"getLanguageDefinitionsReturn,omitempty" json:"getLanguageDefinitionsReturn,omitempty"`
}

type GetLinkedResources struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getLinkedResources"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`
}

type GetLinkedResourcesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getLinkedResourcesResponse"`

	GetLinkedResourcesReturn []*LinkedResource `xml:"getLinkedResourcesReturn,omitempty" json:"getLinkedResourcesReturn,omitempty"`
}

type GetLocalizedWorkItemDescription struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getLocalizedWorkItemDescription"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`
}

type GetLocalizedWorkItemDescriptionResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getLocalizedWorkItemDescriptionResponse"`

	GetLocalizedWorkItemDescriptionReturn *Text `xml:"getLocalizedWorkItemDescriptionReturn,omitempty" json:"getLocalizedWorkItemDescriptionReturn,omitempty"`
}

type GetLocalizedWorkItemDescriptionField struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getLocalizedWorkItemDescriptionField"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	Type_ *EnumOptionId `xml:"type,omitempty" json:"type,omitempty"`
}

type GetLocalizedWorkItemDescriptionFieldResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getLocalizedWorkItemDescriptionFieldResponse"`

	GetLocalizedWorkItemDescriptionFieldReturn string `xml:"getLocalizedWorkItemDescriptionFieldReturn,omitempty" json:"getLocalizedWorkItemDescriptionFieldReturn,omitempty"`
}

type GetLocalizedWorkItemTitle struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getLocalizedWorkItemTitle"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`
}

type GetLocalizedWorkItemTitleResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getLocalizedWorkItemTitleResponse"`

	GetLocalizedWorkItemTitleReturn string `xml:"getLocalizedWorkItemTitleReturn,omitempty" json:"getLocalizedWorkItemTitleReturn,omitempty"`
}

type GetLocalizedWorkItemTitleField struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getLocalizedWorkItemTitleField"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	Type_ *EnumOptionId `xml:"type,omitempty" json:"type,omitempty"`
}

type GetLocalizedWorkItemTitleFieldResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getLocalizedWorkItemTitleFieldResponse"`

	GetLocalizedWorkItemTitleFieldReturn string `xml:"getLocalizedWorkItemTitleFieldReturn,omitempty" json:"getLocalizedWorkItemTitleFieldReturn,omitempty"`
}

type GetModuleByLocation struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModuleByLocation"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	Location *Location `xml:"location,omitempty" json:"location,omitempty"`
}

type GetModuleByLocationResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModuleByLocationResponse"`

	GetModuleByLocationReturn *Module `xml:"getModuleByLocationReturn,omitempty" json:"getModuleByLocationReturn,omitempty"`
}

type GetModuleByLocationWithFields struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModuleByLocationWithFields"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	Location *Location `xml:"location,omitempty" json:"location,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type GetModuleByLocationWithFieldsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModuleByLocationWithFieldsResponse"`

	GetModuleByLocationWithFieldsReturn *Module `xml:"getModuleByLocationWithFieldsReturn,omitempty" json:"getModuleByLocationWithFieldsReturn,omitempty"`
}

type GetModuleByUri struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModuleByUri"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`
}

type GetModuleByUriResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModuleByUriResponse"`

	GetModuleByUriReturn *Module `xml:"getModuleByUriReturn,omitempty" json:"getModuleByUriReturn,omitempty"`
}

type GetModuleByUriWithFields struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModuleByUriWithFields"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type GetModuleByUriWithFieldsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModuleByUriWithFieldsResponse"`

	GetModuleByUriWithFieldsReturn *Module `xml:"getModuleByUriWithFieldsReturn,omitempty" json:"getModuleByUriWithFieldsReturn,omitempty"`
}

type GetModuleUris struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModuleUris"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	Location *Location `xml:"location,omitempty" json:"location,omitempty"`
}

type GetModuleUrisResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModuleUrisResponse"`

	GetModuleUrisReturn []string `xml:"getModuleUrisReturn,omitempty" json:"getModuleUrisReturn,omitempty"`
}

type GetModuleWorkItemUris struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModuleWorkItemUris"`

	ModuleURI *SubterraURI `xml:"moduleURI,omitempty" json:"moduleURI,omitempty"`

	ParentWorkItemURI *SubterraURI `xml:"parentWorkItemURI,omitempty" json:"parentWorkItemURI,omitempty"`

	Deep bool `xml:"deep,omitempty" json:"deep,omitempty"`
}

type GetModuleWorkItemUrisResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModuleWorkItemUrisResponse"`

	GetModuleWorkItemUrisReturn []string `xml:"getModuleWorkItemUrisReturn,omitempty" json:"getModuleWorkItemUrisReturn,omitempty"`
}

type GetModuleWorkItems struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModuleWorkItems"`

	ModuleURI *SubterraURI `xml:"moduleURI,omitempty" json:"moduleURI,omitempty"`

	ParentWorkItemURI *SubterraURI `xml:"parentWorkItemURI,omitempty" json:"parentWorkItemURI,omitempty"`

	Deep bool `xml:"deep,omitempty" json:"deep,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type GetModuleWorkItemsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModuleWorkItemsResponse"`

	GetModuleWorkItemsReturn []*WorkItem `xml:"getModuleWorkItemsReturn,omitempty" json:"getModuleWorkItemsReturn,omitempty"`
}

type GetModules struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModules"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	Location *Location `xml:"location,omitempty" json:"location,omitempty"`
}

type GetModulesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModulesResponse"`

	GetModulesReturn []*Module `xml:"getModulesReturn,omitempty" json:"getModulesReturn,omitempty"`
}

type GetModulesSubFolders struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModulesSubFolders"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	Location *Location `xml:"location,omitempty" json:"location,omitempty"`
}

type GetModulesSubFoldersResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModulesSubFoldersResponse"`

	GetModulesSubFoldersReturn []*Location `xml:"getModulesSubFoldersReturn,omitempty" json:"getModulesSubFoldersReturn,omitempty"`
}

type GetModulesWithFields struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModulesWithFields"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	Location *Location `xml:"location,omitempty" json:"location,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type GetModulesWithFieldsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getModulesWithFieldsResponse"`

	GetModulesWithFieldsReturn []*Module `xml:"getModulesWithFieldsReturn,omitempty" json:"getModulesWithFieldsReturn,omitempty"`
}

type GetOneDayLength struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getOneDayLength"`
}

type GetOneDayLengthResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getOneDayLengthResponse"`

	GetOneDayLengthReturn int64 `xml:"getOneDayLengthReturn,omitempty" json:"getOneDayLengthReturn,omitempty"`
}

type GetRevision struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getRevision"`

	RepositoryName string `xml:"repositoryName,omitempty" json:"repositoryName,omitempty"`

	RevisionId string `xml:"revisionId,omitempty" json:"revisionId,omitempty"`
}

type GetRevisionResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getRevisionResponse"`

	GetRevisionReturn *Revision `xml:"getRevisionReturn,omitempty" json:"getRevisionReturn,omitempty"`
}

type GetRevisionByUri struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getRevisionByUri"`

	RevisionURI *SubterraURI `xml:"revisionURI,omitempty" json:"revisionURI,omitempty"`
}

type GetRevisionByUriResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getRevisionByUriResponse"`

	GetRevisionByUriReturn *Revision `xml:"getRevisionByUriReturn,omitempty" json:"getRevisionByUriReturn,omitempty"`
}

type GetRevisions struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getRevisions"`

	In0 *SubterraURI `xml:"in0,omitempty" json:"in0,omitempty"`
}

type GetRevisionsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getRevisionsResponse"`

	GetRevisionsReturn []string `xml:"getRevisionsReturn,omitempty" json:"getRevisionsReturn,omitempty"`
}

type GetRootFolders struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getRootFolders"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`
}

type GetRootFoldersResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getRootFoldersResponse"`

	GetRootFoldersReturn []*Folder `xml:"getRootFoldersReturn,omitempty" json:"getRootFoldersReturn,omitempty"`
}

type GetTimepoints struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getTimepoints"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`
}

type GetTimepointsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getTimepointsResponse"`

	GetTimepointsReturn []*TimePoint `xml:"getTimepointsReturn,omitempty" json:"getTimepointsReturn,omitempty"`
}

type GetUnavailableActions struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getUnavailableActions"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`
}

type GetUnavailableActionsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getUnavailableActionsResponse"`

	GetUnavailableActionsReturn []*WorkflowAction `xml:"getUnavailableActionsReturn,omitempty" json:"getUnavailableActionsReturn,omitempty"`
}

type GetWikiPageByUri struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWikiPageByUri"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`
}

type GetWikiPageByUriResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWikiPageByUriResponse"`

	GetWikiPageByUriReturn *WikiPage `xml:"getWikiPageByUriReturn,omitempty" json:"getWikiPageByUriReturn,omitempty"`
}

type GetWikiPageByUriWithFields struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWikiPageByUriWithFields"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type GetWikiPageByUriWithFieldsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWikiPageByUriWithFieldsResponse"`

	GetWikiPageByUriWithFieldsReturn *WikiPage `xml:"getWikiPageByUriWithFieldsReturn,omitempty" json:"getWikiPageByUriWithFieldsReturn,omitempty"`
}

type GetWikiPageUris struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWikiPageUris"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	SpaceId string `xml:"spaceId,omitempty" json:"spaceId,omitempty"`
}

type GetWikiPageUrisResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWikiPageUrisResponse"`

	GetWikiPageUrisReturn []string `xml:"getWikiPageUrisReturn,omitempty" json:"getWikiPageUrisReturn,omitempty"`
}

type GetWikiPages struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWikiPages"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	SpaceId string `xml:"spaceId,omitempty" json:"spaceId,omitempty"`
}

type GetWikiPagesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWikiPagesResponse"`

	GetWikiPagesReturn []*WikiPage `xml:"getWikiPagesReturn,omitempty" json:"getWikiPagesReturn,omitempty"`
}

type GetWikiPagesWithFields struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWikiPagesWithFields"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	SpaceId string `xml:"spaceId,omitempty" json:"spaceId,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type GetWikiPagesWithFieldsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWikiPagesWithFieldsResponse"`

	GetWikiPagesWithFieldsReturn []*WikiPage `xml:"getWikiPagesWithFieldsReturn,omitempty" json:"getWikiPagesWithFieldsReturn,omitempty"`
}

type GetWikiSpaces struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWikiSpaces"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`
}

type GetWikiSpacesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWikiSpacesResponse"`

	GetWikiSpacesReturn []string `xml:"getWikiSpacesReturn,omitempty" json:"getWikiSpacesReturn,omitempty"`
}

type GetWorkItemById struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemById"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	WorkitemId string `xml:"workitemId,omitempty" json:"workitemId,omitempty"`
}

type GetWorkItemByIdResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemByIdResponse"`

	GetWorkItemByIdReturn *WorkItem `xml:"getWorkItemByIdReturn,omitempty" json:"getWorkItemByIdReturn,omitempty"`
}

type GetWorkItemByIdsWithFields struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemByIdsWithFields"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	WorkitemId string `xml:"workitemId,omitempty" json:"workitemId,omitempty"`

	Keys []string `xml:"keys,omitempty" json:"keys,omitempty"`
}

type GetWorkItemByIdsWithFieldsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemByIdsWithFieldsResponse"`

	GetWorkItemByIdsWithFieldsReturn *WorkItem `xml:"getWorkItemByIdsWithFieldsReturn,omitempty" json:"getWorkItemByIdsWithFieldsReturn,omitempty"`
}

type GetWorkItemByUri struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemByUri"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`
}

type GetWorkItemByUriResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemByUriResponse"`

	GetWorkItemByUriReturn *WorkItem `xml:"getWorkItemByUriReturn,omitempty" json:"getWorkItemByUriReturn,omitempty"`
}

type GetWorkItemByUriInRevision struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemByUriInRevision"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`

	Revision string `xml:"revision,omitempty" json:"revision,omitempty"`
}

type GetWorkItemByUriInRevisionResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemByUriInRevisionResponse"`

	GetWorkItemByUriInRevisionReturn *WorkItem `xml:"getWorkItemByUriInRevisionReturn,omitempty" json:"getWorkItemByUriInRevisionReturn,omitempty"`
}

type GetWorkItemByUriInRevisionWithFields struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemByUriInRevisionWithFields"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`

	Revision string `xml:"revision,omitempty" json:"revision,omitempty"`

	Keys []string `xml:"keys,omitempty" json:"keys,omitempty"`
}

type GetWorkItemByUriInRevisionWithFieldsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemByUriInRevisionWithFieldsResponse"`

	GetWorkItemByUriInRevisionWithFieldsReturn *WorkItem `xml:"getWorkItemByUriInRevisionWithFieldsReturn,omitempty" json:"getWorkItemByUriInRevisionWithFieldsReturn,omitempty"`
}

type GetWorkItemByUriWithFields struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemByUriWithFields"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`

	Keys []string `xml:"keys,omitempty" json:"keys,omitempty"`
}

type GetWorkItemByUriWithFieldsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemByUriWithFieldsResponse"`

	GetWorkItemByUriWithFieldsReturn *WorkItem `xml:"getWorkItemByUriWithFieldsReturn,omitempty" json:"getWorkItemByUriWithFieldsReturn,omitempty"`
}

type GetWorkItemsCount struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemsCount"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`
}

type GetWorkItemsCountResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemsCountResponse"`

	GetWorkItemsCountReturn int32 `xml:"getWorkItemsCountReturn,omitempty" json:"getWorkItemsCountReturn,omitempty"`
}

type GetWorkItemsLinkedToRevision struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemsLinkedToRevision"`

	RevisionURI *SubterraURI `xml:"revisionURI,omitempty" json:"revisionURI,omitempty"`
}

type GetWorkItemsLinkedToRevisionResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemsLinkedToRevisionResponse"`

	GetWorkItemsLinkedToRevisionReturn []*WorkItem `xml:"getWorkItemsLinkedToRevisionReturn,omitempty" json:"getWorkItemsLinkedToRevisionReturn,omitempty"`
}

type GetWorkItemsLinkedToRevisionWithFields struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemsLinkedToRevisionWithFields"`

	RevisionURI *SubterraURI `xml:"revisionURI,omitempty" json:"revisionURI,omitempty"`

	Keys []string `xml:"keys,omitempty" json:"keys,omitempty"`
}

type GetWorkItemsLinkedToRevisionWithFieldsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl getWorkItemsLinkedToRevisionWithFieldsResponse"`

	GetWorkItemsLinkedToRevisionWithFieldsReturn []*WorkItem `xml:"getWorkItemsLinkedToRevisionWithFieldsReturn,omitempty" json:"getWorkItemsLinkedToRevisionWithFieldsReturn,omitempty"`
}

type IsHistoryAvailable struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl isHistoryAvailable"`
}

type IsHistoryAvailableResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl isHistoryAvailableResponse"`

	IsHistoryAvailableReturn bool `xml:"isHistoryAvailableReturn,omitempty" json:"isHistoryAvailableReturn,omitempty"`
}

type IsResolvedComment struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl isResolvedComment"`

	CommentURI *SubterraURI `xml:"commentURI,omitempty" json:"commentURI,omitempty"`
}

type IsResolvedCommentResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl isResolvedCommentResponse"`

	IsResolvedCommentReturn bool `xml:"isResolvedCommentReturn,omitempty" json:"isResolvedCommentReturn,omitempty"`
}

type ListActivitySources struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl listActivitySources"`
}

type ListActivitySourcesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl listActivitySourcesResponse"`

	ListActivitySourcesReturn []*ActivitySource `xml:"listActivitySourcesReturn,omitempty" json:"listActivitySourcesReturn,omitempty"`
}

type ListAllActivities struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl listAllActivities"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Count int32 `xml:"count,omitempty" json:"count,omitempty"`
}

type ListAllActivitiesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl listAllActivitiesResponse"`

	ListAllActivitiesReturn []*Activity `xml:"listAllActivitiesReturn,omitempty" json:"listAllActivitiesReturn,omitempty"`
}

type ListAllActivitiesGlobalIds struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl listAllActivitiesGlobalIds"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Count int32 `xml:"count,omitempty" json:"count,omitempty"`
}

type ListAllActivitiesGlobalIdsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl listAllActivitiesGlobalIdsResponse"`

	ListAllActivitiesGlobalIdsReturn []string `xml:"listAllActivitiesGlobalIdsReturn,omitempty" json:"listAllActivitiesGlobalIdsReturn,omitempty"`
}

type ListGroupActivities struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl listGroupActivities"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Count int32 `xml:"count,omitempty" json:"count,omitempty"`
}

type ListGroupActivitiesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl listGroupActivitiesResponse"`

	ListGroupActivitiesReturn []*Activity `xml:"listGroupActivitiesReturn,omitempty" json:"listGroupActivitiesReturn,omitempty"`
}

type ListGroupActivitiesGlobalIds struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl listGroupActivitiesGlobalIds"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Count int32 `xml:"count,omitempty" json:"count,omitempty"`
}

type ListGroupActivitiesGlobalIdsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl listGroupActivitiesGlobalIdsResponse"`

	ListGroupActivitiesGlobalIdsReturn []string `xml:"listGroupActivitiesGlobalIdsReturn,omitempty" json:"listGroupActivitiesGlobalIdsReturn,omitempty"`
}

type ListProjectActivities struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl listProjectActivities"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Count int32 `xml:"count,omitempty" json:"count,omitempty"`
}

type ListProjectActivitiesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl listProjectActivitiesResponse"`

	ListProjectActivitiesReturn []*Activity `xml:"listProjectActivitiesReturn,omitempty" json:"listProjectActivitiesReturn,omitempty"`
}

type ListProjectActivitiesGlobalIds struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl listProjectActivitiesGlobalIds"`

	ProjectId string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Count int32 `xml:"count,omitempty" json:"count,omitempty"`
}

type ListProjectActivitiesGlobalIdsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl listProjectActivitiesGlobalIdsResponse"`

	ListProjectActivitiesGlobalIdsReturn []string `xml:"listProjectActivitiesGlobalIdsReturn,omitempty" json:"listProjectActivitiesGlobalIdsReturn,omitempty"`
}

type MoveWorkItemToDocument struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl moveWorkItemToDocument"`

	WorkItemURI *SubterraURI `xml:"workItemURI,omitempty" json:"workItemURI,omitempty"`

	DocumentURI *SubterraURI `xml:"documentURI,omitempty" json:"documentURI,omitempty"`

	ParentWorkItemURI *SubterraURI `xml:"parentWorkItemURI,omitempty" json:"parentWorkItemURI,omitempty"`

	Position int32 `xml:"position,omitempty" json:"position,omitempty"`

	RetainDocumentFlow bool `xml:"retainDocumentFlow,omitempty" json:"retainDocumentFlow,omitempty"`
}

type MoveWorkItemToDocumentResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl moveWorkItemToDocumentResponse"`
}

type MoveWorkItemToModule struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl moveWorkItemToModule"`

	WorkItemURI *SubterraURI `xml:"workItemURI,omitempty" json:"workItemURI,omitempty"`

	ModuleURI *SubterraURI `xml:"moduleURI,omitempty" json:"moduleURI,omitempty"`

	ParentWorkItemURI *SubterraURI `xml:"parentWorkItemURI,omitempty" json:"parentWorkItemURI,omitempty"`

	Position int32 `xml:"position,omitempty" json:"position,omitempty"`
}

type MoveWorkItemToModuleResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl moveWorkItemToModuleResponse"`
}

type PerformWorkflowAction struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl performWorkflowAction"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	ActionId int32 `xml:"actionId,omitempty" json:"actionId,omitempty"`
}

type PerformWorkflowActionResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl performWorkflowActionResponse"`
}

type QueryBaselines struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryBaselines"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`
}

type QueryBaselinesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryBaselinesResponse"`

	QueryBaselinesReturn []*Baseline `xml:"queryBaselinesReturn,omitempty" json:"queryBaselinesReturn,omitempty"`
}

type QueryModuleUris struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModuleUris"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	ResultsLimit int32 `xml:"resultsLimit,omitempty" json:"resultsLimit,omitempty"`
}

type QueryModuleUrisResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModuleUrisResponse"`

	QueryModuleUrisReturn []string `xml:"queryModuleUrisReturn,omitempty" json:"queryModuleUrisReturn,omitempty"`
}

type QueryModuleUrisBySQL struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModuleUrisBySQL"`

	SqlQuery string `xml:"sqlQuery,omitempty" json:"sqlQuery,omitempty"`
}

type QueryModuleUrisBySQLResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModuleUrisBySQLResponse"`

	QueryModuleUrisBySQLReturn []string `xml:"queryModuleUrisBySQLReturn,omitempty" json:"queryModuleUrisBySQLReturn,omitempty"`
}

type QueryModuleUrisInBaseline struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModuleUrisInBaseline"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	BaselineRevision string `xml:"baselineRevision,omitempty" json:"baselineRevision,omitempty"`

	ResultsLimit int32 `xml:"resultsLimit,omitempty" json:"resultsLimit,omitempty"`
}

type QueryModuleUrisInBaselineResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModuleUrisInBaselineResponse"`

	QueryModuleUrisInBaselineReturn []string `xml:"queryModuleUrisInBaselineReturn,omitempty" json:"queryModuleUrisInBaselineReturn,omitempty"`
}

type QueryModuleUrisInBaselineBySQL struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModuleUrisInBaselineBySQL"`

	SqlQuery string `xml:"sqlQuery,omitempty" json:"sqlQuery,omitempty"`

	BaselineRevision string `xml:"baselineRevision,omitempty" json:"baselineRevision,omitempty"`
}

type QueryModuleUrisInBaselineBySQLResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModuleUrisInBaselineBySQLResponse"`

	QueryModuleUrisInBaselineBySQLReturn []string `xml:"queryModuleUrisInBaselineBySQLReturn,omitempty" json:"queryModuleUrisInBaselineBySQLReturn,omitempty"`
}

type QueryModules struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModules"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`

	ResultsLimit int32 `xml:"resultsLimit,omitempty" json:"resultsLimit,omitempty"`
}

type QueryModulesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModulesResponse"`

	QueryModulesReturn []*Module `xml:"queryModulesReturn,omitempty" json:"queryModulesReturn,omitempty"`
}

type QueryModulesBySQL struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModulesBySQL"`

	SqlQuery string `xml:"sqlQuery,omitempty" json:"sqlQuery,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type QueryModulesBySQLResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModulesBySQLResponse"`

	QueryModulesBySQLReturn []*Module `xml:"queryModulesBySQLReturn,omitempty" json:"queryModulesBySQLReturn,omitempty"`
}

type QueryModulesInBaseline struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModulesInBaseline"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	BaselineRevision string `xml:"baselineRevision,omitempty" json:"baselineRevision,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`

	ResultsLimit int32 `xml:"resultsLimit,omitempty" json:"resultsLimit,omitempty"`
}

type QueryModulesInBaselineResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModulesInBaselineResponse"`

	QueryModulesInBaselineReturn []*Module `xml:"queryModulesInBaselineReturn,omitempty" json:"queryModulesInBaselineReturn,omitempty"`
}

type QueryModulesInBaselineBySQL struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModulesInBaselineBySQL"`

	SqlQuery string `xml:"sqlQuery,omitempty" json:"sqlQuery,omitempty"`

	BaselineRevision string `xml:"baselineRevision,omitempty" json:"baselineRevision,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type QueryModulesInBaselineBySQLResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryModulesInBaselineBySQLResponse"`

	QueryModulesInBaselineBySQLReturn []*Module `xml:"queryModulesInBaselineBySQLReturn,omitempty" json:"queryModulesInBaselineBySQLReturn,omitempty"`
}

type QueryRevisionUris struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryRevisionUris"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	IncludeInternal bool `xml:"includeInternal,omitempty" json:"includeInternal,omitempty"`
}

type QueryRevisionUrisResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryRevisionUrisResponse"`

	QueryRevisionUrisReturn []string `xml:"queryRevisionUrisReturn,omitempty" json:"queryRevisionUrisReturn,omitempty"`
}

type QueryRevisions struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryRevisions"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type QueryRevisionsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryRevisionsResponse"`

	QueryRevisionsReturn []*Revision `xml:"queryRevisionsReturn,omitempty" json:"queryRevisionsReturn,omitempty"`
}

type QueryWikiPageUris struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPageUris"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	ResultsLimit int32 `xml:"resultsLimit,omitempty" json:"resultsLimit,omitempty"`
}

type QueryWikiPageUrisResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPageUrisResponse"`

	QueryWikiPageUrisReturn []string `xml:"queryWikiPageUrisReturn,omitempty" json:"queryWikiPageUrisReturn,omitempty"`
}

type QueryWikiPageUrisBySQL struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPageUrisBySQL"`

	SqlQuery string `xml:"sqlQuery,omitempty" json:"sqlQuery,omitempty"`
}

type QueryWikiPageUrisBySQLResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPageUrisBySQLResponse"`

	QueryWikiPageUrisBySQLReturn []string `xml:"queryWikiPageUrisBySQLReturn,omitempty" json:"queryWikiPageUrisBySQLReturn,omitempty"`
}

type QueryWikiPageUrisInBaseline struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPageUrisInBaseline"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	BaselineRevision string `xml:"baselineRevision,omitempty" json:"baselineRevision,omitempty"`

	ResultsLimit int32 `xml:"resultsLimit,omitempty" json:"resultsLimit,omitempty"`
}

type QueryWikiPageUrisInBaselineResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPageUrisInBaselineResponse"`

	QueryWikiPageUrisInBaselineReturn []string `xml:"queryWikiPageUrisInBaselineReturn,omitempty" json:"queryWikiPageUrisInBaselineReturn,omitempty"`
}

type QueryWikiPageUrisInBaselineBySQL struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPageUrisInBaselineBySQL"`

	SqlQuery string `xml:"sqlQuery,omitempty" json:"sqlQuery,omitempty"`

	BaselineRevision string `xml:"baselineRevision,omitempty" json:"baselineRevision,omitempty"`
}

type QueryWikiPageUrisInBaselineBySQLResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPageUrisInBaselineBySQLResponse"`

	QueryWikiPageUrisInBaselineBySQLReturn []string `xml:"queryWikiPageUrisInBaselineBySQLReturn,omitempty" json:"queryWikiPageUrisInBaselineBySQLReturn,omitempty"`
}

type QueryWikiPages struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPages"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`

	ResultsLimit int32 `xml:"resultsLimit,omitempty" json:"resultsLimit,omitempty"`
}

type QueryWikiPagesResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPagesResponse"`

	QueryWikiPagesReturn []*WikiPage `xml:"queryWikiPagesReturn,omitempty" json:"queryWikiPagesReturn,omitempty"`
}

type QueryWikiPagesBySQL struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPagesBySQL"`

	SqlQuery string `xml:"sqlQuery,omitempty" json:"sqlQuery,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type QueryWikiPagesBySQLResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPagesBySQLResponse"`

	QueryWikiPagesBySQLReturn []*WikiPage `xml:"queryWikiPagesBySQLReturn,omitempty" json:"queryWikiPagesBySQLReturn,omitempty"`
}

type QueryWikiPagesInBaseline struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPagesInBaseline"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	BaselineRevision string `xml:"baselineRevision,omitempty" json:"baselineRevision,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`

	ResultsLimit int32 `xml:"resultsLimit,omitempty" json:"resultsLimit,omitempty"`
}

type QueryWikiPagesInBaselineResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPagesInBaselineResponse"`

	QueryWikiPagesInBaselineReturn []*WikiPage `xml:"queryWikiPagesInBaselineReturn,omitempty" json:"queryWikiPagesInBaselineReturn,omitempty"`
}

type QueryWikiPagesInBaselineBySQL struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPagesInBaselineBySQL"`

	SqlQuery string `xml:"sqlQuery,omitempty" json:"sqlQuery,omitempty"`

	BaselineRevision string `xml:"baselineRevision,omitempty" json:"baselineRevision,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type QueryWikiPagesInBaselineBySQLResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWikiPagesInBaselineBySQLResponse"`

	QueryWikiPagesInBaselineBySQLReturn []*WikiPage `xml:"queryWikiPagesInBaselineBySQLReturn,omitempty" json:"queryWikiPagesInBaselineBySQLReturn,omitempty"`
}

type QueryWorkItemUris struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemUris"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`
}

type QueryWorkItemUrisResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemUrisResponse"`

	QueryWorkItemUrisReturn []string `xml:"queryWorkItemUrisReturn,omitempty" json:"queryWorkItemUrisReturn,omitempty"`
}

type QueryWorkItemUrisBySQL struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemUrisBySQL"`

	SqlQuery string `xml:"sqlQuery,omitempty" json:"sqlQuery,omitempty"`
}

type QueryWorkItemUrisBySQLResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemUrisBySQLResponse"`

	QueryWorkItemUrisBySQLReturn []string `xml:"queryWorkItemUrisBySQLReturn,omitempty" json:"queryWorkItemUrisBySQLReturn,omitempty"`
}

type QueryWorkItemUrisInBaseline struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemUrisInBaseline"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	BaselineRevision string `xml:"baselineRevision,omitempty" json:"baselineRevision,omitempty"`
}

type QueryWorkItemUrisInBaselineResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemUrisInBaselineResponse"`

	QueryWorkItemUrisInBaselineReturn []string `xml:"queryWorkItemUrisInBaselineReturn,omitempty" json:"queryWorkItemUrisInBaselineReturn,omitempty"`
}

type QueryWorkItemUrisInBaselineBySQL struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemUrisInBaselineBySQL"`

	SqlQuery string `xml:"sqlQuery,omitempty" json:"sqlQuery,omitempty"`

	BaselineRevision string `xml:"baselineRevision,omitempty" json:"baselineRevision,omitempty"`
}

type QueryWorkItemUrisInBaselineBySQLResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemUrisInBaselineBySQLResponse"`

	QueryWorkItemUrisInBaselineBySQLReturn []string `xml:"queryWorkItemUrisInBaselineBySQLReturn,omitempty" json:"queryWorkItemUrisInBaselineBySQLReturn,omitempty"`
}

type QueryWorkItemUrisInBaselineLimited struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemUrisInBaselineLimited"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	BaselineRevision string `xml:"baselineRevision,omitempty" json:"baselineRevision,omitempty"`

	ResultsLimit int32 `xml:"resultsLimit,omitempty" json:"resultsLimit,omitempty"`
}

type QueryWorkItemUrisInBaselineLimitedResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemUrisInBaselineLimitedResponse"`

	QueryWorkItemUrisInBaselineLimitedReturn []string `xml:"queryWorkItemUrisInBaselineLimitedReturn,omitempty" json:"queryWorkItemUrisInBaselineLimitedReturn,omitempty"`
}

type QueryWorkItemUrisLimited struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemUrisLimited"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	ResultsLimit int32 `xml:"resultsLimit,omitempty" json:"resultsLimit,omitempty"`
}

type QueryWorkItemUrisLimitedResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemUrisLimitedResponse"`

	QueryWorkItemUrisLimitedReturn []string `xml:"queryWorkItemUrisLimitedReturn,omitempty" json:"queryWorkItemUrisLimitedReturn,omitempty"`
}

type QueryWorkItems struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItems"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type QueryWorkItemsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemsResponse"`

	QueryWorkItemsReturn []*WorkItem `xml:"queryWorkItemsReturn,omitempty" json:"queryWorkItemsReturn,omitempty"`
}

type QueryWorkItemsBySQL struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemsBySQL"`

	SqlQuery string `xml:"sqlQuery,omitempty" json:"sqlQuery,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type QueryWorkItemsBySQLResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemsBySQLResponse"`

	QueryWorkItemsBySQLReturn []*WorkItem `xml:"queryWorkItemsBySQLReturn,omitempty" json:"queryWorkItemsBySQLReturn,omitempty"`
}

type QueryWorkItemsInBaseline struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemsInBaseline"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	BaselineRevision string `xml:"baselineRevision,omitempty" json:"baselineRevision,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type QueryWorkItemsInBaselineResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemsInBaselineResponse"`

	QueryWorkItemsInBaselineReturn []*WorkItem `xml:"queryWorkItemsInBaselineReturn,omitempty" json:"queryWorkItemsInBaselineReturn,omitempty"`
}

type QueryWorkItemsInBaselineBySQL struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemsInBaselineBySQL"`

	SqlQuery string `xml:"sqlQuery,omitempty" json:"sqlQuery,omitempty"`

	BaselineRevision string `xml:"baselineRevision,omitempty" json:"baselineRevision,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type QueryWorkItemsInBaselineBySQLResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemsInBaselineBySQLResponse"`

	QueryWorkItemsInBaselineBySQLReturn []*WorkItem `xml:"queryWorkItemsInBaselineBySQLReturn,omitempty" json:"queryWorkItemsInBaselineBySQLReturn,omitempty"`
}

type QueryWorkItemsInBaselineLimited struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemsInBaselineLimited"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	BaselineRevision string `xml:"baselineRevision,omitempty" json:"baselineRevision,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`

	ResultsLimit int32 `xml:"resultsLimit,omitempty" json:"resultsLimit,omitempty"`
}

type QueryWorkItemsInBaselineLimitedResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemsInBaselineLimitedResponse"`

	QueryWorkItemsInBaselineLimitedReturn []*WorkItem `xml:"queryWorkItemsInBaselineLimitedReturn,omitempty" json:"queryWorkItemsInBaselineLimitedReturn,omitempty"`
}

type QueryWorkItemsInRevision struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemsInRevision"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	Revision string `xml:"revision,omitempty" json:"revision,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type QueryWorkItemsInRevisionResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemsInRevisionResponse"`

	QueryWorkItemsInRevisionReturn []*WorkItem `xml:"queryWorkItemsInRevisionReturn,omitempty" json:"queryWorkItemsInRevisionReturn,omitempty"`
}

type QueryWorkItemsInRevisionLimited struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemsInRevisionLimited"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	Revision string `xml:"revision,omitempty" json:"revision,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`

	ResultsLimit int32 `xml:"resultsLimit,omitempty" json:"resultsLimit,omitempty"`
}

type QueryWorkItemsInRevisionLimitedResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemsInRevisionLimitedResponse"`

	QueryWorkItemsInRevisionLimitedReturn []*WorkItem `xml:"queryWorkItemsInRevisionLimitedReturn,omitempty" json:"queryWorkItemsInRevisionLimitedReturn,omitempty"`
}

type QueryWorkItemsLimited struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemsLimited"`

	Query string `xml:"query,omitempty" json:"query,omitempty"`

	Sort string `xml:"sort,omitempty" json:"sort,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`

	ResultsLimit int32 `xml:"resultsLimit,omitempty" json:"resultsLimit,omitempty"`
}

type QueryWorkItemsLimitedResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl queryWorkItemsLimitedResponse"`

	QueryWorkItemsLimitedReturn []*WorkItem `xml:"queryWorkItemsLimitedReturn,omitempty" json:"queryWorkItemsLimitedReturn,omitempty"`
}

type RemoveApprovee struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeApprovee"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	ApproveeId string `xml:"approveeId,omitempty" json:"approveeId,omitempty"`
}

type RemoveApproveeResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeApproveeResponse"`
}

type RemoveAssignee struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeAssignee"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	AssigneeId string `xml:"assigneeId,omitempty" json:"assigneeId,omitempty"`
}

type RemoveAssigneeResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeAssigneeResponse"`

	RemoveAssigneeReturn bool `xml:"removeAssigneeReturn,omitempty" json:"removeAssigneeReturn,omitempty"`
}

type RemoveCategory struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeCategory"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	CategoryId string `xml:"categoryId,omitempty" json:"categoryId,omitempty"`
}

type RemoveCategoryResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeCategoryResponse"`

	RemoveCategoryReturn bool `xml:"removeCategoryReturn,omitempty" json:"removeCategoryReturn,omitempty"`
}

type RemoveExternalLinkedRevision struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeExternalLinkedRevision"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	RepositoryName string `xml:"repositoryName,omitempty" json:"repositoryName,omitempty"`

	RevisionId string `xml:"revisionId,omitempty" json:"revisionId,omitempty"`
}

type RemoveExternalLinkedRevisionResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeExternalLinkedRevisionResponse"`

	RemoveExternalLinkedRevisionReturn bool `xml:"removeExternalLinkedRevisionReturn,omitempty" json:"removeExternalLinkedRevisionReturn,omitempty"`
}

type RemoveExternallyLinkedItem struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeExternallyLinkedItem"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	LinkedExternalWorkitemURI string `xml:"linkedExternalWorkitemURI,omitempty" json:"linkedExternalWorkitemURI,omitempty"`

	Role *EnumOptionId `xml:"role,omitempty" json:"role,omitempty"`
}

type RemoveExternallyLinkedItemResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeExternallyLinkedItemResponse"`

	RemoveExternallyLinkedItemReturn bool `xml:"removeExternallyLinkedItemReturn,omitempty" json:"removeExternallyLinkedItemReturn,omitempty"`
}

type RemoveHyperlink struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeHyperlink"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	Url string `xml:"url,omitempty" json:"url,omitempty"`
}

type RemoveHyperlinkResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeHyperlinkResponse"`

	RemoveHyperlinkReturn bool `xml:"removeHyperlinkReturn,omitempty" json:"removeHyperlinkReturn,omitempty"`
}

type RemoveLinkedItem struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeLinkedItem"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	LinkedItemURI *SubterraURI `xml:"linkedItemURI,omitempty" json:"linkedItemURI,omitempty"`

	Role *EnumOptionId `xml:"role,omitempty" json:"role,omitempty"`
}

type RemoveLinkedItemResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeLinkedItemResponse"`

	RemoveLinkedItemReturn bool `xml:"removeLinkedItemReturn,omitempty" json:"removeLinkedItemReturn,omitempty"`
}

type RemoveLinkedRevision struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeLinkedRevision"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	RevisionId string `xml:"revisionId,omitempty" json:"revisionId,omitempty"`
}

type RemoveLinkedRevisionResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removeLinkedRevisionResponse"`

	RemoveLinkedRevisionReturn bool `xml:"removeLinkedRevisionReturn,omitempty" json:"removeLinkedRevisionReturn,omitempty"`
}

type RemovePlaningConstraint struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removePlaningConstraint"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	Date soap.XSDDateTime `xml:"date,omitempty" json:"date,omitempty"`

	Constraint *EnumOptionId `xml:"constraint,omitempty" json:"constraint,omitempty"`
}

type RemovePlaningConstraintResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl removePlaningConstraintResponse"`

	RemovePlaningConstraintReturn bool `xml:"removePlaningConstraintReturn,omitempty" json:"removePlaningConstraintReturn,omitempty"`
}

type ResetWorkflow struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl resetWorkflow"`

	WorkflowObjectURI *SubterraURI `xml:"workflowObjectURI,omitempty" json:"workflowObjectURI,omitempty"`
}

type ResetWorkflowResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl resetWorkflowResponse"`
}

type ReuseDocument struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl reuseDocument"`

	SourceURI *SubterraURI `xml:"sourceURI,omitempty" json:"sourceURI,omitempty"`

	TargetProjectId string `xml:"targetProjectId,omitempty" json:"targetProjectId,omitempty"`

	TargetLocation *Location `xml:"targetLocation,omitempty" json:"targetLocation,omitempty"`

	TargetName string `xml:"targetName,omitempty" json:"targetName,omitempty"`

	TargetTitle string `xml:"targetTitle,omitempty" json:"targetTitle,omitempty"`

	UpdateTitleInDocument bool `xml:"updateTitleInDocument,omitempty" json:"updateTitleInDocument,omitempty"`

	LinkRole *EnumOptionId `xml:"linkRole,omitempty" json:"linkRole,omitempty"`

	DerivedFields []string `xml:"derivedFields,omitempty" json:"derivedFields,omitempty"`
}

type ReuseDocumentResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl reuseDocumentResponse"`

	ReuseDocumentReturn string `xml:"reuseDocumentReturn,omitempty" json:"reuseDocumentReturn,omitempty"`
}

type ReuseModule struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl reuseModule"`

	SourceURI *SubterraURI `xml:"sourceURI,omitempty" json:"sourceURI,omitempty"`

	TargetProjectId string `xml:"targetProjectId,omitempty" json:"targetProjectId,omitempty"`

	TargetLocation *Location `xml:"targetLocation,omitempty" json:"targetLocation,omitempty"`

	TargetName string `xml:"targetName,omitempty" json:"targetName,omitempty"`

	LinkRole *EnumOptionId `xml:"linkRole,omitempty" json:"linkRole,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`

	ExceptFields []string `xml:"exceptFields,omitempty" json:"exceptFields,omitempty"`

	DerivedFields []string `xml:"derivedFields,omitempty" json:"derivedFields,omitempty"`
}

type ReuseModuleResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl reuseModuleResponse"`

	ReuseModuleReturn string `xml:"reuseModuleReturn,omitempty" json:"reuseModuleReturn,omitempty"`
}

type SetCommentTags struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl setCommentTags"`

	CommentURI *SubterraURI `xml:"commentURI,omitempty" json:"commentURI,omitempty"`

	Tags []*EnumOptionId `xml:"tags,omitempty" json:"tags,omitempty"`
}

type SetCommentTagsResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl setCommentTagsResponse"`
}

type SetCustomField struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl setCustomField"`

	CustomField *CustomField `xml:"customField,omitempty" json:"customField,omitempty"`
}

type SetCustomFieldResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl setCustomFieldResponse"`
}

type SetFieldsNull struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl setFieldsNull"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	Fields []string `xml:"fields,omitempty" json:"fields,omitempty"`
}

type SetFieldsNullResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl setFieldsNullResponse"`
}

type SetLocalizedWorkItemDescription struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl setLocalizedWorkItemDescription"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	Description *Text `xml:"description,omitempty" json:"description,omitempty"`
}

type SetLocalizedWorkItemDescriptionResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl setLocalizedWorkItemDescriptionResponse"`
}

type SetLocalizedWorkItemTitle struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl setLocalizedWorkItemTitle"`

	Uri *SubterraURI `xml:"uri,omitempty" json:"uri,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`
}

type SetLocalizedWorkItemTitleResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl setLocalizedWorkItemTitleResponse"`
}

type SetResolvedComment struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl setResolvedComment"`

	CommentURI *SubterraURI `xml:"commentURI,omitempty" json:"commentURI,omitempty"`

	Resolved bool `xml:"resolved,omitempty" json:"resolved,omitempty"`
}

type SetResolvedCommentResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl setResolvedCommentResponse"`
}

type UpdateAttachment struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl updateAttachment"`

	WorkitemURI *SubterraURI `xml:"workitemURI,omitempty" json:"workitemURI,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	FileName string `xml:"fileName,omitempty" json:"fileName,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	Data []byte `xml:"data,omitempty" json:"data,omitempty"`
}

type UpdateAttachmentResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl updateAttachmentResponse"`
}

type UpdateBaseline struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl updateBaseline"`

	Baseline *Baseline `xml:"baseline,omitempty" json:"baseline,omitempty"`
}

type UpdateBaselineResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl updateBaselineResponse"`
}

type UpdateDerivedDocument struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl updateDerivedDocument"`

	DocumentURI *SubterraURI `xml:"documentURI,omitempty" json:"documentURI,omitempty"`

	Revision string `xml:"revision,omitempty" json:"revision,omitempty"`

	AutoSuspect bool `xml:"autoSuspect,omitempty" json:"autoSuspect,omitempty"`
}

type UpdateDerivedDocumentResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl updateDerivedDocumentResponse"`
}

type UpdateDerivedModule struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl updateDerivedModule"`

	ModuleURI *SubterraURI `xml:"moduleURI,omitempty" json:"moduleURI,omitempty"`

	Revision string `xml:"revision,omitempty" json:"revision,omitempty"`
}

type UpdateDerivedModuleResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl updateDerivedModuleResponse"`
}

type UpdateModule struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl updateModule"`

	Module *Module `xml:"module,omitempty" json:"module,omitempty"`
}

type UpdateModuleResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl updateModuleResponse"`
}

type UpdateTitleHeadingInDocument struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl updateTitleHeadingInDocument"`

	DocumentURI *SubterraURI `xml:"documentURI,omitempty" json:"documentURI,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`
}

type UpdateTitleHeadingInDocumentResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl updateTitleHeadingInDocumentResponse"`

	UpdateTitleHeadingInDocumentReturn string `xml:"updateTitleHeadingInDocumentReturn,omitempty" json:"updateTitleHeadingInDocumentReturn,omitempty"`
}

type UpdateWorkItem struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl updateWorkItem"`

	Content *WorkItem `xml:"content,omitempty" json:"content,omitempty"`
}

type UpdateWorkItemResponse struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/TrackerWebService-impl updateWorkItemResponse"`
}

type SubterraURI string

type Location string

type Duration string

type Currency float64

type Text struct {
	Type_ string `xml:"type,omitempty" json:"type,omitempty"`

	Content string `xml:"content,omitempty" json:"content,omitempty"`

	ContentLossy bool `xml:"contentLossy,omitempty" json:"contentLossy,omitempty"`
}

type ArrayOfSubterraURI struct {
	SubterraURI []*SubterraURI `xml:"SubterraURI,omitempty" json:"SubterraURI,omitempty"`
}

type ArrayOfstring struct {
	Astring []string `xml:"string,omitempty" json:"string,omitempty"`
}

type Revision struct {
	Author string `xml:"author,omitempty" json:"author,omitempty"`

	Branch string `xml:"branch,omitempty" json:"branch,omitempty"`

	Created soap.XSDDateTime `xml:"created,omitempty" json:"created,omitempty"`

	InternalCommit bool `xml:"internalCommit,omitempty" json:"internalCommit,omitempty"`

	LinkedWorkItemURIs *ArrayOfSubterraURI `xml:"linkedWorkItemURIs,omitempty" json:"linkedWorkItemURIs,omitempty"`

	Message string `xml:"message,omitempty" json:"message,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	RepositoryName string `xml:"repositoryName,omitempty" json:"repositoryName,omitempty"`

	Uri *SubterraURI `xml:"uri,attr,omitempty" json:"uri,omitempty"`

	Unresolvable bool `xml:"unresolvable,attr,omitempty" json:"unresolvable,omitempty"`
}

type ArrayOfRevision struct {
	Revision []*Revision `xml:"Revision,omitempty" json:"Revision,omitempty"`
}

type Property struct {
	XMLName xml.Name `xml:"http://ws.polarion.com/types property"`

	Key string `xml:"key,omitempty" json:"key,omitempty"`

	Value *string `xml:"value,omitempty" json:"value,omitempty"`
}

type Properties struct {
	Property []*Property `xml:"property,omitempty" json:"property,omitempty"`
}

type ArrayOfText struct {
	Text []*Text `xml:"Text,omitempty" json:"Text,omitempty"`
}

type ContextId string

type EnumOptionId struct {
	Id *string `xml:"id,omitempty" json:"id,omitempty"`
}

type Baseline struct {
	Author *User `xml:"author,omitempty" json:"author,omitempty"`

	BaseObjectURI *SubterraURI `xml:"baseObjectURI,omitempty" json:"baseObjectURI,omitempty"`

	BaseRevision string `xml:"baseRevision,omitempty" json:"baseRevision,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Project *Project `xml:"project,omitempty" json:"project,omitempty"`

	Uri *SubterraURI `xml:"uri,attr,omitempty" json:"uri,omitempty"`

	Unresolvable bool `xml:"unresolvable,attr,omitempty" json:"unresolvable,omitempty"`
}

type Folder struct {
	Name *string `xml:"name,omitempty" json:"name,omitempty"`

	ProjectURI *SubterraURI `xml:"projectURI,omitempty" json:"projectURI,omitempty"`

	Title *string `xml:"title,omitempty" json:"title,omitempty"`

	TitleOrName *string `xml:"titleOrName,omitempty" json:"titleOrName,omitempty"`
}

type Approval struct {
	SecureApprovalCommentId string `xml:"secureApprovalCommentId,omitempty" json:"secureApprovalCommentId,omitempty"`

	Status *EnumOptionId `xml:"status,omitempty" json:"status,omitempty"`

	User *User `xml:"user,omitempty" json:"user,omitempty"`
}

type ArrayOfApproval struct {
	Approval []*Approval `xml:"Approval,omitempty" json:"Approval,omitempty"`
}

type Attachment struct {
	Author *User `xml:"author,omitempty" json:"author,omitempty"`

	FileName string `xml:"fileName,omitempty" json:"fileName,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	Length int64 `xml:"length,omitempty" json:"length,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	Updated soap.XSDDateTime `xml:"updated,omitempty" json:"updated,omitempty"`

	Url string `xml:"url,omitempty" json:"url,omitempty"`

	Uri *SubterraURI `xml:"uri,attr,omitempty" json:"uri,omitempty"`

	Unresolvable bool `xml:"unresolvable,attr,omitempty" json:"unresolvable,omitempty"`
}

type ArrayOfAttachment struct {
	Attachment []*Attachment `xml:"Attachment,omitempty" json:"Attachment,omitempty"`
}

type Category struct {
	Description *Text `xml:"description,omitempty" json:"description,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Uri *SubterraURI `xml:"uri,attr,omitempty" json:"uri,omitempty"`

	Unresolvable bool `xml:"unresolvable,attr,omitempty" json:"unresolvable,omitempty"`
}

type ArrayOfCategory struct {
	Category []*Category `xml:"Category,omitempty" json:"Category,omitempty"`
}

type ArrayOfEnumOptionId struct {
	EnumOptionId []*EnumOptionId `xml:"EnumOptionId,omitempty" json:"EnumOptionId,omitempty"`
}

type Comment struct {
	Author *User `xml:"author,omitempty" json:"author,omitempty"`

	ChildCommentURIs *ArrayOfSubterraURI `xml:"childCommentURIs,omitempty" json:"childCommentURIs,omitempty"`

	Created soap.XSDDateTime `xml:"created,omitempty" json:"created,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	ParentCommentURI *SubterraURI `xml:"parentCommentURI,omitempty" json:"parentCommentURI,omitempty"`

	Resolved bool `xml:"resolved,omitempty" json:"resolved,omitempty"`

	Tags *ArrayOfEnumOptionId `xml:"tags,omitempty" json:"tags,omitempty"`

	Text *Text `xml:"text,omitempty" json:"text,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	VisibleTo *ArrayOfstring `xml:"visibleTo,omitempty" json:"visibleTo,omitempty"`

	Uri *SubterraURI `xml:"uri,attr,omitempty" json:"uri,omitempty"`

	Unresolvable bool `xml:"unresolvable,attr,omitempty" json:"unresolvable,omitempty"`
}

type ArrayOfComment struct {
	Comment []*Comment `xml:"Comment,omitempty" json:"Comment,omitempty"`
}

type ExternallyLinkedWorkItem struct {
	Role *EnumOptionId `xml:"role,omitempty" json:"role,omitempty"`

	WorkItemURI string `xml:"workItemURI,omitempty" json:"workItemURI,omitempty"`
}

type ArrayOfExternallyLinkedWorkItem struct {
	ExternallyLinkedWorkItem []*ExternallyLinkedWorkItem `xml:"ExternallyLinkedWorkItem,omitempty" json:"ExternallyLinkedWorkItem,omitempty"`
}

type Hyperlink struct {
	Role *EnumOptionId `xml:"role,omitempty" json:"role,omitempty"`

	Uri string `xml:"uri,omitempty" json:"uri,omitempty"`
}

type ArrayOfHyperlink struct {
	Hyperlink []*Hyperlink `xml:"Hyperlink,omitempty" json:"Hyperlink,omitempty"`
}

type LinkedOslcResource struct {
	Label string `xml:"label,omitempty" json:"label,omitempty"`

	Revision string `xml:"revision,omitempty" json:"revision,omitempty"`

	Role *EnumOptionId `xml:"role,omitempty" json:"role,omitempty"`

	Uri string `xml:"uri,omitempty" json:"uri,omitempty"`
}

type ArrayOfLinkedOslcResource struct {
	LinkedOslcResource []*LinkedOslcResource `xml:"LinkedOslcResource,omitempty" json:"LinkedOslcResource,omitempty"`
}

type LinkedWorkItem struct {
	Revision string `xml:"revision,omitempty" json:"revision,omitempty"`

	Role *EnumOptionId `xml:"role,omitempty" json:"role,omitempty"`

	Suspect bool `xml:"suspect,omitempty" json:"suspect,omitempty"`

	WorkItemURI *SubterraURI `xml:"workItemURI,omitempty" json:"workItemURI,omitempty"`
}

type ArrayOfLinkedWorkItem struct {
	LinkedWorkItem []*LinkedWorkItem `xml:"LinkedWorkItem,omitempty" json:"LinkedWorkItem,omitempty"`
}

type PlanningConstraint struct {
	Constraint *EnumOptionId `xml:"constraint,omitempty" json:"constraint,omitempty"`

	Date soap.XSDDateTime `xml:"date,omitempty" json:"date,omitempty"`
}

type ArrayOfPlanningConstraint struct {
	PlanningConstraint []*PlanningConstraint `xml:"PlanningConstraint,omitempty" json:"PlanningConstraint,omitempty"`
}

type PriorityOptionId struct {
	*EnumOptionId
}

type TimePoint struct {
	Closed bool `xml:"closed,omitempty" json:"closed,omitempty"`

	Description *Text `xml:"description,omitempty" json:"description,omitempty"`

	EarliestPlannedStart soap.XSDDate `xml:"earliestPlannedStart,omitempty" json:"earliestPlannedStart,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Time soap.XSDDate `xml:"time,omitempty" json:"time,omitempty"`

	Uri *SubterraURI `xml:"uri,attr,omitempty" json:"uri,omitempty"`

	Unresolvable bool `xml:"unresolvable,attr,omitempty" json:"unresolvable,omitempty"`
}

type WorkRecord struct {
	Comment string `xml:"comment,omitempty" json:"comment,omitempty"`

	Date soap.XSDDate `xml:"date,omitempty" json:"date,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	TimeSpent *Duration `xml:"timeSpent,omitempty" json:"timeSpent,omitempty"`

	Type_ *EnumOptionId `xml:"type,omitempty" json:"type,omitempty"`

	User *User `xml:"user,omitempty" json:"user,omitempty"`

	Uri *SubterraURI `xml:"uri,attr,omitempty" json:"uri,omitempty"`

	Unresolvable bool `xml:"unresolvable,attr,omitempty" json:"unresolvable,omitempty"`
}

type ArrayOfWorkRecord struct {
	WorkRecord []*WorkRecord `xml:"WorkRecord,omitempty" json:"WorkRecord,omitempty"`
}

type Custom struct {
	Key string `xml:"key,omitempty" json:"key,omitempty"`

	Value *AnyType `xml:"value,omitempty" json:"value,omitempty"`
}

type ArrayOfCustom struct {
	Custom []*Custom `xml:"Custom,omitempty" json:"Custom,omitempty"`
}

type WorkItem struct {
	Approvals *ArrayOfApproval `xml:"approvals,omitempty" json:"approvals,omitempty"`

	Assignee *ArrayOfUser `xml:"assignee,omitempty" json:"assignee,omitempty"`

	Attachments *ArrayOfAttachment `xml:"attachments,omitempty" json:"attachments,omitempty"`

	Author *User `xml:"author,omitempty" json:"author,omitempty"`

	Categories *ArrayOfCategory `xml:"categories,omitempty" json:"categories,omitempty"`

	Comments *ArrayOfComment `xml:"comments,omitempty" json:"comments,omitempty"`

	Created soap.XSDDateTime `xml:"created,omitempty" json:"created,omitempty"`

	Description *Text `xml:"description,omitempty" json:"description,omitempty"`

	DueDate soap.XSDDate `xml:"dueDate,omitempty" json:"dueDate,omitempty"`

	ExternallyLinkedWorkItems *ArrayOfExternallyLinkedWorkItem `xml:"externallyLinkedWorkItems,omitempty" json:"externallyLinkedWorkItems,omitempty"`

	Hyperlinks *ArrayOfHyperlink `xml:"hyperlinks,omitempty" json:"hyperlinks,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	InitialEstimate *Duration `xml:"initialEstimate,omitempty" json:"initialEstimate,omitempty"`

	LinkedOslcResources *ArrayOfLinkedOslcResource `xml:"linkedOslcResources,omitempty" json:"linkedOslcResources,omitempty"`

	LinkedRevisions *ArrayOfRevision `xml:"linkedRevisions,omitempty" json:"linkedRevisions,omitempty"`

	LinkedRevisionsDerived *ArrayOfRevision `xml:"linkedRevisionsDerived,omitempty" json:"linkedRevisionsDerived,omitempty"`

	LinkedWorkItems *ArrayOfLinkedWorkItem `xml:"linkedWorkItems,omitempty" json:"linkedWorkItems,omitempty"`

	LinkedWorkItemsDerived *ArrayOfLinkedWorkItem `xml:"linkedWorkItemsDerived,omitempty" json:"linkedWorkItemsDerived,omitempty"`

	Location *Location `xml:"location,omitempty" json:"location,omitempty"`

	ModuleURI *SubterraURI `xml:"moduleURI,omitempty" json:"moduleURI,omitempty"`

	OutlineNumber string `xml:"outlineNumber,omitempty" json:"outlineNumber,omitempty"`

	PlannedEnd soap.XSDDateTime `xml:"plannedEnd,omitempty" json:"plannedEnd,omitempty"`

	PlannedInURIs *ArrayOfSubterraURI `xml:"plannedInURIs,omitempty" json:"plannedInURIs,omitempty"`

	PlannedStart soap.XSDDateTime `xml:"plannedStart,omitempty" json:"plannedStart,omitempty"`

	PlanningConstraints *ArrayOfPlanningConstraint `xml:"planningConstraints,omitempty" json:"planningConstraints,omitempty"`

	PreviousStatus *EnumOptionId `xml:"previousStatus,omitempty" json:"previousStatus,omitempty"`

	Priority *PriorityOptionId `xml:"priority,omitempty" json:"priority,omitempty"`

	Project *Project `xml:"project,omitempty" json:"project,omitempty"`

	RemainingEstimate *Duration `xml:"remainingEstimate,omitempty" json:"remainingEstimate,omitempty"`

	Resolution *EnumOptionId `xml:"resolution,omitempty" json:"resolution,omitempty"`

	ResolvedOn soap.XSDDateTime `xml:"resolvedOn,omitempty" json:"resolvedOn,omitempty"`

	Severity *EnumOptionId `xml:"severity,omitempty" json:"severity,omitempty"`

	Status *EnumOptionId `xml:"status,omitempty" json:"status,omitempty"`

	TimePoint *TimePoint `xml:"timePoint,omitempty" json:"timePoint,omitempty"`

	TimeSpent *Duration `xml:"timeSpent,omitempty" json:"timeSpent,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	Type_ *EnumOptionId `xml:"type,omitempty" json:"type,omitempty"`

	Updated soap.XSDDateTime `xml:"updated,omitempty" json:"updated,omitempty"`

	WorkRecords *ArrayOfWorkRecord `xml:"workRecords,omitempty" json:"workRecords,omitempty"`

	CustomFields *ArrayOfCustom `xml:"customFields,omitempty" json:"customFields,omitempty"`

	Uri *SubterraURI `xml:"uri,attr,omitempty" json:"uri,omitempty"`

	Unresolvable bool `xml:"unresolvable,attr,omitempty" json:"unresolvable,omitempty"`
}

type PdfProperties struct {
	PaperSize string `xml:"paperSize,omitempty" json:"paperSize,omitempty"`

	Orientation string `xml:"orientation,omitempty" json:"orientation,omitempty"`

	FitToPageWidth bool `xml:"fitToPageWidth,omitempty" json:"fitToPageWidth,omitempty"`

	GenerateBookmarks bool `xml:"generateBookmarks,omitempty" json:"generateBookmarks,omitempty"`

	IncludeHeaderFooter bool `xml:"includeHeaderFooter,omitempty" json:"includeHeaderFooter,omitempty"`

	RepeatTableHeaders bool `xml:"repeatTableHeaders,omitempty" json:"repeatTableHeaders,omitempty"`
}

type FieldDiff struct {
	Added *ArrayOf_xsd_anyType `xml:"added,omitempty" json:"added,omitempty"`

	After *AnyType `xml:"after,omitempty" json:"after,omitempty"`

	Before *AnyType `xml:"before,omitempty" json:"before,omitempty"`

	Collection bool `xml:"collection,omitempty" json:"collection,omitempty"`

	FieldName *string `xml:"fieldName,omitempty" json:"fieldName,omitempty"`

	Removed *ArrayOf_xsd_anyType `xml:"removed,omitempty" json:"removed,omitempty"`
}

type Change struct {
	Creation bool `xml:"creation,omitempty" json:"creation,omitempty"`

	Date *soap.XSDDateTime `xml:"date,omitempty" json:"date,omitempty"`

	Diffs *ArrayOf_tns3_FieldDiff `xml:"diffs,omitempty" json:"diffs,omitempty"`

	Empty bool `xml:"empty,omitempty" json:"empty,omitempty"`

	Invalid bool `xml:"invalid,omitempty" json:"invalid,omitempty"`

	Revision *string `xml:"revision,omitempty" json:"revision,omitempty"`

	User *string `xml:"user,omitempty" json:"user,omitempty"`
}

type ActivityCustomValue struct {
	Values *ArrayOf_xsd_string `xml:"values,omitempty" json:"values,omitempty"`
}

type ActivityCustomValueEntry struct {
	CustomValues *ActivityCustomValue `xml:"customValues,omitempty" json:"customValues,omitempty"`

	Key *string `xml:"key,omitempty" json:"key,omitempty"`
}

type ActivityComment struct {
	Text *Text `xml:"text,omitempty" json:"text,omitempty"`

	TimeStamp *soap.XSDDateTime `xml:"timeStamp,omitempty" json:"timeStamp,omitempty"`

	UserId *string `xml:"userId,omitempty" json:"userId,omitempty"`
}

type Activity struct {
	ActivityCustomValues *ArrayOf_tns3_ActivityCustomValueEntry `xml:"activityCustomValues,omitempty" json:"activityCustomValues,omitempty"`

	Comments *ArrayOf_tns3_ActivityComment `xml:"comments,omitempty" json:"comments,omitempty"`

	ContextId *ContextId `xml:"contextId,omitempty" json:"contextId,omitempty"`

	GlobalId *string `xml:"globalId,omitempty" json:"globalId,omitempty"`

	Id *string `xml:"id,omitempty" json:"id,omitempty"`

	Info *Text `xml:"info,omitempty" json:"info,omitempty"`

	Prefix *string `xml:"prefix,omitempty" json:"prefix,omitempty"`

	ResourceLocations *ArrayOf_tns2_Location `xml:"resourceLocations,omitempty" json:"resourceLocations,omitempty"`

	SourceId *string `xml:"sourceId,omitempty" json:"sourceId,omitempty"`

	Timestamp *soap.XSDDateTime `xml:"timestamp,omitempty" json:"timestamp,omitempty"`

	Type_ *string `xml:"type,omitempty" json:"type,omitempty"`

	UserId *string `xml:"userId,omitempty" json:"userId,omitempty"`
}

type EnumOption struct {
	Default_ bool `xml:"default,omitempty" json:"default,omitempty"`

	EnumId *string `xml:"enumId,omitempty" json:"enumId,omitempty"`

	Hidden bool `xml:"hidden,omitempty" json:"hidden,omitempty"`

	Id *string `xml:"id,omitempty" json:"id,omitempty"`

	Name *string `xml:"name,omitempty" json:"name,omitempty"`

	Phantom bool `xml:"phantom,omitempty" json:"phantom,omitempty"`

	Properties *Properties `xml:"properties,omitempty" json:"properties,omitempty"`

	SequenceNumber int32 `xml:"sequenceNumber,omitempty" json:"sequenceNumber,omitempty"`
}

type WorkflowAction struct {
	ActionId int32 `xml:"actionId,omitempty" json:"actionId,omitempty"`

	ActionName *string `xml:"actionName,omitempty" json:"actionName,omitempty"`

	CleanedFeatures *ArrayOf_xsd_string `xml:"cleanedFeatures,omitempty" json:"cleanedFeatures,omitempty"`

	NativeActionId *string `xml:"nativeActionId,omitempty" json:"nativeActionId,omitempty"`

	RequiredFeatures *ArrayOf_xsd_string `xml:"requiredFeatures,omitempty" json:"requiredFeatures,omitempty"`

	SuggestedFeatures *ArrayOf_xsd_string `xml:"suggestedFeatures,omitempty" json:"suggestedFeatures,omitempty"`

	TargetStatus *EnumOptionId `xml:"targetStatus,omitempty" json:"targetStatus,omitempty"`

	UnavailabilityMessage *string `xml:"unavailabilityMessage,omitempty" json:"unavailabilityMessage,omitempty"`
}

type CustomField struct {
	Key string `xml:"key,omitempty" json:"key,omitempty"`

	ParentItemURI string `xml:"parentItemURI,omitempty" json:"parentItemURI,omitempty"`

	Value *AnyType `xml:"value,omitempty" json:"value,omitempty"`
}

type CustomFieldType struct {
	DefaultValue *AnyType `xml:"defaultValue,omitempty" json:"defaultValue,omitempty"`

	DependsOn *string `xml:"dependsOn,omitempty" json:"dependsOn,omitempty"`

	Description *string `xml:"description,omitempty" json:"description,omitempty"`

	Id *string `xml:"id,omitempty" json:"id,omitempty"`

	Multi bool `xml:"multi,omitempty" json:"multi,omitempty"`

	Name *string `xml:"name,omitempty" json:"name,omitempty"`

	Required bool `xml:"required,omitempty" json:"required,omitempty"`

	// Type_ *QName `xml:"type,omitempty" json:"type,omitempty"`
}

type LanguageDefinition struct {
	Id *string `xml:"id,omitempty" json:"id,omitempty"`

	Label *string `xml:"label,omitempty" json:"label,omitempty"`
}

type LinkedResource struct {
	Branch *string `xml:"branch,omitempty" json:"branch,omitempty"`

	Category *string `xml:"category,omitempty" json:"category,omitempty"`

	Element *string `xml:"element,omitempty" json:"element,omitempty"`

	ElementPosition *string `xml:"elementPosition,omitempty" json:"elementPosition,omitempty"`

	FileName *string `xml:"fileName,omitempty" json:"fileName,omitempty"`

	LinkPosition *string `xml:"linkPosition,omitempty" json:"linkPosition,omitempty"`

	Location *string `xml:"location,omitempty" json:"location,omitempty"`

	Message *string `xml:"message,omitempty" json:"message,omitempty"`

	ObjectId *string `xml:"objectId,omitempty" json:"objectId,omitempty"`

	ObjectRevision *string `xml:"objectRevision,omitempty" json:"objectRevision,omitempty"`

	ProjectId *string `xml:"projectId,omitempty" json:"projectId,omitempty"`

	RepositoryId *string `xml:"repositoryId,omitempty" json:"repositoryId,omitempty"`

	Role *string `xml:"role,omitempty" json:"role,omitempty"`
}

type ImportedComment struct {
	Author string `xml:"author,omitempty" json:"author,omitempty"`

	Created soap.XSDDateTime `xml:"created,omitempty" json:"created,omitempty"`

	Initials string `xml:"initials,omitempty" json:"initials,omitempty"`
}

type ModuleComment struct {
	Author *User `xml:"author,omitempty" json:"author,omitempty"`

	ChildCommentURIs *ArrayOfSubterraURI `xml:"childCommentURIs,omitempty" json:"childCommentURIs,omitempty"`

	Created soap.XSDDateTime `xml:"created,omitempty" json:"created,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	ImportedComment *ImportedComment `xml:"importedComment,omitempty" json:"importedComment,omitempty"`

	ParentCommentURI *SubterraURI `xml:"parentCommentURI,omitempty" json:"parentCommentURI,omitempty"`

	ReferredWorkItemURI *SubterraURI `xml:"referredWorkItemURI,omitempty" json:"referredWorkItemURI,omitempty"`

	Resolved bool `xml:"resolved,omitempty" json:"resolved,omitempty"`

	Tags *ArrayOfEnumOptionId `xml:"tags,omitempty" json:"tags,omitempty"`

	Text *Text `xml:"text,omitempty" json:"text,omitempty"`

	Uri *SubterraURI `xml:"uri,attr,omitempty" json:"uri,omitempty"`

	Unresolvable bool `xml:"unresolvable,attr,omitempty" json:"unresolvable,omitempty"`
}

type ArrayOfModuleComment struct {
	ModuleComment []*ModuleComment `xml:"ModuleComment,omitempty" json:"ModuleComment,omitempty"`
}

type Module struct {
	AllowedWITypes *ArrayOfEnumOptionId `xml:"allowedWITypes,omitempty" json:"allowedWITypes,omitempty"`

	AreLinksFromParentToChild bool `xml:"areLinksFromParentToChild,omitempty" json:"areLinksFromParentToChild,omitempty"`

	Author *User `xml:"author,omitempty" json:"author,omitempty"`

	AutoSuspect bool `xml:"autoSuspect,omitempty" json:"autoSuspect,omitempty"`

	BranchedFrom *Module `xml:"branchedFrom,omitempty" json:"branchedFrom,omitempty"`

	BranchedWithQuery string `xml:"branchedWithQuery,omitempty" json:"branchedWithQuery,omitempty"`

	Comments *ArrayOfModuleComment `xml:"comments,omitempty" json:"comments,omitempty"`

	Created soap.XSDDateTime `xml:"created,omitempty" json:"created,omitempty"`

	DerivedFields *ArrayOfstring `xml:"derivedFields,omitempty" json:"derivedFields,omitempty"`

	DerivedFromURI *SubterraURI `xml:"derivedFromURI,omitempty" json:"derivedFromURI,omitempty"`

	DerivedFromLinkRole *EnumOptionId `xml:"derivedFromLinkRole,omitempty" json:"derivedFromLinkRole,omitempty"`

	HeadingSidebarFields string `xml:"headingSidebarFields,omitempty" json:"headingSidebarFields,omitempty"`

	HomePageContent *Text `xml:"homePageContent,omitempty" json:"homePageContent,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	LinkedOslcResources *ArrayOfLinkedOslcResource `xml:"linkedOslcResources,omitempty" json:"linkedOslcResources,omitempty"`

	Location *Location `xml:"location,omitempty" json:"location,omitempty"`

	ModuleAbsoluteLocation *Location `xml:"moduleAbsoluteLocation,omitempty" json:"moduleAbsoluteLocation,omitempty"`

	ModuleFolder string `xml:"moduleFolder,omitempty" json:"moduleFolder,omitempty"`

	ModuleLocation *Location `xml:"moduleLocation,omitempty" json:"moduleLocation,omitempty"`

	ModuleName string `xml:"moduleName,omitempty" json:"moduleName,omitempty"`

	Project *Project `xml:"project,omitempty" json:"project,omitempty"`

	Status *EnumOptionId `xml:"status,omitempty" json:"status,omitempty"`

	StructureLinkRole *EnumOptionId `xml:"structureLinkRole,omitempty" json:"structureLinkRole,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	Type_ *EnumOptionId `xml:"type,omitempty" json:"type,omitempty"`

	Updated soap.XSDDateTime `xml:"updated,omitempty" json:"updated,omitempty"`

	UpdatedBy *User `xml:"updatedBy,omitempty" json:"updatedBy,omitempty"`

	UsesOutlineNumbering bool `xml:"usesOutlineNumbering,omitempty" json:"usesOutlineNumbering,omitempty"`

	VariantURI *SubterraURI `xml:"variantURI,omitempty" json:"variantURI,omitempty"`

	CustomFields *ArrayOfCustom `xml:"customFields,omitempty" json:"customFields,omitempty"`

	Uri *SubterraURI `xml:"uri,attr,omitempty" json:"uri,omitempty"`

	Unresolvable bool `xml:"unresolvable,attr,omitempty" json:"unresolvable,omitempty"`
}

type WikiPageAttachment struct {
	Author *User `xml:"author,omitempty" json:"author,omitempty"`

	FileName string `xml:"fileName,omitempty" json:"fileName,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	Length int64 `xml:"length,omitempty" json:"length,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	Updated soap.XSDDateTime `xml:"updated,omitempty" json:"updated,omitempty"`

	Url string `xml:"url,omitempty" json:"url,omitempty"`

	Uri *SubterraURI `xml:"uri,attr,omitempty" json:"uri,omitempty"`

	Unresolvable bool `xml:"unresolvable,attr,omitempty" json:"unresolvable,omitempty"`
}

type ArrayOfWikiPageAttachment struct {
	WikiPageAttachment []*WikiPageAttachment `xml:"WikiPageAttachment,omitempty" json:"WikiPageAttachment,omitempty"`
}

type WikiPage struct {
	Attachments *ArrayOfWikiPageAttachment `xml:"attachments,omitempty" json:"attachments,omitempty"`

	Author *User `xml:"author,omitempty" json:"author,omitempty"`

	Created soap.XSDDateTime `xml:"created,omitempty" json:"created,omitempty"`

	HomePageContent *Text `xml:"homePageContent,omitempty" json:"homePageContent,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	LinkedPageURIs *ArrayOfSubterraURI `xml:"linkedPageURIs,omitempty" json:"linkedPageURIs,omitempty"`

	Location *Location `xml:"location,omitempty" json:"location,omitempty"`

	PageLocation *Location `xml:"pageLocation,omitempty" json:"pageLocation,omitempty"`

	PageName string `xml:"pageName,omitempty" json:"pageName,omitempty"`

	Project *Project `xml:"project,omitempty" json:"project,omitempty"`

	SpaceId string `xml:"spaceId,omitempty" json:"spaceId,omitempty"`

	Title string `xml:"title,omitempty" json:"title,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`

	Updated soap.XSDDateTime `xml:"updated,omitempty" json:"updated,omitempty"`

	UpdatedBy *User `xml:"updatedBy,omitempty" json:"updatedBy,omitempty"`

	Uri *SubterraURI `xml:"uri,attr,omitempty" json:"uri,omitempty"`

	Unresolvable bool `xml:"unresolvable,attr,omitempty" json:"unresolvable,omitempty"`
}

type ActivitySource struct {
	Id *string `xml:"id,omitempty" json:"id,omitempty"`

	Prefix *string `xml:"prefix,omitempty" json:"prefix,omitempty"`

	Types *ArrayOf_xsd_string `xml:"types,omitempty" json:"types,omitempty"`
}

type ArrayOfPriorityOptionId struct {
	PriorityOptionId []*PriorityOptionId `xml:"PriorityOptionId,omitempty" json:"PriorityOptionId,omitempty"`
}

type PriorityOpt struct {
	*EnumOption

	Float float32 `xml:"float,omitempty" json:"float,omitempty"`
}

type EnumCustomFieldType struct {
	*CustomFieldType

	EnumId *string `xml:"enumId,omitempty" json:"enumId,omitempty"`
}

type Row struct {
	Values *ArrayOfText `xml:"values,omitempty" json:"values,omitempty"`
}

type ArrayOfRow struct {
	Row []*Row `xml:"Row,omitempty" json:"Row,omitempty"`
}

type Table struct {
	Keys *ArrayOfstring `xml:"keys,omitempty" json:"keys,omitempty"`

	Rows *ArrayOfRow `xml:"rows,omitempty" json:"rows,omitempty"`
}

type User struct {
	Description *Text `xml:"description,omitempty" json:"description,omitempty"`

	DisabledNotifications bool `xml:"disabledNotifications,omitempty" json:"disabledNotifications,omitempty"`

	Email string `xml:"email,omitempty" json:"email,omitempty"`

	HomePageContent *Text `xml:"homePageContent,omitempty" json:"homePageContent,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	VoteURIs *ArrayOfSubterraURI `xml:"voteURIs,omitempty" json:"voteURIs,omitempty"`

	WatcheURIs *ArrayOfSubterraURI `xml:"watcheURIs,omitempty" json:"watcheURIs,omitempty"`

	Uri *SubterraURI `xml:"uri,attr,omitempty" json:"uri,omitempty"`

	Unresolvable bool `xml:"unresolvable,attr,omitempty" json:"unresolvable,omitempty"`
}

type Project struct {
	Active bool `xml:"active,omitempty" json:"active,omitempty"`

	Color string `xml:"color,omitempty" json:"color,omitempty"`

	Description *Text `xml:"description,omitempty" json:"description,omitempty"`

	Finish soap.XSDDate `xml:"finish,omitempty" json:"finish,omitempty"`

	Icon string `xml:"icon,omitempty" json:"icon,omitempty"`

	Id string `xml:"id,omitempty" json:"id,omitempty"`

	Lead *User `xml:"lead,omitempty" json:"lead,omitempty"`

	Location *Location `xml:"location,omitempty" json:"location,omitempty"`

	LockWorkRecordsDate soap.XSDDate `xml:"lockWorkRecordsDate,omitempty" json:"lockWorkRecordsDate,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	ProjectGroupURI *SubterraURI `xml:"projectGroupURI,omitempty" json:"projectGroupURI,omitempty"`

	Start soap.XSDDate `xml:"start,omitempty" json:"start,omitempty"`

	TrackerPrefix string `xml:"trackerPrefix,omitempty" json:"trackerPrefix,omitempty"`

	Uri *SubterraURI `xml:"uri,attr,omitempty" json:"uri,omitempty"`

	Unresolvable bool `xml:"unresolvable,attr,omitempty" json:"unresolvable,omitempty"`
}

type ArrayOfUser struct {
	User []*User `xml:"User,omitempty" json:"User,omitempty"`
}

type ArrayOf_xsd_anyType struct {
	Item []AnyType `xml:"item,omitempty" json:"item,omitempty"`
}

type ArrayOf_tns3_FieldDiff struct {
	Item []*FieldDiff `xml:"item,omitempty" json:"item,omitempty"`
}

type ArrayOf_xsd_string struct {
	Item []string `xml:"item,omitempty" json:"item,omitempty"`
}

type ArrayOf_tns3_ActivityCustomValueEntry struct {
	Item []*ActivityCustomValueEntry `xml:"item,omitempty" json:"item,omitempty"`
}

type ArrayOf_tns3_ActivityComment struct {
	Item []*ActivityComment `xml:"item,omitempty" json:"item,omitempty"`
}

type ArrayOf_tns2_Location struct {
	Item []*Location `xml:"item,omitempty" json:"item,omitempty"`
}

type TrackerWebService interface {
	/*
		Adds an approvee.
		@param workitemURI The URI of the Work Item to add an approvee to.
		@param approveeId The Id of the user to add as an approvee.    */
	AddApprovee(request *AddApprovee) (*AddApproveeResponse, error)

	AddApproveeContext(ctx context.Context, request *AddApprovee) (*AddApproveeResponse, error)

	/*
		Adds an assignee.
		@param workitemURI The URI of the Work Item to add the assignee to.
		@param assigneeId the Id of the user to add as an assignee.    */
	AddAssignee(request *AddAssignee) (*AddAssigneeResponse, error)

	AddAssigneeContext(ctx context.Context, request *AddAssignee) (*AddAssigneeResponse, error)

	/*
		Adds a Category to a Work Item.
		@param workitemURI The URI of the Work Item to add the Category to.
		@param categoryId The Id of the Category to add.    */
	AddCategory(request *AddCategory) (*AddCategoryResponse, error)

	AddCategoryContext(ctx context.Context, request *AddCategory) (*AddCategoryResponse, error)

	/*
		Adds a comment to a Work Item, Document, Test Run or as a reply to an existing comment.
		@param parentObjectUri The URI of the parent object (not null).
		@param title The title of the new comment or {@code null}.
		@param content The content of the new comment or {@code null}.
		@throws java.rmi.RemoteException if the title is not null in a Document or reply comment, or
		if the parent URI is of an object that does not support comments.
		@since 3.10.2    */
	AddComment(request *AddComment) (*AddCommentResponse, error)

	AddCommentContext(ctx context.Context, request *AddComment) (*AddCommentResponse, error)

	/*
		Adds a comment to the Activity.
		@param activityGlobalId The Activity's global Id (not null).
		@param commentText The comment's text (not null).
		@since 3.7.0    */
	AddCommentToActivity(request *AddCommentToActivity) (*AddCommentToActivityResponse, error)

	AddCommentToActivityContext(ctx context.Context, request *AddCommentToActivity) (*AddCommentToActivityResponse, error)

	/*
		Links a revision from an external repository.
		@param workitemURI The URI of the Work Item to add the revision to.
		@param repositoryName The Id of the external repository.
		@param revisionId The Id of the revision to add.
		@since 3.5.1    */
	AddExternalLinkedRevision(request *AddExternalLinkedRevision) (*AddExternalLinkedRevisionResponse, error)

	AddExternalLinkedRevisionContext(ctx context.Context, request *AddExternalLinkedRevision) (*AddExternalLinkedRevisionResponse, error)

	/*
		Adds an external linked Work Item.
		@param workitemURI The URI of the Work Item to add the link to.
		@param linkedExternalWorkitemURI The URI of the target external Work Item the link points to.
		@param role The role of the link to add.
		@since 3.5.0    */
	AddExternallyLinkedItem(request *AddExternallyLinkedItem) (*AddExternallyLinkedItemResponse, error)

	AddExternallyLinkedItemContext(ctx context.Context, request *AddExternallyLinkedItem) (*AddExternallyLinkedItemResponse, error)

	/*
		Adds a hyperlink.
		@param workitemURI The URI of the Work Item to add the hyperlink to.
		@param url The url of the hyperlink to add.
		@param role The role of the hyperlink to add.    */
	AddHyperlink(request *AddHyperlink) (*AddHyperlinkResponse, error)

	AddHyperlinkContext(ctx context.Context, request *AddHyperlink) (*AddHyperlinkResponse, error)

	/*
		Adds a linked Work Item.
		@param workitemURI The URI of the Work Item to add the link to.
		@param linkedWorkitemURI The URI of the target Work Item the link points to.
		@param role The role of the link to add.    */
	AddLinkedItem(request *AddLinkedItem) (*AddLinkedItemResponse, error)

	AddLinkedItemContext(ctx context.Context, request *AddLinkedItem) (*AddLinkedItemResponse, error)

	/*
		Adds a linked item to the specific Work Item with a revision.
		@param in0 workitemURI The URI of the Work Item to add the link to.
		@param in1 linkedWorkitemURI The URI of the target Work Item the link points to.
		@param in2 role The role of the linked item to add.
		@param in3 revision specific The revision for a linked item (null refers to the HEAD revision).
		@param in4 suspect true if the link should be marked with a suspect flag.
		@since 3.4.3    */
	AddLinkedItemWithRev(request *AddLinkedItemWithRev) (*AddLinkedItemWithRevResponse, error)

	AddLinkedItemWithRevContext(ctx context.Context, request *AddLinkedItemWithRev) (*AddLinkedItemWithRevResponse, error)

	/*
		Adds an OSLC item.
		@param workitemURI The URI of the Work Item to add the link to.
		@param linkedOslcItemURI The URI of the target resource the link points to.
		@param role The role of the link to add.
		@param label The label of the link to add.
		@since 3.10.2    */
	AddLinkedOslcItem(request *AddLinkedOslcItem) (*AddLinkedOslcItemResponse, error)

	AddLinkedOslcItemContext(ctx context.Context, request *AddLinkedOslcItem) (*AddLinkedOslcItemResponse, error)

	/*
		Links a revision.
		@param workitemURI The URI of the Work Item to add the revision to.
		@param revisionId The Id of the revision to add.    */
	AddLinkedRevision(request *AddLinkedRevision) (*AddLinkedRevisionResponse, error)

	AddLinkedRevisionContext(ctx context.Context, request *AddLinkedRevision) (*AddLinkedRevisionResponse, error)

	/*
		Adds a planing constraint.
		@param workitemURI The URI of the Work Item to add the planning constraint to.
		@param date The date of the planning constraint to add.
		@param constraint The type of constraint to add.    */
	AddPlaningContraint(request *AddPlaningContraint) (*AddPlaningContraintResponse, error)

	AddPlaningContraintContext(ctx context.Context, request *AddPlaningContraint) (*AddPlaningContraintResponse, error)

	/*
		Returns true if the Activity allows for comments.
		@param activityGlobalId The Activity's global Id (not null).
		@return true if Activity allows for comments. Otherwise false.
		@since 3.7.0    */
	CanCommentActivity(request *CanCommentActivity) (*CanCommentActivityResponse, error)

	CanCommentActivityContext(ctx context.Context, request *CanCommentActivity) (*CanCommentActivityResponse, error)

	/*
		Returns true if the current User can comment on the Activity.
		@param activityGlobalId The Activity's global Id (not null).
		@return true if the current user can comment on the Activity. Otherwise false.
		@since 3.7.0    */
	CanCurrentUserAddCommentToActivity(request *CanCurrentUserAddCommentToActivity) (*CanCurrentUserAddCommentToActivityResponse, error)

	CanCurrentUserAddCommentToActivityContext(ctx context.Context, request *CanCurrentUserAddCommentToActivity) (*CanCurrentUserAddCommentToActivityResponse, error)

	/*
		Creates a new attachment.
		@param workitemURI The URI of the Work Item to add the attachment to.
		@param fileName The fileName of the attachment.
		@param title The title of the attachment.
		@param data The content of the attachment.
		@since 3.3.1    */
	CreateAttachment(request *CreateAttachment) (*CreateAttachmentResponse, error)

	CreateAttachmentContext(ctx context.Context, request *CreateAttachment) (*CreateAttachmentResponse, error)

	/*
		Creates a Baseline from the head or particular revision.
		@param projectId The Project Id (not null).
		@param name the Baseline's name (not null).
		@param description The Baseline's description (can be null).
		@param revision The revision or a null value for the Head revision.
		@return The Created Baseline.
		@since 3.7.1    */
	CreateBaseline(request *CreateBaseline) (*CreateBaselineResponse, error)

	CreateBaselineContext(ctx context.Context, request *CreateBaseline) (*CreateBaselineResponse, error)

	/*
		Creates a comment.
		@param workitemURI The URI of the Work Item to create a comment for.
		@param content The content of the comment to create.
		@deprecated Use {@link #addComment(String, String, com.polarion.alm.ws.client.types.Text)}.    */
	CreateComment(request *CreateComment) (*CreateCommentResponse, error)

	CreateCommentContext(ctx context.Context, request *CreateComment) (*CreateCommentResponse, error)

	/*
		Creates a comment.
		@param parentURI The URI of the parent item (either a Work Item or another comment) to create the comment for.
		@param title The title of the comment.
		@param content The content of the comment to create.
		@param visibleTo Who this comment should be visible to.
		@since 3.1.2
		@deprecated Use {@link #addComment(String, String, com.polarion.alm.ws.client.types.Text)}.    */
	CreateCommentNew(request *CreateCommentNew) (*CreateCommentNewResponse, error)

	CreateCommentNewContext(ctx context.Context, request *CreateCommentNew) (*CreateCommentNewResponse, error)

	/*
		Creates a Document in the given location with the given parameters.
		@param projectId The Project Id (not null)
		@param location The document's Space location with one component or null for the default space. (Can be null.)
		@param documentName The Document's name (not null).
		@param documentTitle The Document's title (can be null).
		@param allowedWITypes A single Type can be specified. (Can be null.)
		@param structureLinkRole The role that defines the hierarchy of the Work Items inside the Document. (Not null.)
		@param homePageContent The HTML markup for a document home page. (Can be null).
		@return The URI of the created Document.
		@since 3.8.2    */
	CreateDocument(request *CreateDocument) (*CreateDocumentResponse, error)

	CreateDocumentContext(ctx context.Context, request *CreateDocument) (*CreateDocumentResponse, error)

	/*
		Creates an unreferenced comment in the Document.
		@param documentURI The Document SubterraURI.
		@param text The comment's text.
		@return The SubterraURI of the newly created comment
		@since 3.7.0
		@deprecated Use {@link #addComment(String, String, com.polarion.alm.ws.client.types.Text)}.    */
	CreateDocumentComment(request *CreateDocumentComment) (*CreateDocumentCommentResponse, error)

	CreateDocumentCommentContext(ctx context.Context, request *CreateDocumentComment) (*CreateDocumentCommentResponse, error)

	/*
		Creates a comment referring to a Work Item in the Document.
		@param documentURI The document SubterraURI.
		@param workItemURI The Work Item SubterraURI.
		@param text The comment's text.
		@return The SubterraURI of the newly created comment.
		@since 3.7.0    */
	CreateDocumentCommentReferringWI(request *CreateDocumentCommentReferringWI) (*CreateDocumentCommentReferringWIResponse, error)

	CreateDocumentCommentReferringWIContext(ctx context.Context, request *CreateDocumentCommentReferringWI) (*CreateDocumentCommentReferringWIResponse, error)

	/*
		Creates a comment as a reply to a given parent Comment in the Document.
		@param parentURI The parent comment SubterraURI.
		@param text The comment's text.
		@return The SubterraURI of the newly created comment.
		@since 3.7.0
		@deprecated Use {@link #addComment(String, String, com.polarion.alm.ws.client.types.Text)}.    */
	CreateDocumentCommentReply(request *CreateDocumentCommentReply) (*CreateDocumentCommentReplyResponse, error)

	CreateDocumentCommentReplyContext(ctx context.Context, request *CreateDocumentCommentReply) (*CreateDocumentCommentReplyResponse, error)

	/*
		Creates and returns a sub folder for parentName folder, if it is not {@code null}, otherwise it creates a new folder under the "Documents & Pages" root Topic.
		@param projectId The project ID or null for the Global level.
		@param parentName (ID) must be unique for the whole folder hierarchy.
		@param name (ID) must be unique for the whole folder hierarchy.
		@param title The title for the folder.
		@since 3.18.1    */
	CreateFolder(request *CreateFolder) (*CreateFolderResponse, error)

	CreateFolderContext(ctx context.Context, request *CreateFolder) (*CreateFolderResponse, error)

	/*
		Creates a document or an old-style Module/Document in a given location with the given parameters.
		@param projectId the Project Id.
		@param location The document Space location with a single component (e.g. "_default" for the default space) or null for old-style Modules.
		@param moduleName The Document/Module name.
		@param allowedWITypes The allowed Work Item Types. Only one type can be specified.
		@param structureLinkRole The required, role that defines the hierarchy of Work Items inside the Module/Document.
		@param parentToChild Always false.
		@param homePageContent The HTML markup for a document home page or Wiki markup for the old-style Module home page or null if the default is OK.
		@return The URI of the created Module/Document.
		@since 3.4.1    */
	CreateModule(request *CreateModule) (*CreateModuleResponse, error)

	CreateModuleContext(ctx context.Context, request *CreateModule) (*CreateModuleResponse, error)

	/*
		Creates a new Work Item with the given content.
		The Project and the Type must be set or the Work Item will not be created.
		The URI MUST NOT be set, otherwise the creation will fail.
		To create a Work Item in a specific location e.g. a LiveDoc, set the location of the Work Item to the desired target location.
		To create a Work Item in a specific Module/Document, set the Module/Document of the Work Item to the desired target Module/Document.

		Please note that some fields in the newly created Work Item will not be changed:
		assignee, hyperlink, comment, category, created, updated, resolution, linkedWorkItem, linkedWorkItemsDerived, externallyLinkedWorkItems, approvals, workRecords, plannedEnd, plannedStart, plannedInURIs, planningConstraints, linkedRevisions, linkedRevisionsDerived, linkedOslcResources, attachments, outlineNumber

		Use other methods to adjust your Work Item e.g. createComment, addHyperlink, addAssignee, addLinkedItem, addCategory.
		@param content The content of the Work Item to be created.    */
	CreateWorkItem(request *CreateWorkItem) (*CreateWorkItemResponse, error)

	CreateWorkItemContext(ctx context.Context, request *CreateWorkItem) (*CreateWorkItemResponse, error)

	/*
		Creates a Work Item at a specified position inside the Module/Document.
		@param moduleURI The Module/Document URI.
		@param parentWorkItemURI The URI of the parent Work Item or null.
		@param workItem The content of the Work Item to be created.
		@return The URI of the created Work Item.
		@since 3.4.1    */
	CreateWorkItemInModule(request *CreateWorkItemInModule) (*CreateWorkItemInModuleResponse, error)

	CreateWorkItemInModuleContext(ctx context.Context, request *CreateWorkItemInModule) (*CreateWorkItemInModuleResponse, error)

	/*
		Creates a Work Record.
		@param workitemURI The URI of the Work Item to create a Work Record for.
		@param user The user for the Work Record.
		@param date The date of the Work Record.
		@param timeSpent The time spent for the Work Record.    */
	CreateWorkRecord(request *CreateWorkRecord) (*CreateWorkRecordResponse, error)

	CreateWorkRecordContext(ctx context.Context, request *CreateWorkRecord) (*CreateWorkRecordResponse, error)

	/*
		Creates a Work Record.
		@param workitemURI The URI of the Work Item to create a Work Record for.
		@param user The user for the Work Record.
		@param date The date of the Work Record.
		@param type The Work Record Type.
		@param timeSpent The time spent on the Work Record.
		@param comment The Work Record comment.
		@since 3.4.2    */
	CreateWorkRecordWithTypeAndComment(request *CreateWorkRecordWithTypeAndComment) (*CreateWorkRecordWithTypeAndCommentResponse, error)

	CreateWorkRecordWithTypeAndCommentContext(ctx context.Context, request *CreateWorkRecordWithTypeAndComment) (*CreateWorkRecordWithTypeAndCommentResponse, error)

	/*
		Remove an attachment.
		@param workitemURI The URI of the Work Item containing the attachment to be removed.
		@param id The Id of the attachment to be removed.
		@since 3.3.1    */
	DeleteAttachment(request *DeleteAttachment) (*DeleteAttachmentResponse, error)

	DeleteAttachmentContext(ctx context.Context, request *DeleteAttachment) (*DeleteAttachmentResponse, error)

	/*
		Deletes the given Baseline.
		@param baselineURI The Baseline SubterraURI (not null).
		@since 3.7.1    */
	DeleteBaseline(request *DeleteBaseline) (*DeleteBaselineResponse, error)

	DeleteBaselineContext(ctx context.Context, request *DeleteBaseline) (*DeleteBaselineResponse, error)

	/*
		Deletes a Module/Document.
		@param moduleURI The URI of the Module/Document.
		@since 3.4.1    */
	DeleteModule(request *DeleteModule) (*DeleteModuleResponse, error)

	DeleteModuleContext(ctx context.Context, request *DeleteModule) (*DeleteModuleResponse, error)

	/*
		Deletes a Work Item.
		@param workitemURI The URI of the Work Item.
		@since 3.20.1    */
	DeleteWorkItem(request *DeleteWorkItem) (*DeleteWorkItemResponse, error)

	DeleteWorkItemContext(ctx context.Context, request *DeleteWorkItem) (*DeleteWorkItemResponse, error)

	/*
		Deletes a Work Record.
		@param workitemURI The URI of the Work Item to remove the work record from.
		@param workRecordURI The URI of the Work Record to remove.    */
	DeleteWorkRecord(request *DeleteWorkRecord) (*DeleteWorkRecordResponse, error)

	DeleteWorkRecordContext(ctx context.Context, request *DeleteWorkRecord) (*DeleteWorkRecordResponse, error)

	/*
		Triggers auto suspect.
		@param workitemURI The URI of the work item to trigger auto suspect for.    */
	DoAutoSuspect(request *DoAutoSuspect) (*DoAutoSuspectResponse, error)

	DoAutoSuspectContext(ctx context.Context, request *DoAutoSuspect) (*DoAutoSuspectResponse, error)

	/*
		Triggers autoassignement.
		@param workitemURI The URI of the Work Item to trigger autoassignement for.    */
	DoAutoassign(request *DoAutoassign) (*DoAutoassignResponse, error)

	DoAutoassignContext(ctx context.Context, request *DoAutoassign) (*DoAutoassignResponse, error)

	/*
		Changes the status of an approval.
		@param workitemURI The URI of the Work Item to execute the action for.
		@param approveeId The Id of the approvee.
		@param status The new status to set.    */
	EditApproval(request *EditApproval) (*EditApprovalResponse, error)

	EditApprovalContext(ctx context.Context, request *EditApproval) (*EditApprovalResponse, error)

	/*
		Export and download a document to PDF.
		@param uri Module/Document URI.
		@param exportPdfProperties Export parameters. They contain the following properties:
			paperSize - The size of the exported page. Possible values are A4 (Default), A3, Letter, Legal and Tabloid.
			orientation - The orientation of the page. Possible values are Portrait (Default) and Landscape.
			fitToPageWidth - Set to True to fit the content to the width of the page. Default is True.
			generateBookmarks - Set to True to generate bookmarks. Default is False.
			includeHeaderFooter - Set to True to include a header, footer, and watermark. Default is True.
			repeatTableHeaders - Set to True to repeat table headers on every page. Default is True.
		@since 3.20.1    */
	ExportDocumentToPDF(request *ExportDocumentToPDF) (*ExportDocumentToPDFResponse, error)

	ExportDocumentToPDFContext(ctx context.Context, request *ExportDocumentToPDF) (*ExportDocumentToPDFResponse, error)

	/*
		Gets the Work Item's history.
		@param workitemURI The URI of the Work Item to get the history for.
		@param ignoredFields The fields that will be ignored (can be null).
		@param fieldOrder The order of fields (can be null).
		@since 3.3.0    */
	GenerateHistory(request *GenerateHistory) (*GenerateHistoryResponse, error)

	GenerateHistoryContext(ctx context.Context, request *GenerateHistory) (*GenerateHistoryResponse, error)

	/*
		Returns the Activity with the given global Id.
		@param activityGlobalId The Activity's global Id.
		@return The Activity.
		@since 3.7.0    */
	GetActivityByGlobalId(request *GetActivityByGlobalId) (*GetActivityByGlobalIdResponse, error)

	GetActivityByGlobalIdContext(ctx context.Context, request *GetActivityByGlobalId) (*GetActivityByGlobalIdResponse, error)

	/*
		Gets all enumeration option IDs.
		@param projectID The ID of the Project to get the options for.
		@param enumId The Id of the enumeration to get the options for.    */
	GetAllEnumOptionIdsForId(request *GetAllEnumOptionIdsForId) (*GetAllEnumOptionIdsForIdResponse, error)

	GetAllEnumOptionIdsForIdContext(ctx context.Context, request *GetAllEnumOptionIdsForId) (*GetAllEnumOptionIdsForIdResponse, error)

	/*
		Gets all enumeration option IDs.
		@param projectID The Id of the Project to get the options for.
		@param key The key of the field containing the enumeration to get the option Id for.    */
	GetAllEnumOptionIdsForKey(request *GetAllEnumOptionIdsForKey) (*GetAllEnumOptionIdsForKeyResponse, error)

	GetAllEnumOptionIdsForKeyContext(ctx context.Context, request *GetAllEnumOptionIdsForKey) (*GetAllEnumOptionIdsForKeyResponse, error)

	/*
		Gets all enumeration options.
		@param projectID The Id of the Project to get the options for.
		@param enumID The Id of the enumeration to get the options for.    */
	GetAllEnumOptionsForId(request *GetAllEnumOptionsForId) (*GetAllEnumOptionsForIdResponse, error)

	GetAllEnumOptionsForIdContext(ctx context.Context, request *GetAllEnumOptionsForId) (*GetAllEnumOptionsForIdResponse, error)

	/*
		Gets all enumeration options.
		@param projectID The Id of the Project to get the options for.
		@param key The key of the field containing the enumeration to get the options for.    */
	GetAllEnumOptionsForKey(request *GetAllEnumOptionsForKey) (*GetAllEnumOptionsForKeyResponse, error)

	GetAllEnumOptionsForKeyContext(ctx context.Context, request *GetAllEnumOptionsForKey) (*GetAllEnumOptionsForKeyResponse, error)

	/*
		Gets all allowed approvers.
		@param workitemURI The URI of the Work Item to get the allowed approvers for.
		@since 3.5.3    */
	GetAllowedApprovers(request *GetAllowedApprovers) (*GetAllowedApproversResponse, error)

	GetAllowedApproversContext(ctx context.Context, request *GetAllowedApprovers) (*GetAllowedApproversResponse, error)

	/*
		Gets all allowed assignees.
		@param workitemURI The URI of the Work Item to get the allowed assignees for.    */
	GetAllowedAssignees(request *GetAllowedAssignees) (*GetAllowedAssigneesResponse, error)

	GetAllowedAssigneesContext(ctx context.Context, request *GetAllowedAssignees) (*GetAllowedAssigneesResponse, error)

	/*
		Download an attachment.
		@param workitemURI The URI of the Work Item.
		@param attachmentId The ID of the attachment.
		@since 3.20.1    */
	GetAttachment(request *GetAttachment) (*GetAttachmentResponse, error)

	GetAttachmentContext(ctx context.Context, request *GetAttachment) (*GetAttachmentResponse, error)

	/*
		Gets the actions that can be used on the workflow object in its current state.
		The conditions of the action are checked and those with failed condition(s) are not returned.
		NOTE: The parameter name {@code workitemURI} is kept for backward compatibility,
		but the specified URI can refer to any WorkflowObject, e.g. WorkItem or Module.
		@param workitemURI The URI of the WorkflowObject to get the available actions from. (Should not be {@code null}.)
		@return The available actions.
		@throws IllegalArgumentException if parameter is {@code null}
		@see #performWorkflowAction(java.lang.String, int)
		@see #getUnavailableActions(java.lang.String)
	*/
	GetAvailableActions(request *GetAvailableActions) (*GetAvailableActionsResponse, error)

	GetAvailableActionsContext(ctx context.Context, request *GetAvailableActions) (*GetAvailableActionsResponse, error)

	/*
		Gets the available enumeration option IDs.
		@param workitemURI The URI of the Work Item to get the enumeration option IDs for.
		@param enumID The Id of the enumeration to get the option IDs for.    */
	GetAvailableEnumOptionIdsForId(request *GetAvailableEnumOptionIdsForId) (*GetAvailableEnumOptionIdsForIdResponse, error)

	GetAvailableEnumOptionIdsForIdContext(ctx context.Context, request *GetAvailableEnumOptionIdsForId) (*GetAvailableEnumOptionIdsForIdResponse, error)

	/*
		Gets the available enumeration option IDs.
		@param workitemURI The URI of the Work Item to get the enumeration option IDs for.
		@param key The Id of the enumeration to get the available option IDs for.    */
	GetAvailableEnumOptionIdsForKey(request *GetAvailableEnumOptionIdsForKey) (*GetAvailableEnumOptionIdsForKeyResponse, error)

	GetAvailableEnumOptionIdsForKeyContext(ctx context.Context, request *GetAvailableEnumOptionIdsForKey) (*GetAvailableEnumOptionIdsForKeyResponse, error)

	/*
		Gets the back linked Work Items.  (Work Items linking to the specified Work Item.)
		@param workitemURI The URI of the Work Item to get the back links for.    */
	GetBackLinkedWorkitems(request *GetBackLinkedWorkitems) (*GetBackLinkedWorkitemsResponse, error)

	GetBackLinkedWorkitemsContext(ctx context.Context, request *GetBackLinkedWorkitems) (*GetBackLinkedWorkitemsResponse, error)

	/*
		Get the categories defined for the give project id.    */
	GetCategories(request *GetCategories) (*GetCategoriesResponse, error)

	GetCategoriesContext(ctx context.Context, request *GetCategories) (*GetCategoriesResponse, error)

	/*
		Returns list of folders contained in this folder.
		@param projectId The project ID or null for the Global level.
		@param parentFolderId The parent folder name (ID).
		@return An array of child folders from this parent folder.
		@since 3.18.1    */
	GetChildFolders(request *GetChildFolders) (*GetChildFoldersResponse, error)

	GetChildFoldersContext(ctx context.Context, request *GetChildFolders) (*GetChildFoldersResponse, error)

	/*
		Gets a Work Item's custom field.
		@param workitemURI The URI of the Work Item to get the custom field from.
		@param key The custom field's key.    */
	GetCustomField(request *GetCustomField) (*GetCustomFieldResponse, error)

	GetCustomFieldContext(ctx context.Context, request *GetCustomField) (*GetCustomFieldResponse, error)

	/*
		Gets the names of defined custom fields.
		@param workitemURI the URI of the work item to get the defined custom fields for.    */
	GetCustomFieldKeys(request *GetCustomFieldKeys) (*GetCustomFieldKeysResponse, error)

	GetCustomFieldKeysContext(ctx context.Context, request *GetCustomFieldKeys) (*GetCustomFieldKeysResponse, error)

	/*
		Gets the custom field definitions for a specific Work Item.
		@param workitemURI The URI of the Work Item.
		@param key The key of the custom field.    */
	GetCustomFieldType(request *GetCustomFieldType) (*GetCustomFieldTypeResponse, error)

	GetCustomFieldTypeContext(ctx context.Context, request *GetCustomFieldType) (*GetCustomFieldTypeResponse, error)

	/*
		Gets all custom field definitions for a specific Work Item.
		@param workitemURI The URI of the Work Item.    */
	GetCustomFieldTypes(request *GetCustomFieldTypes) (*GetCustomFieldTypesResponse, error)

	GetCustomFieldTypesContext(ctx context.Context, request *GetCustomFieldTypes) (*GetCustomFieldTypesResponse, error)

	/*
		Returns the language definition for the default language. (Primarily to provide its label).
		@param projectId The Project Id (not null).
		@return The language definition or null if one is not defined.
		@since 3.6.1    */
	GetDefaultLanguageDefinition(request *GetDefaultLanguageDefinition) (*GetDefaultLanguageDefinitionResponse, error)

	GetDefaultLanguageDefinitionContext(ctx context.Context, request *GetDefaultLanguageDefinition) (*GetDefaultLanguageDefinitionResponse, error)

	/*
		Gets all custom field keys defined for a Work Item Type in a Project.
		@param projectID The Id of the Project.
		@param typeID The Work Item Type Id.    */
	GetDefinedCustomFieldKeys(request *GetDefinedCustomFieldKeys) (*GetDefinedCustomFieldKeysResponse, error)

	GetDefinedCustomFieldKeysContext(ctx context.Context, request *GetDefinedCustomFieldKeys) (*GetDefinedCustomFieldKeysResponse, error)

	/*
		Gets a custom field definition for a Work Item Type.
		@param projectID The Id of the Project.
		@param typeID The Work Item Type Id.
		@param key key of the custom field.    */
	GetDefinedCustomFieldType(request *GetDefinedCustomFieldType) (*GetDefinedCustomFieldTypeResponse, error)

	GetDefinedCustomFieldTypeContext(ctx context.Context, request *GetDefinedCustomFieldType) (*GetDefinedCustomFieldTypeResponse, error)

	/*
		Gets all custom field definitions for a Work Item Type.
		@param projectID The Id of the Project.
		@param typeID The Work Item Type Id.    */
	GetDefinedCustomFieldTypes(request *GetDefinedCustomFieldTypes) (*GetDefinedCustomFieldTypesResponse, error)

	GetDefinedCustomFieldTypesContext(ctx context.Context, request *GetDefinedCustomFieldTypes) (*GetDefinedCustomFieldTypesResponse, error)

	/*
		Returns Module/Document Spaces from given Project.
		@param projectId The Project Id (not null).
		@return An array of Space IDs (can be null).
		@since 3.6.3    */
	GetDocumentSpaces(request *GetDocumentSpaces) (*GetDocumentSpacesResponse, error)

	GetDocumentSpacesContext(ctx context.Context, request *GetDocumentSpaces) (*GetDocumentSpacesResponse, error)

	/*
		Gets duration time in hours
		@param duration The string representation of the duration time.
		@since 3.3.0    */
	GetDurationHours(request *GetDurationHours) (*GetDurationHoursResponse, error)

	GetDurationHoursContext(ctx context.Context, request *GetDurationHours) (*GetDurationHoursResponse, error)

	/*
		Gets the enumeration control key for the specified Work Item key.
		@param projectID The Id of the Project.
		@param enumID The Id of the enumeration to get the control key for.    */
	GetEnumControlKeyForId(request *GetEnumControlKeyForId) (*GetEnumControlKeyForIdResponse, error)

	GetEnumControlKeyForIdContext(ctx context.Context, request *GetEnumControlKeyForId) (*GetEnumControlKeyForIdResponse, error)

	/*
		Gets the enumeration control key for the specified Work Item key.
		@param projectID The Id of the Project.
		@param key The key of the field containing the enumeration to get the control key for.    */
	GetEnumControlKeyForKey(request *GetEnumControlKeyForKey) (*GetEnumControlKeyForKeyResponse, error)

	GetEnumControlKeyForKeyContext(ctx context.Context, request *GetEnumControlKeyForKey) (*GetEnumControlKeyForKeyResponse, error)

	/*
		Returns an instance of the IEnumOption of a given object URI and the enumeration Id.
		@param uri The SubterraURI (not null).
		@param enumId The Id of the enumeration.
		@return An instance of IEnumOption (not null).
		@since 3.6.3    */
	GetEnumOptionFromObjectUriForId(request *GetEnumOptionFromObjectUriForId) (*GetEnumOptionFromObjectUriForIdResponse, error)

	GetEnumOptionFromObjectUriForIdContext(ctx context.Context, request *GetEnumOptionFromObjectUriForId) (*GetEnumOptionFromObjectUriForIdResponse, error)

	/*
		Returns an instance of the IEnumOption of a given object URI, the Prototype name and the prototype object's key.
		@param uri The SubterraURI (not null)
		@param prototypeName The Prototype name.
		@param key The key of the given prototype object.
		@return The instance of the IEnumOption (not null).
		@since 3.6.3    */
	GetEnumOptionFromObjectUriForKey(request *GetEnumOptionFromObjectUriForKey) (*GetEnumOptionFromObjectUriForKeyResponse, error)

	GetEnumOptionFromObjectUriForKeyContext(ctx context.Context, request *GetEnumOptionFromObjectUriForKey) (*GetEnumOptionFromObjectUriForKeyResponse, error)

	/*
		Gets an enumeration option.
		@param workitemURI The URI of the Work Item to get the enumeration option for.
		@param enumID The Id of the enumeration.
		@param id The enumeration option Id.    */
	GetEnumOptionWithEnumId(request *GetEnumOptionWithEnumId) (*GetEnumOptionWithEnumIdResponse, error)

	GetEnumOptionWithEnumIdContext(ctx context.Context, request *GetEnumOptionWithEnumId) (*GetEnumOptionWithEnumIdResponse, error)

	/*
		Gets an enumeration option.
		@param workitemURI The URI of the Work Item to get the enumeration option for.
		@param key The key of the field containing the enumeration option value.
		@param id The enumeration option Id.    */
	GetEnumOptionWithKey(request *GetEnumOptionWithKey) (*GetEnumOptionWithKeyResponse, error)

	GetEnumOptionWithKeyContext(ctx context.Context, request *GetEnumOptionWithKey) (*GetEnumOptionWithKeyResponse, error)

	/*
		Gets the available enumeration options.
		@param workitemURI The URI of the Work Item to get the enumeration options for.
		@param enumID The id of the enumeration to get the options for.    */
	GetEnumOptionsForId(request *GetEnumOptionsForId) (*GetEnumOptionsForIdResponse, error)

	GetEnumOptionsForIdContext(ctx context.Context, request *GetEnumOptionsForId) (*GetEnumOptionsForIdResponse, error)

	/*
		Gets the available enumeration options.
		The control value is the string representation of the Work Item value at the field specified by the enumerations control key.
		@see #getEnumControlKeyForKey
		@see #getEnumControlKeyForId
		@param projectID The Id of the Project to get the options for.
		@param enumID The Id of the enumeration to get the options for.
		@param controlValue The string representation of the control value.    */
	GetEnumOptionsForIdWithControl(request *GetEnumOptionsForIdWithControl) (*GetEnumOptionsForIdWithControlResponse, error)

	GetEnumOptionsForIdWithControlContext(ctx context.Context, request *GetEnumOptionsForIdWithControl) (*GetEnumOptionsForIdWithControlResponse, error)

	/*
		Gets the available enumeration options.
		@param workitemURI The URI of the Work Item to get the enumeration options for.
		@param key The key of the field containing the enumeration to get the options for.    */
	GetEnumOptionsForKey(request *GetEnumOptionsForKey) (*GetEnumOptionsForKeyResponse, error)

	GetEnumOptionsForKeyContext(ctx context.Context, request *GetEnumOptionsForKey) (*GetEnumOptionsForKeyResponse, error)

	/*
		Gets the available enumeration options.
		The control value is the string representation of the Work Item value on the field specified by the enumerations control key.
		@see #getEnumControlKeyForKey
		@see #getEnumControlKeyForId
		@param projectID The Id of the Project to get the options for.
		@param key The key of the field containing the enumeration to get the options for.
		@param controlValue The string representation of the control value.    */
	GetEnumOptionsForKeyWithControl(request *GetEnumOptionsForKeyWithControl) (*GetEnumOptionsForKeyWithControlResponse, error)

	GetEnumOptionsForKeyWithControlContext(ctx context.Context, request *GetEnumOptionsForKeyWithControl) (*GetEnumOptionsForKeyWithControlResponse, error)

	/*
		Gets the available, filtered enumeration options.
		@param uri The URI of the peristent object to get the enumeration options for (not null).
		@param key The key of the field containing the enumeration to get the options for (not null).
		@param filter The Id of the enumeration option to use as the "from" value for the dependency mapping. (Can be null.)
		@since 3.8.1    */
	GetFilteredEnumOptionsForKey(request *GetFilteredEnumOptionsForKey) (*GetFilteredEnumOptionsForKeyResponse, error)

	GetFilteredEnumOptionsForKeyContext(ctx context.Context, request *GetFilteredEnumOptionsForKey) (*GetFilteredEnumOptionsForKeyResponse, error)

	/*
		Returns a folder specified by the Project and Folder name.
		@param projectId The Project Id or null for the Global level.
		@param folderName The name of the folder. (Not null.)
		@return The folder from the given Project or on the Global level.(Not null.)
		@since 3.8.3    */
	GetFolder(request *GetFolder) (*GetFolderResponse, error)

	GetFolderContext(ctx context.Context, request *GetFolder) (*GetFolderResponse, error)

	/*
		Returns the folder that the specified object is contained in. The object must implement the IFolderItem interface (e.g. Module). Otherwise returns null.
		@param objectURI The URI of the object. (Not null.)
		@return Folder for specified object. (Can be null.)
		@since 3.8.3    */
	GetFolderForURI(request *GetFolderForURI) (*GetFolderForURIResponse, error)

	GetFolderForURIContext(ctx context.Context, request *GetFolderForURI) (*GetFolderForURIResponse, error)

	/*
		Returns folders from the given Project or on the Global level.
		@param projectId The project Id or null for the Global level.
		@return An array of folders contained within the given Project or on the Global level.
		@since 3.8.3    */
	GetFolders(request *GetFolders) (*GetFoldersResponse, error)

	GetFoldersContext(ctx context.Context, request *GetFolders) (*GetFoldersResponse, error)

	/*
		Gets the initial workflow action for the specified object and
		returns {@code null} if there is no initial action for the corresponding workflow.
		NOTE: The parameter name {@code workitemURI} is kept for backward compatibility,
		but the specified URI can refer to any WorkflowObject, e.g. WorkItem or Module.
		@param workitemURI The URI of the WorkflowObject to get the available actions from. (Should not be {@code null}.)
		@return The initial workflow action, {@code null} if no action is configured.
		@throws IllegalArgumentException if parameter is {@code null}
		@see #resetWorkflow(java.lang.String)
		@since 3.4.3    */
	GetInitialWorkflowAction(request *GetInitialWorkflowAction) (*GetInitialWorkflowActionResponse, error)

	GetInitialWorkflowActionContext(ctx context.Context, request *GetInitialWorkflowAction) (*GetInitialWorkflowActionResponse, error)

	/*
		Gets the initial workflow action for a specific Work Item Type in the specific Project.
		@param projectId The Id of the Project to get the Work Item from.
		@param wiType The Work Item Type to get the available actions from. (Should not be {@code null}.)
		@return The initial workflow action, {@code null} if no initial action is configured.
		@throws IllegalArgumentException if wiType is {@code null}
		@see #getInitialWorkflowAction(java.lang.String)
		@since 3.6.1    */
	GetInitialWorkflowActionForProjectAndType(request *GetInitialWorkflowActionForProjectAndType) (*GetInitialWorkflowActionForProjectAndTypeResponse, error)

	GetInitialWorkflowActionForProjectAndTypeContext(ctx context.Context, request *GetInitialWorkflowActionForProjectAndType) (*GetInitialWorkflowActionForProjectAndTypeResponse, error)

	/*
		Returns the language definition for a given language.
		@param projectId The Project Id (not null).
		@param language The language Id (not null).
		@return The language definition or null if one is not defined.
		@since 3.6.1    */
	GetLanguageDefinition(request *GetLanguageDefinition) (*GetLanguageDefinitionResponse, error)

	GetLanguageDefinitionContext(ctx context.Context, request *GetLanguageDefinition) (*GetLanguageDefinitionResponse, error)

	/*
		Returns all language definitions. (Does not include the default language definition).
		@param projectId The Project Id (not null).
		@return All language definitions.
		@since 3.6.1    */
	GetLanguageDefinitions(request *GetLanguageDefinitions) (*GetLanguageDefinitionsResponse, error)

	GetLanguageDefinitionsContext(ctx context.Context, request *GetLanguageDefinitions) (*GetLanguageDefinitionsResponse, error)

	/*
		Returns a set of resources linked to the Work Item.
		@param workitemURI The URI of the Work Item to get linked resources from.
		@return An array of Linked Resources for the specified Work Item.
		@since 3.17.0
	*/
	GetLinkedResources(request *GetLinkedResources) (*GetLinkedResourcesResponse, error)

	GetLinkedResourcesContext(ctx context.Context, request *GetLinkedResources) (*GetLinkedResourcesResponse, error)

	/*
		Returns the localized description or the normal description if the localized one is not defined or is empty.
		@param uri The Work Item URI (not null).
		@param language The language Id or null for the default language.
		@return The localized description (can be null).
		@since 3.6.1    */
	GetLocalizedWorkItemDescription(request *GetLocalizedWorkItemDescription) (*GetLocalizedWorkItemDescriptionResponse, error)

	GetLocalizedWorkItemDescriptionContext(ctx context.Context, request *GetLocalizedWorkItemDescription) (*GetLocalizedWorkItemDescriptionResponse, error)

	/*
		Returns the Id of the field of a Work Item of a given Type that stores the localized description.
		@param projectId The Project Id (not null).
		@param language The language Id (not null).
		@param type The Work Item Type (not null).
		@return The Id of the field or null if it is not defined.
		@since 3.6.1    */
	GetLocalizedWorkItemDescriptionField(request *GetLocalizedWorkItemDescriptionField) (*GetLocalizedWorkItemDescriptionFieldResponse, error)

	GetLocalizedWorkItemDescriptionFieldContext(ctx context.Context, request *GetLocalizedWorkItemDescriptionField) (*GetLocalizedWorkItemDescriptionFieldResponse, error)

	/*
		Returns the localized title or normal title if the localized one is not defined or is empty.
		@param uri The Work Item URI (not null).
		@param language The language Id or null for the default language.
		@return The localized title (can be null).
		@since 3.6.1    */
	GetLocalizedWorkItemTitle(request *GetLocalizedWorkItemTitle) (*GetLocalizedWorkItemTitleResponse, error)

	GetLocalizedWorkItemTitleContext(ctx context.Context, request *GetLocalizedWorkItemTitle) (*GetLocalizedWorkItemTitleResponse, error)

	/*
		Returns the Id of the field of a Work Item of a given Type that stores the localized title.
		@param projectId The Project Id (not null).
		@param language The language Id (not null).
		@param type The Work Item Type (not null).
		@return The Id of the field or null if one is not defined.
		@since 3.6.1    */
	GetLocalizedWorkItemTitleField(request *GetLocalizedWorkItemTitleField) (*GetLocalizedWorkItemTitleFieldResponse, error)

	GetLocalizedWorkItemTitleFieldContext(ctx context.Context, request *GetLocalizedWorkItemTitleField) (*GetLocalizedWorkItemTitleFieldResponse, error)

	/*
		Retrieves the Module/Document on the given location.
		@param projectId The Project Id.
		@param location The encoded location of a retrieved Module/Document, relative to the Module/Document root in the given Project.
			Use the location with a revision set to retrieve a particular revision of the Module/Document.
		@since 3.4.1    */
	GetModuleByLocation(request *GetModuleByLocation) (*GetModuleByLocationResponse, error)

	GetModuleByLocationContext(ctx context.Context, request *GetModuleByLocation) (*GetModuleByLocationResponse, error)

	/*
		Retrieves the Module/Document on the given location with the given fields set.
		@param projectId The Project Id.
		@param location The encoded location of retrieved Module/Document, relative to Module/Document root in the given project.
			Use the location with a revision set to retrieve a particular revision of the Module/Document.
		@param fields The fields to fill in. For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@since 3.4.1    */
	GetModuleByLocationWithFields(request *GetModuleByLocationWithFields) (*GetModuleByLocationWithFieldsResponse, error)

	GetModuleByLocationWithFieldsContext(ctx context.Context, request *GetModuleByLocationWithFields) (*GetModuleByLocationWithFieldsResponse, error)

	/*
		Gets Module/Document with all fields filled.
		@param uri Module/Document URI
		@since 3.4.1    */
	GetModuleByUri(request *GetModuleByUri) (*GetModuleByUriResponse, error)

	GetModuleByUriContext(ctx context.Context, request *GetModuleByUri) (*GetModuleByUriResponse, error)

	/*
		Gets a Module/Document with given fields filled in.
		@param uri Module/Document URI
		@param fields The fields to fill in. For nested structures in the lists, use the following syntax to  only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@since 3.4.1    */
	GetModuleByUriWithFields(request *GetModuleByUriWithFields) (*GetModuleByUriWithFieldsResponse, error)

	GetModuleByUriWithFieldsContext(ctx context.Context, request *GetModuleByUriWithFields) (*GetModuleByUriWithFieldsResponse, error)

	/*
		Returns the Modules/Documents residing on the given location relative to the "modules" folder of the given project.
		@param projectId The Project Id (not null).
		@param location The serialized location relative to the "modules" folder.
		@return An array of Modules/Documents SubterraURIs. (One Module/Document SubterraURI if the location is the location of the Module/Document; can be null.)
		@since 3.6.3    */
	GetModuleUris(request *GetModuleUris) (*GetModuleUrisResponse, error)

	GetModuleUrisContext(ctx context.Context, request *GetModuleUris) (*GetModuleUrisResponse, error)

	/*
		Returns the URIs of Work Items contained in a given Module/Document under given parent
		(if specified).
		@param moduleURI The Module/Document URI.
		@param parentWorkItemURI The URI of the parent Work Item or null.
		@param deep true to return Work Items from the whole subtree.
		@since 3.4.1    */
	GetModuleWorkItemUris(request *GetModuleWorkItemUris) (*GetModuleWorkItemUrisResponse, error)

	GetModuleWorkItemUrisContext(ctx context.Context, request *GetModuleWorkItemUris) (*GetModuleWorkItemUrisResponse, error)

	/*
		Returns Work Items (with given fields set) contained in a given Module/Document under the given parent
		(if specified).
		@param moduleURI The Module/Document URI.
		@param parentWorkItemURI The URI of parent Work Item or null.
		@param deep true to return Work Items from the whole subtree.
		@param fields The fields to fill in. For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@since 3.4.1    */
	GetModuleWorkItems(request *GetModuleWorkItems) (*GetModuleWorkItemsResponse, error)

	GetModuleWorkItemsContext(ctx context.Context, request *GetModuleWorkItems) (*GetModuleWorkItemsResponse, error)

	/*
		Returns the Modules/Documents residing on the given location relative to the "modules" folder of the given project.
		@param projectId The Project Id (not null).
		@param location The serialized location relative to the "modules" folder.
		@return An array of Modules/Documents. (One Module/Document if the location is the location of the Module/Document; can be null.)
		@since 3.6.3    */
	GetModules(request *GetModules) (*GetModulesResponse, error)

	GetModulesContext(ctx context.Context, request *GetModules) (*GetModulesResponse, error)

	/*
		Returns the sub-folders of a given location relative to the "modules" folder of the given Project.
		@param projectId The Project Id (not null).
		@param location The serialized location relative to the "modules" folder.
		@return  An array of serialized locations (can be null).
		@since 3.6.3    */
	GetModulesSubFolders(request *GetModulesSubFolders) (*GetModulesSubFoldersResponse, error)

	GetModulesSubFoldersContext(ctx context.Context, request *GetModulesSubFolders) (*GetModulesSubFoldersResponse, error)

	/*
		Returns the Modules/Documents residing on the given location relative to the "modules" folder of the given project.
		@param projectId The Project Id (not null).
		@param location The serialized location relative to the "modules" folder.
		@param fields An array of field names to fill in the returned Modules/Documents (can be null). For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@return An array of Modules/Documents. (One Module/Document if the location is the location of the Module/Document; can be null.)
		@since 3.6.3    */
	GetModulesWithFields(request *GetModulesWithFields) (*GetModulesWithFieldsResponse, error)

	GetModulesWithFieldsContext(ctx context.Context, request *GetModulesWithFields) (*GetModulesWithFieldsResponse, error)

	/*
		Gets the length of one day
		@since 3.2.3    */
	GetOneDayLength(request *GetOneDayLength) (*GetOneDayLengthResponse, error)

	GetOneDayLengthContext(ctx context.Context, request *GetOneDayLength) (*GetOneDayLengthResponse, error)

	/*
		Gets a revision.
		@param repositoryName The repository name. (Put "default" for the default repository.)
		@param revisionId The revision name.
		@since 3.3.0    */
	GetRevision(request *GetRevision) (*GetRevisionResponse, error)

	GetRevisionContext(ctx context.Context, request *GetRevision) (*GetRevisionResponse, error)

	/*
		Gets a revision.
		@param revisionURI The URI of the revision.
		@since 3.3.0    */
	GetRevisionByUri(request *GetRevisionByUri) (*GetRevisionByUriResponse, error)

	GetRevisionByUriContext(ctx context.Context, request *GetRevisionByUri) (*GetRevisionByUriResponse, error)

	/*
		Returns all revisions for a specific URI.
		@param in0 uri the URI of the persistence object (Work Item, Module/Document, User, etc).
		@return all revisions for the specific URI.
		@since 3.4.3    */
	GetRevisions(request *GetRevisions) (*GetRevisionsResponse, error)

	GetRevisionsContext(ctx context.Context, request *GetRevisions) (*GetRevisionsResponse, error)

	/*
		Returns parent folders from the given Project or on the Global level. Sorted in ascending order by name (or title if present).
		@param projectId The project ID or null for the Global level.
		@return An array of folders contained within the given Project or on the Global level.
		@since 3.18.1    */
	GetRootFolders(request *GetRootFolders) (*GetRootFoldersResponse, error)

	GetRootFoldersContext(ctx context.Context, request *GetRootFolders) (*GetRootFoldersResponse, error)

	/*
		Gets the time points available for a Project.
		@param projectId The Id of the Projects to get the available time points for.    */
	GetTimepoints(request *GetTimepoints) (*GetTimepointsResponse, error)

	GetTimepointsContext(ctx context.Context, request *GetTimepoints) (*GetTimepointsResponse, error)

	/*
		Gets the actions that can not be used on the Work Item in the current state
		because of unsatisfied condition(s).
		The conditions of the action are checked and those with failed condition(s) are returned.
		The reason for unavailability is returned by {@link com.polarion.alm.ws.client.types.tracker.WorkflowAction#getUnavailabilityMessage()}.
		NOTE: The parameter name {@code workitemURI} is kept for backward compatibility,
		but the specified URI can refer to any WorkflowObject, e.g. WorkItem or Module.
		@param workitemURI the URI of the WorkflowObject to get the available actions from. (should not be {@code null})
		@return the unavailable actions
		@throws IllegalArgumentException if parameter is {@code null}
		@see #performWorkflowAction(java.lang.String, int)
		@see #getAvailableActions(java.lang.String)
		@since 3.6.1    */
	GetUnavailableActions(request *GetUnavailableActions) (*GetUnavailableActionsResponse, error)

	GetUnavailableActionsContext(ctx context.Context, request *GetUnavailableActions) (*GetUnavailableActionsResponse, error)

	/*
		Returns a Wiki Page with the given SubterraURI.
		@param uri The SubterraURI (not null).
		@return The Wiki Page (can be null).
		@since 3.6.3    */
	GetWikiPageByUri(request *GetWikiPageByUri) (*GetWikiPageByUriResponse, error)

	GetWikiPageByUriContext(ctx context.Context, request *GetWikiPageByUri) (*GetWikiPageByUriResponse, error)

	/*
		Returns a Wiki Page with the given SubterraURI.
		@param uri The SubterraURI (not null).
		@param fields An array of field names to fill in on the returned Wiki Pages (can be null).
		@return The Wiki Page (can be null).
		@since 3.6.3    */
	GetWikiPageByUriWithFields(request *GetWikiPageByUriWithFields) (*GetWikiPageByUriWithFieldsResponse, error)

	GetWikiPageByUriWithFieldsContext(ctx context.Context, request *GetWikiPageByUriWithFields) (*GetWikiPageByUriWithFieldsResponse, error)

	/*
		Returns Wiki Pages from a given Project and Space.
		@param projectId The Project Id (not null).
		@param spaceId The Space Id (not null).
		@return An array of Wiki Pages SubterraURIs (can be null).
		@since 3.6.3    */
	GetWikiPageUris(request *GetWikiPageUris) (*GetWikiPageUrisResponse, error)

	GetWikiPageUrisContext(ctx context.Context, request *GetWikiPageUris) (*GetWikiPageUrisResponse, error)

	/*
		Returns Wiki Pages from a given Project and Space.
		@param projectId The Project Id (not null).
		@param spaceId The Space Id (not null).
		@return An array of Wiki Pages (can be null).
		@since 3.6.3    */
	GetWikiPages(request *GetWikiPages) (*GetWikiPagesResponse, error)

	GetWikiPagesContext(ctx context.Context, request *GetWikiPages) (*GetWikiPagesResponse, error)

	/*
		Returns Wiki Pages from a given Project and Space.
		@param projectId The Project Id (not null).
		@param spaceId Space Id (not null).
		@param fields An array of field names to filled in on the returned Wiki Pages (can be null).
		@return An array of Wiki Pages (can be null).
		@since 3.6.3    */
	GetWikiPagesWithFields(request *GetWikiPagesWithFields) (*GetWikiPagesWithFieldsResponse, error)

	GetWikiPagesWithFieldsContext(ctx context.Context, request *GetWikiPagesWithFields) (*GetWikiPagesWithFieldsResponse, error)

	/*
		Returns Wiki spaces from a given Project.
		@param projectId The Project Id (not null).
		@return An array of Space Ids (can be null).
		@since 3.6.3    */
	GetWikiSpaces(request *GetWikiSpaces) (*GetWikiSpacesResponse, error)

	GetWikiSpacesContext(ctx context.Context, request *GetWikiSpaces) (*GetWikiSpacesResponse, error)

	/*
		Gets a Work Item with all fields set.
		@param projectId The Id of the project that contains the Work Item to get.
		@param workitemId The Id of the Work Item to get.    */
	GetWorkItemById(request *GetWorkItemById) (*GetWorkItemByIdResponse, error)

	GetWorkItemByIdContext(ctx context.Context, request *GetWorkItemById) (*GetWorkItemByIdResponse, error)

	/*
		Gets a Work Item with only the fields specified filled in with values. All other fields are not transmitted.
		@param projectId The Id of the project that contains the Work Item to get.
		@param workitemId The Id of the Work Item to get.
		@param keys The fields of the Work Item to fill in. For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).    */
	GetWorkItemByIdsWithFields(request *GetWorkItemByIdsWithFields) (*GetWorkItemByIdsWithFieldsResponse, error)

	GetWorkItemByIdsWithFieldsContext(ctx context.Context, request *GetWorkItemByIdsWithFields) (*GetWorkItemByIdsWithFieldsResponse, error)

	/*
		Gets a Work Item with all fields set.
		@param uri the URI of the work item to get.    */
	GetWorkItemByUri(request *GetWorkItemByUri) (*GetWorkItemByUriResponse, error)

	GetWorkItemByUriContext(ctx context.Context, request *GetWorkItemByUri) (*GetWorkItemByUriResponse, error)

	/*
		Gets a Work Item in the given revision with all fields set.
		Returns null if the work item did not exist in the revision.
		@param uri The URI of the Work Item to get.
		@param revision The revision of the Work Item to get.
		@since 3.4.2    */
	GetWorkItemByUriInRevision(request *GetWorkItemByUriInRevision) (*GetWorkItemByUriInRevisionResponse, error)

	GetWorkItemByUriInRevisionContext(ctx context.Context, request *GetWorkItemByUriInRevision) (*GetWorkItemByUriInRevisionResponse, error)

	/*
		Gets a Work Item in a given revision with only the fields specified filled in with values. All other fields are not transmitted.
		Returns null if the Work Item does not exist in the revision.
		@param uri The URI of the Work Item to get.
		@param revision The revision of the Work Item to get.
		@param keys The fields of the Work Item to fill in. For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@since 3.4.2    */
	GetWorkItemByUriInRevisionWithFields(request *GetWorkItemByUriInRevisionWithFields) (*GetWorkItemByUriInRevisionWithFieldsResponse, error)

	GetWorkItemByUriInRevisionWithFieldsContext(ctx context.Context, request *GetWorkItemByUriInRevisionWithFields) (*GetWorkItemByUriInRevisionWithFieldsResponse, error)

	/*
		Gets a Work Item with only the fields specified filled in with values. All other fields are not transmitted.
		@param uri The URI of the Work Item to get.
		@param keys The fields of the Work Item to fill in. For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).    */
	GetWorkItemByUriWithFields(request *GetWorkItemByUriWithFields) (*GetWorkItemByUriWithFieldsResponse, error)

	GetWorkItemByUriWithFieldsContext(ctx context.Context, request *GetWorkItemByUriWithFields) (*GetWorkItemByUriWithFieldsResponse, error)

	/*
		Counts the number of Work Items returned by the given query.
		@param query The Lucene query to be used.
		@since 3.3.0    */
	GetWorkItemsCount(request *GetWorkItemsCount) (*GetWorkItemsCountResponse, error)

	GetWorkItemsCountContext(ctx context.Context, request *GetWorkItemsCount) (*GetWorkItemsCountResponse, error)

	/*
		Gets Work Items linked to a revision.
		@param revisionURI The URI of the revision.
		@since 3.3.0    */
	GetWorkItemsLinkedToRevision(request *GetWorkItemsLinkedToRevision) (*GetWorkItemsLinkedToRevisionResponse, error)

	GetWorkItemsLinkedToRevisionContext(ctx context.Context, request *GetWorkItemsLinkedToRevision) (*GetWorkItemsLinkedToRevisionResponse, error)

	/*
		Gets Work Items linked to a revision.
		@param revisionURI The URI of the revision.
		@param keys The keys of the fields that should be filled in. For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@since 3.3.0    */
	GetWorkItemsLinkedToRevisionWithFields(request *GetWorkItemsLinkedToRevisionWithFields) (*GetWorkItemsLinkedToRevisionWithFieldsResponse, error)

	GetWorkItemsLinkedToRevisionWithFieldsContext(ctx context.Context, request *GetWorkItemsLinkedToRevisionWithFields) (*GetWorkItemsLinkedToRevisionWithFieldsResponse, error)

	/*
		Returns true if the History is available.
		@return true if the History is available. Otherwise false.
		@since 3.7.1    */
	IsHistoryAvailable(request *IsHistoryAvailable) (*IsHistoryAvailableResponse, error)

	IsHistoryAvailableContext(ctx context.Context, request *IsHistoryAvailable) (*IsHistoryAvailableResponse, error)

	/*
		Checks if the comment is in a resolved comments thread.
		@param commentURI The URI of the comment.
		@since 3.7.1    */
	IsResolvedComment(request *IsResolvedComment) (*IsResolvedCommentResponse, error)

	IsResolvedCommentContext(ctx context.Context, request *IsResolvedComment) (*IsResolvedCommentResponse, error)

	/*
		Returns all Activity Sources.
		@return array of Activity sources.
		@since 3.7.0    */
	ListActivitySources(request *ListActivitySources) (*ListActivitySourcesResponse, error)

	ListActivitySourcesContext(ctx context.Context, request *ListActivitySources) (*ListActivitySourcesResponse, error)

	/*
		Returns Activities within the default repository.
		@param query The Lucene query (can be null).
		@param count The number of results. (-1 will return all results.)
		@return An array of Activities.
		@since 3.7.0    */
	ListAllActivities(request *ListAllActivities) (*ListAllActivitiesResponse, error)

	ListAllActivitiesContext(ctx context.Context, request *ListAllActivities) (*ListAllActivitiesResponse, error)

	/*
		Returns the Activity global IDs within the default repository.
		@param query The Lucene query (can be null).
		@param count The number of results. (-1 will return all results.)
		@return An array of Activity global IDs.
		@since 3.7.0    */
	ListAllActivitiesGlobalIds(request *ListAllActivitiesGlobalIds) (*ListAllActivitiesGlobalIdsResponse, error)

	ListAllActivitiesGlobalIdsContext(ctx context.Context, request *ListAllActivitiesGlobalIds) (*ListAllActivitiesGlobalIdsResponse, error)

	/*
		Returns Activities within a given Project group.
		@param uri The SubterraURI (not null).
		@param query The Lucene query (can be null).
		@param count The number of results. (-1 will return all results.)
		@return An array of Activities.
		@since 3.7.0    */
	ListGroupActivities(request *ListGroupActivities) (*ListGroupActivitiesResponse, error)

	ListGroupActivitiesContext(ctx context.Context, request *ListGroupActivities) (*ListGroupActivitiesResponse, error)

	/*
		Returns global IDs of activities within given project group.
		@param uri The SubterraURI (not null).
		@param query The Lucene query (can be null).
		@param count The number of results. (-1 will return all results.)
		@return An array of Activity global IDs.
		@since 3.7.0    */
	ListGroupActivitiesGlobalIds(request *ListGroupActivitiesGlobalIds) (*ListGroupActivitiesGlobalIdsResponse, error)

	ListGroupActivitiesGlobalIdsContext(ctx context.Context, request *ListGroupActivitiesGlobalIds) (*ListGroupActivitiesGlobalIdsResponse, error)

	/*
		Returns activities within the given Project.
		@param projectId The Id of the Project (not null).
		@param query The Lucene query (can be null).
		@param count The number of results. (-1 will return all results.)
		@return An array of Activities.
		@since 3.7.0    */
	ListProjectActivities(request *ListProjectActivities) (*ListProjectActivitiesResponse, error)

	ListProjectActivitiesContext(ctx context.Context, request *ListProjectActivities) (*ListProjectActivitiesResponse, error)

	/*
		Returns the global IDs of Activities within the given Project.
		@param projectId The Id of the Project (not null).
		@param query The Lucene query (can be null).
		@param count The number of results. (-1 will return all results.)
		@return An array of Activity global IDs.
		@since 3.7.0    */
	ListProjectActivitiesGlobalIds(request *ListProjectActivitiesGlobalIds) (*ListProjectActivitiesGlobalIdsResponse, error)

	ListProjectActivitiesGlobalIdsContext(ctx context.Context, request *ListProjectActivitiesGlobalIds) (*ListProjectActivitiesGlobalIdsResponse, error)

	/*
		Moves a Work Item to a specific position in a Document.
		 If the Work Item is not yet inside the Document it will be moved into the Document.
		 Modules are also supported.
			@param workItemURI The URI of the Work Item to be moved.
			@param documentURI The URI of the Document.
			@param parentWorkItemURI The URI of the parent Work Item or {@code null} to insert it as the root.
			@param position The desired position in the list of children or a value < 0 to insert the Work Item at the end.
			(If the old and new parent are the same, then the moved Work Item is not counted.)
			@param retainDocumentFlow {@code true} to retain the position of the moved Work Item in the document flow, even if it means changing the parent.
			{@code false} to keep the desired parent, even if it means moving the Work Item to a different position.
			@since 3.7.0    */
	MoveWorkItemToDocument(request *MoveWorkItemToDocument) (*MoveWorkItemToDocumentResponse, error)

	MoveWorkItemToDocumentContext(ctx context.Context, request *MoveWorkItemToDocument) (*MoveWorkItemToDocumentResponse, error)

	/*
		Moves a Work Item to a specific position in a Module/Document.
		 If the Work Item is not yet inside the Module/Document it will be moved there.
		 Since 3.7.0 this no longer retains the document flow, but keeps the desired parent.
			@param workItemURI The URI of the Work Item to be moved.
			@param moduleURI The URI of the Module/Document.
			@param parentWorkItemURI The URI of the parent Work Item or {@code null} to insert it as the root.
			@param position The desired position in the list of children or a value < 0 to insert at the end.
			(If the old and new parent are the same, then the moved Work Item is not counted.)
			@deprecated Use {@link #moveWorkItemToDocument(String, String, String, int, boolean)}.
			@since 3.4.3    */
	MoveWorkItemToModule(request *MoveWorkItemToModule) (*MoveWorkItemToModuleResponse, error)

	MoveWorkItemToModuleContext(ctx context.Context, request *MoveWorkItemToModule) (*MoveWorkItemToModuleResponse, error)

	/*
		Executes a workflow action.
		The actions that can be performed can be received by {@link #getAvailableActions(java.lang.String)}.
		The workflow action is specified by {@link com.polarion.alm.ws.client.types.tracker.WorkflowAction#getActionId()}.
		NOTE: The parameter name {@code workitemURI} is kept for backward compatibility,
		but the specified URI can refer to any WorkflowObject, e.g. WorkItem or Module.
		@param workitemURI The URI of the WorkflowObject to execute the action for (should not be {@code null}).
		@param actionId The Id of the action to execute.
		@throws IllegalArgumentException if workitemURI parameter is {@code null}
		@see #getAvailableActions(java.lang.String)    */
	PerformWorkflowAction(request *PerformWorkflowAction) (*PerformWorkflowActionResponse, error)

	PerformWorkflowActionContext(ctx context.Context, request *PerformWorkflowAction) (*PerformWorkflowActionResponse, error)

	/*
		Queries for Baselines.
		@param query The Lucene query to be used.
		@param sort The field to be used for sorting.
		@since 3.4.2    */
	QueryBaselines(request *QueryBaselines) (*QueryBaselinesResponse, error)

	QueryBaselinesContext(ctx context.Context, request *QueryBaselines) (*QueryBaselinesResponse, error)

	/*
		Searches for Modules/Documents.
		@param query The Lucene query (can be null).
		@param sort The Lucene sort string (can be null).
		@param resultsLimit Set a limit on how many results to return. (-1 for unlimited.)
		@return An array of Modules/Documents SubterraURIs (can be null).
		@since 3.6.3    */
	QueryModuleUris(request *QueryModuleUris) (*QueryModuleUrisResponse, error)

	QueryModuleUrisContext(ctx context.Context, request *QueryModuleUris) (*QueryModuleUrisResponse, error)

	/*
		Searches for Modules/Documents.
		@param sqlQuery The SQL statement.
		@return An array of Modules/Documents SubterraURIs (can be null).
		@since 3.6.3    */
	QueryModuleUrisBySQL(request *QueryModuleUrisBySQL) (*QueryModuleUrisBySQLResponse, error)

	QueryModuleUrisBySQLContext(ctx context.Context, request *QueryModuleUrisBySQL) (*QueryModuleUrisBySQLResponse, error)

	/*
		Searches for Modules/Documents in a given Baseline.
		@param query The Lucene query (can be null).
		@param sort The Lucene sort string (can be null).
		@param baselineRevision The Baseline revision.
		@param resultsLimit Set a limit on how many results to return. (-1 for unlimited.)
		@return An array of Modules/Documents SubterraURIs (can be null).
		@since 3.6.3    */
	QueryModuleUrisInBaseline(request *QueryModuleUrisInBaseline) (*QueryModuleUrisInBaselineResponse, error)

	QueryModuleUrisInBaselineContext(ctx context.Context, request *QueryModuleUrisInBaseline) (*QueryModuleUrisInBaselineResponse, error)

	/*
		Searches for Modules/Documents in a given Baseline.
		@param sqlQuery The SQL statement.
		@param baselineRevision The Baseline revision.
		@return An array of Modules/Documents SubterraURIs (can be null).
		@since 3.6.3    */
	QueryModuleUrisInBaselineBySQL(request *QueryModuleUrisInBaselineBySQL) (*QueryModuleUrisInBaselineBySQLResponse, error)

	QueryModuleUrisInBaselineBySQLContext(ctx context.Context, request *QueryModuleUrisInBaselineBySQL) (*QueryModuleUrisInBaselineBySQLResponse, error)

	/*
		Searches for Modules/Documents.
		@param query The Lucene query (can be null).
		@param sort The Lucene sort string (can be null)
		@param fields An array of field names to fill in the returned Modules/Documents with. (Can be null.) For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@param resultsLimit Sets a limit on the number of results to return.(-1 to return all results without a limit.)
		@return An array of Modules/Documents (can be null).
		@since 3.6.3    */
	QueryModules(request *QueryModules) (*QueryModulesResponse, error)

	QueryModulesContext(ctx context.Context, request *QueryModules) (*QueryModulesResponse, error)

	/*
		Searches for Modules/Documents.
		@param sqlQuery The SQL statement.
		@param fields An array of field names to fill in the returned Modules/Documents with. (Can be null.) For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@return An array of Modules/Documents (can be null).
		@since 3.6.3    */
	QueryModulesBySQL(request *QueryModulesBySQL) (*QueryModulesBySQLResponse, error)

	QueryModulesBySQLContext(ctx context.Context, request *QueryModulesBySQL) (*QueryModulesBySQLResponse, error)

	/*
		Searches for the Modules/Documents in a given Baseline.
		@param query The Lucene query (can be null).
		@param sort The Lucene sort string (can be null).
		@param baselineRevision The Baseline revision
		@param fields An array of field names to fill in the returned Modules/Documents with. (Can be null.) For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@param resultsLimit how many results to return (-1 means everything)
		@return An array of Modules/Documents (can be null).
		@since 3.6.3    */
	QueryModulesInBaseline(request *QueryModulesInBaseline) (*QueryModulesInBaselineResponse, error)

	QueryModulesInBaselineContext(ctx context.Context, request *QueryModulesInBaseline) (*QueryModulesInBaselineResponse, error)

	/*
		Searches for Modules/Documents in a given Baseline.
		@param sqlQuery The SQL statement.
		@param baselineRevision The Baseline revision.
		@param fields An array of field names to fill in the returned Modules/Documents with. (Can be null.) For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@return An array of Modules/Documents (can be null).
		@since 3.6.3    */
	QueryModulesInBaselineBySQL(request *QueryModulesInBaselineBySQL) (*QueryModulesInBaselineBySQLResponse, error)

	QueryModulesInBaselineBySQLContext(ctx context.Context, request *QueryModulesInBaselineBySQL) (*QueryModulesInBaselineBySQLResponse, error)

	/*
		Queries for revisions.
		@param query The Lucene query to be used.
		@param sort The field to be used for sorting.
		@param includeInternal Whether internal Polarion commits should be included.
		@since 3.3.0    */
	QueryRevisionUris(request *QueryRevisionUris) (*QueryRevisionUrisResponse, error)

	QueryRevisionUrisContext(ctx context.Context, request *QueryRevisionUris) (*QueryRevisionUrisResponse, error)

	/*
		Queries for revisions.
		@param query The Lucene query to be used.
		@param sort The field to be used for sorting.
		@param fields The keys of the fields that should be filled in.
		@since 3.3.0    */
	QueryRevisions(request *QueryRevisions) (*QueryRevisionsResponse, error)

	QueryRevisionsContext(ctx context.Context, request *QueryRevisions) (*QueryRevisionsResponse, error)

	/*
		Searches for Wiki Pages.
		@param query The Lucene query (can be null).
		@param sort The Lucene sort string (can be null).
		@param resultsLimit Limit the number of results to return.(-1 for unlimited.)
		@return An array of Wiki Pages SubterraURIs (can be null).
		@since 3.6.3    */
	QueryWikiPageUris(request *QueryWikiPageUris) (*QueryWikiPageUrisResponse, error)

	QueryWikiPageUrisContext(ctx context.Context, request *QueryWikiPageUris) (*QueryWikiPageUrisResponse, error)

	/*
		Searches for Wiki Pages.
		@param sqlQuery The SQL statement.
		@return An array of Wiki Pages SubterraURIs (can be null).
		@since 3.6.3    */
	QueryWikiPageUrisBySQL(request *QueryWikiPageUrisBySQL) (*QueryWikiPageUrisBySQLResponse, error)

	QueryWikiPageUrisBySQLContext(ctx context.Context, request *QueryWikiPageUrisBySQL) (*QueryWikiPageUrisBySQLResponse, error)

	/*
		Searches for Wiki Pages in a given Baseline.
		@param query The Lucene query (can be null).
		@param sort The Lucene sort string (can be null).
		@param baselineRevision The Baseline revision.
		@param resultsLimit Limit the number of results to return.(-1 for unlimited.)
		@return An array of Wiki Pages SubterraURIs (can be null).
		@since 3.6.3    */
	QueryWikiPageUrisInBaseline(request *QueryWikiPageUrisInBaseline) (*QueryWikiPageUrisInBaselineResponse, error)

	QueryWikiPageUrisInBaselineContext(ctx context.Context, request *QueryWikiPageUrisInBaseline) (*QueryWikiPageUrisInBaselineResponse, error)

	/*
		Searches for Wiki Pages in the given Baseline.
		@param sqlQuery The SQL statement.
		@param baselineRevision The Baseline revision.
		@return An array of Wiki Pages SubterraURIs (can be null).
		@since 3.6.3    */
	QueryWikiPageUrisInBaselineBySQL(request *QueryWikiPageUrisInBaselineBySQL) (*QueryWikiPageUrisInBaselineBySQLResponse, error)

	QueryWikiPageUrisInBaselineBySQLContext(ctx context.Context, request *QueryWikiPageUrisInBaselineBySQL) (*QueryWikiPageUrisInBaselineBySQLResponse, error)

	/*
		Searches for Wiki Pages.
		@param query The Lucene query (can be null).
		@param sort The Lucene sort string (can be null).
		@param fields An array of field names to fill in on the returned Wiki Pages (can be null).
		@param resultsLimit Limit  the maximum number of results to return. (-1 for unlimited.)
		@return An array of Wiki Pages (can be null).
		@since 3.6.3    */
	QueryWikiPages(request *QueryWikiPages) (*QueryWikiPagesResponse, error)

	QueryWikiPagesContext(ctx context.Context, request *QueryWikiPages) (*QueryWikiPagesResponse, error)

	/*
		Searches for Wiki Pages.
		@param sqlQuery The SQL statement.
		@param fields An array of field names to fill in for the returned Wiki Pages. (Can be null.)
		@return An array of Wiki Pages (can be null).
		@since 3.6.3    */
	QueryWikiPagesBySQL(request *QueryWikiPagesBySQL) (*QueryWikiPagesBySQLResponse, error)

	QueryWikiPagesBySQLContext(ctx context.Context, request *QueryWikiPagesBySQL) (*QueryWikiPagesBySQLResponse, error)

	/*
		Searches for Wiki Pages in the given Baseline.
		@param query The Lucene query (can be null).
		@param sort The Lucene sort string (can be null).
		@param baselineRevision The Baseline revision.
		@param fields An array of field names to fill in on the returned Wiki Pages. (Can be null.)
		@param resultsLimit Limits the number of results to return. (-1 for unlimited.)
		@return An array of Wiki Pages (can be null).
		@since 3.6.3    */
	QueryWikiPagesInBaseline(request *QueryWikiPagesInBaseline) (*QueryWikiPagesInBaselineResponse, error)

	QueryWikiPagesInBaselineContext(ctx context.Context, request *QueryWikiPagesInBaseline) (*QueryWikiPagesInBaselineResponse, error)

	/*
		Searches for Wiki Pages in the given Baseline.
		@param sqlQuery The SQL statement.
		@param baselineRevision The Baseline revision.
		@param fields An array of field names to fill in on the returned Wiki Pages. (Can be null.)
		@return An array of Wiki Pages (can be null).
		@since 3.6.3    */
	QueryWikiPagesInBaselineBySQL(request *QueryWikiPagesInBaselineBySQL) (*QueryWikiPagesInBaselineBySQLResponse, error)

	QueryWikiPagesInBaselineBySQLContext(ctx context.Context, request *QueryWikiPagesInBaselineBySQL) (*QueryWikiPagesInBaselineBySQLResponse, error)

	/*
		Query the URIs of a Work Item.
		@param query The Lucene query.
		@param sort The key used to sort the result.    */
	QueryWorkItemUris(request *QueryWorkItemUris) (*QueryWorkItemUrisResponse, error)

	QueryWorkItemUrisContext(ctx context.Context, request *QueryWorkItemUris) (*QueryWorkItemUrisResponse, error)

	/*
		Query the URIs of Work Items.
		@param sqlQuery the SQL query.
		@since 3.6.0    */
	QueryWorkItemUrisBySQL(request *QueryWorkItemUrisBySQL) (*QueryWorkItemUrisBySQLResponse, error)

	QueryWorkItemUrisBySQLContext(ctx context.Context, request *QueryWorkItemUrisBySQL) (*QueryWorkItemUrisBySQLResponse, error)

	/*
		Queries for Work Item URIs in a Baseline.
		@param query The Lucene query to be used.
		@param sort The field to be used for sorting.
		@param baselineRevision The revision that the Work Items should be returned for.
		@since 3.6.0    */
	QueryWorkItemUrisInBaseline(request *QueryWorkItemUrisInBaseline) (*QueryWorkItemUrisInBaselineResponse, error)

	QueryWorkItemUrisInBaselineContext(ctx context.Context, request *QueryWorkItemUrisInBaseline) (*QueryWorkItemUrisInBaselineResponse, error)

	/*
		Searches for URIs of Work Items in the given Baseline revision.
		@param sqlQuery The SQL query.
		@param baselineRevision The Baseline revision that the Work Item should be returned for.
		@since 3.6.0    */
	QueryWorkItemUrisInBaselineBySQL(request *QueryWorkItemUrisInBaselineBySQL) (*QueryWorkItemUrisInBaselineBySQLResponse, error)

	QueryWorkItemUrisInBaselineBySQLContext(ctx context.Context, request *QueryWorkItemUrisInBaselineBySQL) (*QueryWorkItemUrisInBaselineBySQLResponse, error)

	/*
		Queries for Work Item URIs in a baseline with a given limit.
		@param query the Lucene query to be used.
		@param sort The field to be used for sorting.
		@param baselineRevision The revision that the Work Items should be returned for.
		@param resultsLimit The maximum number of returned Work Items. (-1 for unlimited.)
		@since 3.6.0    */
	QueryWorkItemUrisInBaselineLimited(request *QueryWorkItemUrisInBaselineLimited) (*QueryWorkItemUrisInBaselineLimitedResponse, error)

	QueryWorkItemUrisInBaselineLimitedContext(ctx context.Context, request *QueryWorkItemUrisInBaselineLimited) (*QueryWorkItemUrisInBaselineLimitedResponse, error)

	/*
		Query the URIs of a Work Item.
		@param query the Lucene query.
		@param sort The key used to sort the result.
		@param resultsLimit The maximum number of returned Work Items. (-1 for unlimited.)
		@since 3.3.0    */
	QueryWorkItemUrisLimited(request *QueryWorkItemUrisLimited) (*QueryWorkItemUrisLimitedResponse, error)

	QueryWorkItemUrisLimitedContext(ctx context.Context, request *QueryWorkItemUrisLimited) (*QueryWorkItemUrisLimitedResponse, error)

	/*
		Queries for Work Items.
		@param query The Lucene query to be used.
		@param sort The field to be used for sorting.
		@param fields The keys for the fields that should be filled in. For nested structures within the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).    */
	QueryWorkItems(request *QueryWorkItems) (*QueryWorkItemsResponse, error)

	QueryWorkItemsContext(ctx context.Context, request *QueryWorkItems) (*QueryWorkItemsResponse, error)

	/*
		Queries for Work Items.
		@param sqlQuery The SQL query.
		@param fields The keys of the fields that should be filled in. For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@since 3.6.0    */
	QueryWorkItemsBySQL(request *QueryWorkItemsBySQL) (*QueryWorkItemsBySQLResponse, error)

	QueryWorkItemsBySQLContext(ctx context.Context, request *QueryWorkItemsBySQL) (*QueryWorkItemsBySQLResponse, error)

	/*
		Queries for Work Items in a given Baseline.
		@param query The Lucene query to be used.
		@param sort The field to be used for sorting.
		@param baselineRevision The revision that the Work Items should be returned for.
		@param fields The keys of the fields that should be filled in. For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@since 3.6.0    */
	QueryWorkItemsInBaseline(request *QueryWorkItemsInBaseline) (*QueryWorkItemsInBaselineResponse, error)

	QueryWorkItemsInBaselineContext(ctx context.Context, request *QueryWorkItemsInBaseline) (*QueryWorkItemsInBaselineResponse, error)

	/*
		Searches for Work Items in a given Baseline revision.
		@param sqlQuery The SQL query.
		@param baselineRevision The Baseline revision in that the Work Items should be returned for.
		@param fields The keys of the fields that should be filled in. For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@since 3.6.0    */
	QueryWorkItemsInBaselineBySQL(request *QueryWorkItemsInBaselineBySQL) (*QueryWorkItemsInBaselineBySQLResponse, error)

	QueryWorkItemsInBaselineBySQLContext(ctx context.Context, request *QueryWorkItemsInBaselineBySQL) (*QueryWorkItemsInBaselineBySQLResponse, error)

	/*
		Queries for Work Items in a Baseline with a given limit.
		@param query The Lucene query to be used.
		@param sort The field to be used for sorting.
		@param baselineRevision The revision that the Work Items should be returned for.
		@param fields The keys of the fields that should be filled in. For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@param resultsLimit The maximum number of returned Work Items. (-1 for unlimited.)
		@since 3.6.0    */
	QueryWorkItemsInBaselineLimited(request *QueryWorkItemsInBaselineLimited) (*QueryWorkItemsInBaselineLimitedResponse, error)

	QueryWorkItemsInBaselineLimitedContext(ctx context.Context, request *QueryWorkItemsInBaselineLimited) (*QueryWorkItemsInBaselineLimitedResponse, error)

	/*
		Queries for Work Items. The search is done in the current state of the Work Items, but the Work Items
		are returned in the state of the given revision. Work Items that were deleted since the revision are not returned.
		@param query The Lucene query to be used.
		@param sort The field to be used for sorting.
		@param revision The revision that the Work Items should be returned to.
		@param fields The keys of the fields that should be filled in. For nested structures within the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax:  customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@since 3.4.2    */
	QueryWorkItemsInRevision(request *QueryWorkItemsInRevision) (*QueryWorkItemsInRevisionResponse, error)

	QueryWorkItemsInRevisionContext(ctx context.Context, request *QueryWorkItemsInRevision) (*QueryWorkItemsInRevisionResponse, error)

	/*
		Queries for Work Items. The search is done in current state of the Work Items, but the Work Items
		are returned in the state they are in for the given revision. Work Items that were deleted since the revision are not returned.
		@param query The Lucene query to be used.
		@param sort The field to be used for sorting.
		@param revision The revision that the Work Items should be returned for.
		@param fields The keys of the fields that should be filled in. For nested structures in the lists, use the following syntax to only include a subset of fields: myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@param resultsLimit maximal returned number of workitems (-1 means no limit)
		@since 3.4.2    */
	QueryWorkItemsInRevisionLimited(request *QueryWorkItemsInRevisionLimited) (*QueryWorkItemsInRevisionLimitedResponse, error)

	QueryWorkItemsInRevisionLimitedContext(ctx context.Context, request *QueryWorkItemsInRevisionLimited) (*QueryWorkItemsInRevisionLimitedResponse, error)

	/*
		Queries for Work Items.
		@param query The Lucene query to be used.
		@param sort The field to be used for sorting.
		@param fields The keys of the fields that should be filled in. For nested structures within the lists, use the following syntax to only include a subset of fields:  myList.LIST.key (e.g. linkedWorkItems.LIST.role).
		For custom fields, specify which fields to be filled in using the following syntax: customFields.CUSTOM_FIELD_ID (e.g. customFields.risk).
		@param resultsLimit The maximum number of returned Work Items. (-1 for unlimited.)
		@since 3.3.0    */
	QueryWorkItemsLimited(request *QueryWorkItemsLimited) (*QueryWorkItemsLimitedResponse, error)

	QueryWorkItemsLimitedContext(ctx context.Context, request *QueryWorkItemsLimited) (*QueryWorkItemsLimitedResponse, error)

	/*
		Removes an approving user.
		@param workitemURI The URI of the Work Item to remove the approvee from.
		@param approveeId The Id of the approving user to remove.    */
	RemoveApprovee(request *RemoveApprovee) (*RemoveApproveeResponse, error)

	RemoveApproveeContext(ctx context.Context, request *RemoveApprovee) (*RemoveApproveeResponse, error)

	/*
		Removes an assignee.
		@param workitemURI The URI of the Work Item to remove the assignee from.
		@param assigneeId the id of the user to add as an assignee.    */
	RemoveAssignee(request *RemoveAssignee) (*RemoveAssigneeResponse, error)

	RemoveAssigneeContext(ctx context.Context, request *RemoveAssignee) (*RemoveAssigneeResponse, error)

	/*
		Removes a Category.
		@param workitemURI The URI of the Work Item to remove the Category from.
		@param categoryId The Id of the Category to Remove.    */
	RemoveCategory(request *RemoveCategory) (*RemoveCategoryResponse, error)

	RemoveCategoryContext(ctx context.Context, request *RemoveCategory) (*RemoveCategoryResponse, error)

	/*
		Removes a revision from an external repository.
		@param workitemURI The URI of the Work Item to remove the linked revision from.
		@param repositoryName The Id of the external repository.
		@param revisionId The Id of the revision to remove.
		@since 3.5.1    */
	RemoveExternalLinkedRevision(request *RemoveExternalLinkedRevision) (*RemoveExternalLinkedRevisionResponse, error)

	RemoveExternalLinkedRevisionContext(ctx context.Context, request *RemoveExternalLinkedRevision) (*RemoveExternalLinkedRevisionResponse, error)

	/*
		Removes an external linked item.
		@param workitemURI The URI of the Work Item to remove the linked item from.
		@param linkedExternalWorkitemURI The URI of the linked item to remove.
		@param role The role of the linked item to remove.
		@since 3.5.0    */
	RemoveExternallyLinkedItem(request *RemoveExternallyLinkedItem) (*RemoveExternallyLinkedItemResponse, error)

	RemoveExternallyLinkedItemContext(ctx context.Context, request *RemoveExternallyLinkedItem) (*RemoveExternallyLinkedItemResponse, error)

	/*
		Removes a hyperlink.
		@param workitemURI The URI of the Work Item to remove the hyperlink from.
		@param url The url of the hyperlink to remove.    */
	RemoveHyperlink(request *RemoveHyperlink) (*RemoveHyperlinkResponse, error)

	RemoveHyperlinkContext(ctx context.Context, request *RemoveHyperlink) (*RemoveHyperlinkResponse, error)

	/*
		Removes a linked item.
		@param workitemURI The URI of the Work Item to remove the linked item from.
		@param linkedItemURI The URI of the linked item to remove.
		@param role The role of the linked item to remove.    */
	RemoveLinkedItem(request *RemoveLinkedItem) (*RemoveLinkedItemResponse, error)

	RemoveLinkedItemContext(ctx context.Context, request *RemoveLinkedItem) (*RemoveLinkedItemResponse, error)

	/*
		Removes a revision.
		@param workitemURI The URI of the Work Item to remove the linked revision from.
		@param revisionId The Id of the revision to remove.    */
	RemoveLinkedRevision(request *RemoveLinkedRevision) (*RemoveLinkedRevisionResponse, error)

	RemoveLinkedRevisionContext(ctx context.Context, request *RemoveLinkedRevision) (*RemoveLinkedRevisionResponse, error)

	/*
		Removes a planing constraint.
		@param workitemURI The URI of the Work Item to remove the planning constraint from.
		@param date The date of the planning constraint to remove.
		@param constraint The Type of constraint to remove.    */
	RemovePlaningConstraint(request *RemovePlaningConstraint) (*RemovePlaningConstraintResponse, error)

	RemovePlaningConstraintContext(ctx context.Context, request *RemovePlaningConstraint) (*RemovePlaningConstraintResponse, error)

	/*
		Resets the workflow for the specified object.
		Performs an initial action if it exists and sets the initial status.
		@param workflowObjectURI The URI of the WorkflowObject (should not be {@code null}).
		@throws IllegalArgumentException if the parameter is {@code null}.
		@since 3.8.1    */
	ResetWorkflow(request *ResetWorkflow) (*ResetWorkflowResponse, error)

	ResetWorkflowContext(ctx context.Context, request *ResetWorkflow) (*ResetWorkflowResponse, error)

	/*
		Creates a new Document based on an existing Document.
		@param sourceURI The URI of the source Document. (Not null.)
		@param targetProjectId The target Project Id. (Not null.)
		@param targetLocation The document's Space location with one component or null for the default space. (Can be null.)
		@param targetName The target Document's name. (Not null.)
		@param targetTitle The target Document's title. (Can be null.)
		@param updateTitleInDocument if true then the first title found in the document will be changed to the targetTitle value. (If permissions allow it).
		@param linkRole The role of links going from a reused Work Item to its source Work Item or null to not create links unless the
			derivedFields are specified. If this is the case, the links will be created with the default role.  (Can be null.)
		@param derivedFields The fields that are derived from the source Document. (See updateDerivedModule.) (Can be null.)
		@return The URI of the created Document.
		@since 3.8.2    */
	ReuseDocument(request *ReuseDocument) (*ReuseDocumentResponse, error)

	ReuseDocumentContext(ctx context.Context, request *ReuseDocument) (*ReuseDocumentResponse, error)

	/*
		Creates new Module/Document based on the existing Module/Document.
		@param sourceURI The URI of the source Module/Document.
		@param targetProjectId The target project Id.
		@param targetLocation ignored
		@param targetName The target Module/Document name.
		@param linkRole The role of links going from a reused Work Item to a source Work Item or null to not create links unless
			the derivedFields are specified. (If so, the links will be created with the default role.)
		@param fields ignored
		@param exceptFields ignored
		@param derivedFields The fields that are derived from the source Module/Document (see updateDerivedModule).
		@return The URI of the created Module/Document.
		@since 3.4.1    */
	ReuseModule(request *ReuseModule) (*ReuseModuleResponse, error)

	ReuseModuleContext(ctx context.Context, request *ReuseModule) (*ReuseModuleResponse, error)

	/*
		Sets the tags of a comment.
		@param commentURI The URI of the comment.
		@param tags The tags to set.
		@since 3.7.1    */
	SetCommentTags(request *SetCommentTags) (*SetCommentTagsResponse, error)

	SetCommentTagsContext(ctx context.Context, request *SetCommentTags) (*SetCommentTagsResponse, error)

	/*
		Sets a custom field of a Work Item.
		@param customField The custom field to set.    */
	SetCustomField(request *SetCustomField) (*SetCustomFieldResponse, error)

	SetCustomFieldContext(ctx context.Context, request *SetCustomField) (*SetCustomFieldResponse, error)

	/*
		Sets a field to null.
		@param workitemURI The URI of the Work Item to set a fields null for.
		@param fields The keys of the fields to set null.    */
	SetFieldsNull(request *SetFieldsNull) (*SetFieldsNullResponse, error)

	SetFieldsNullContext(ctx context.Context, request *SetFieldsNull) (*SetFieldsNullResponse, error)

	/*
		Sets the localized description.
		@param uri The Work Item URI (not null).
		@param language The language Id (must be defined) or null for the default language.
		@param description The description (can be null).
		@since 3.6.1    */
	SetLocalizedWorkItemDescription(request *SetLocalizedWorkItemDescription) (*SetLocalizedWorkItemDescriptionResponse, error)

	SetLocalizedWorkItemDescriptionContext(ctx context.Context, request *SetLocalizedWorkItemDescription) (*SetLocalizedWorkItemDescriptionResponse, error)

	/*
		Sets the localized title.
		@param uri The Work Item URI (not null).
		@param language The language Id (must be defined) or null for the default language.
		@param title The title (can be null).
		@since 3.6.1    */
	SetLocalizedWorkItemTitle(request *SetLocalizedWorkItemTitle) (*SetLocalizedWorkItemTitleResponse, error)

	SetLocalizedWorkItemTitleContext(ctx context.Context, request *SetLocalizedWorkItemTitle) (*SetLocalizedWorkItemTitleResponse, error)

	/*
		Sets the state of the comment to "Resolved". Can only be used for root comments.
		@param commentURI The URI of the comment.
		@param resolved The new resolved state.
		@since 3.7.1    */
	SetResolvedComment(request *SetResolvedComment) (*SetResolvedCommentResponse, error)

	SetResolvedCommentContext(ctx context.Context, request *SetResolvedComment) (*SetResolvedCommentResponse, error)

	/*
		Update an existing attachment.
		@param workitemURI The URI of the Work Item containing the attachment to be updated.
		@param id The Id of the attachment to be updated.
		@param fileName The new filename, will be ignored if null is used.
		@param title The new title, will be ignored if null is used.
		@param data The new content, will be ignored if null is used.
		@since 3.3.1    */
	UpdateAttachment(request *UpdateAttachment) (*UpdateAttachmentResponse, error)

	UpdateAttachmentContext(ctx context.Context, request *UpdateAttachment) (*UpdateAttachmentResponse, error)

	/*
		Updates the given Baseline.
		@param baseline The updated Baseline (not null).
		@since 3.7.1    */
	UpdateBaseline(request *UpdateBaseline) (*UpdateBaselineResponse, error)

	UpdateBaselineContext(ctx context.Context, request *UpdateBaseline) (*UpdateBaselineResponse, error)

	/*
		Updates derived Document to the new revision (Baseline).
		@param documentURI The derived document.
		@param revision Null refers to the HEAD revision
		@param autoSuspect
		@since 3.5.3    */
	UpdateDerivedDocument(request *UpdateDerivedDocument) (*UpdateDerivedDocumentResponse, error)

	UpdateDerivedDocumentContext(ctx context.Context, request *UpdateDerivedDocument) (*UpdateDerivedDocumentResponse, error)

	/*
		Updates derived the Module/Document to the new revision (Baseline).
		@param moduleURI The derived Module/Document.
		@param revision Null refers to the HEAD revision.
		@since 3.4.1    */
	UpdateDerivedModule(request *UpdateDerivedModule) (*UpdateDerivedModuleResponse, error)

	UpdateDerivedModuleContext(ctx context.Context, request *UpdateDerivedModule) (*UpdateDerivedModuleResponse, error)

	/*
		Updates a Module/Document.
		Changes for some fields of a passed Module (like array fields) are ignored when calling this method.
		@param module updated Module/Document
		@since 3.4.1    */
	UpdateModule(request *UpdateModule) (*UpdateModuleResponse, error)

	UpdateModuleContext(ctx context.Context, request *UpdateModule) (*UpdateModuleResponse, error)

	/*
		Updates the first Title Heading in the Document's content.
		@param documentURI The URI of the Document. (Not null.)
		@param title The Document title. (Can be null.)
		@return The URI of an updated Title Heading or null if no Title Heading in the Document's content was updated.
		@since 3.8.2    */
	UpdateTitleHeadingInDocument(request *UpdateTitleHeadingInDocument) (*UpdateTitleHeadingInDocumentResponse, error)

	UpdateTitleHeadingInDocumentContext(ctx context.Context, request *UpdateTitleHeadingInDocument) (*UpdateTitleHeadingInDocumentResponse, error)

	/*
		Updates a Work Item. The Work Item passed has to contain the valid URI of the Work Item being updated.
		Fields that are not transmitted will not be set on the target Work Item.
		Therefore only the changed fields and the URI should be sent to save resources.
		Please note that some fields in the updated Work Item: assignee, hyperlink, comment, category, id, created, updated,
		moduleURI, plannedEnd, plannedStart, plannedInURIs, planningConstraints, author, project, externallyLinkedWorkItems, linkedRevisions,
		linkedRevisionsDerived, linkedOslcResources, attachments, approvals, workRecords, outlineNumber will not be changed.
		Use other methods to adjust your updated Work Item e.g. createComment, addHyperlink, addAssignee, addLinkedItem, addCategory.
		@param content The altered content.    */
	UpdateWorkItem(request *UpdateWorkItem) (*UpdateWorkItemResponse, error)

	UpdateWorkItemContext(ctx context.Context, request *UpdateWorkItem) (*UpdateWorkItemResponse, error)
}

type trackerWebService struct {
	client *soap.Client
}

func NewTrackerWebService(client *soap.Client) TrackerWebService {
	return &trackerWebService{
		client: client,
	}
}

func (service *trackerWebService) AddApproveeContext(ctx context.Context, request *AddApprovee) (*AddApproveeResponse, error) {
	response := new(AddApproveeResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) AddApprovee(request *AddApprovee) (*AddApproveeResponse, error) {
	return service.AddApproveeContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) AddAssigneeContext(ctx context.Context, request *AddAssignee) (*AddAssigneeResponse, error) {
	response := new(AddAssigneeResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) AddAssignee(request *AddAssignee) (*AddAssigneeResponse, error) {
	return service.AddAssigneeContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) AddCategoryContext(ctx context.Context, request *AddCategory) (*AddCategoryResponse, error) {
	response := new(AddCategoryResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) AddCategory(request *AddCategory) (*AddCategoryResponse, error) {
	return service.AddCategoryContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) AddCommentContext(ctx context.Context, request *AddComment) (*AddCommentResponse, error) {
	response := new(AddCommentResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) AddComment(request *AddComment) (*AddCommentResponse, error) {
	return service.AddCommentContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) AddCommentToActivityContext(ctx context.Context, request *AddCommentToActivity) (*AddCommentToActivityResponse, error) {
	response := new(AddCommentToActivityResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) AddCommentToActivity(request *AddCommentToActivity) (*AddCommentToActivityResponse, error) {
	return service.AddCommentToActivityContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) AddExternalLinkedRevisionContext(ctx context.Context, request *AddExternalLinkedRevision) (*AddExternalLinkedRevisionResponse, error) {
	response := new(AddExternalLinkedRevisionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) AddExternalLinkedRevision(request *AddExternalLinkedRevision) (*AddExternalLinkedRevisionResponse, error) {
	return service.AddExternalLinkedRevisionContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) AddExternallyLinkedItemContext(ctx context.Context, request *AddExternallyLinkedItem) (*AddExternallyLinkedItemResponse, error) {
	response := new(AddExternallyLinkedItemResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) AddExternallyLinkedItem(request *AddExternallyLinkedItem) (*AddExternallyLinkedItemResponse, error) {
	return service.AddExternallyLinkedItemContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) AddHyperlinkContext(ctx context.Context, request *AddHyperlink) (*AddHyperlinkResponse, error) {
	response := new(AddHyperlinkResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) AddHyperlink(request *AddHyperlink) (*AddHyperlinkResponse, error) {
	return service.AddHyperlinkContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) AddLinkedItemContext(ctx context.Context, request *AddLinkedItem) (*AddLinkedItemResponse, error) {
	response := new(AddLinkedItemResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) AddLinkedItem(request *AddLinkedItem) (*AddLinkedItemResponse, error) {
	return service.AddLinkedItemContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) AddLinkedItemWithRevContext(ctx context.Context, request *AddLinkedItemWithRev) (*AddLinkedItemWithRevResponse, error) {
	response := new(AddLinkedItemWithRevResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) AddLinkedItemWithRev(request *AddLinkedItemWithRev) (*AddLinkedItemWithRevResponse, error) {
	return service.AddLinkedItemWithRevContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) AddLinkedOslcItemContext(ctx context.Context, request *AddLinkedOslcItem) (*AddLinkedOslcItemResponse, error) {
	response := new(AddLinkedOslcItemResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) AddLinkedOslcItem(request *AddLinkedOslcItem) (*AddLinkedOslcItemResponse, error) {
	return service.AddLinkedOslcItemContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) AddLinkedRevisionContext(ctx context.Context, request *AddLinkedRevision) (*AddLinkedRevisionResponse, error) {
	response := new(AddLinkedRevisionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) AddLinkedRevision(request *AddLinkedRevision) (*AddLinkedRevisionResponse, error) {
	return service.AddLinkedRevisionContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) AddPlaningContraintContext(ctx context.Context, request *AddPlaningContraint) (*AddPlaningContraintResponse, error) {
	response := new(AddPlaningContraintResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) AddPlaningContraint(request *AddPlaningContraint) (*AddPlaningContraintResponse, error) {
	return service.AddPlaningContraintContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CanCommentActivityContext(ctx context.Context, request *CanCommentActivity) (*CanCommentActivityResponse, error) {
	response := new(CanCommentActivityResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CanCommentActivity(request *CanCommentActivity) (*CanCommentActivityResponse, error) {
	return service.CanCommentActivityContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CanCurrentUserAddCommentToActivityContext(ctx context.Context, request *CanCurrentUserAddCommentToActivity) (*CanCurrentUserAddCommentToActivityResponse, error) {
	response := new(CanCurrentUserAddCommentToActivityResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CanCurrentUserAddCommentToActivity(request *CanCurrentUserAddCommentToActivity) (*CanCurrentUserAddCommentToActivityResponse, error) {
	return service.CanCurrentUserAddCommentToActivityContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CreateAttachmentContext(ctx context.Context, request *CreateAttachment) (*CreateAttachmentResponse, error) {
	response := new(CreateAttachmentResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CreateAttachment(request *CreateAttachment) (*CreateAttachmentResponse, error) {
	return service.CreateAttachmentContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CreateBaselineContext(ctx context.Context, request *CreateBaseline) (*CreateBaselineResponse, error) {
	response := new(CreateBaselineResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CreateBaseline(request *CreateBaseline) (*CreateBaselineResponse, error) {
	return service.CreateBaselineContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CreateCommentContext(ctx context.Context, request *CreateComment) (*CreateCommentResponse, error) {
	response := new(CreateCommentResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CreateComment(request *CreateComment) (*CreateCommentResponse, error) {
	return service.CreateCommentContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CreateCommentNewContext(ctx context.Context, request *CreateCommentNew) (*CreateCommentNewResponse, error) {
	response := new(CreateCommentNewResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CreateCommentNew(request *CreateCommentNew) (*CreateCommentNewResponse, error) {
	return service.CreateCommentNewContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CreateDocumentContext(ctx context.Context, request *CreateDocument) (*CreateDocumentResponse, error) {
	response := new(CreateDocumentResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CreateDocument(request *CreateDocument) (*CreateDocumentResponse, error) {
	return service.CreateDocumentContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CreateDocumentCommentContext(ctx context.Context, request *CreateDocumentComment) (*CreateDocumentCommentResponse, error) {
	response := new(CreateDocumentCommentResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CreateDocumentComment(request *CreateDocumentComment) (*CreateDocumentCommentResponse, error) {
	return service.CreateDocumentCommentContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CreateDocumentCommentReferringWIContext(ctx context.Context, request *CreateDocumentCommentReferringWI) (*CreateDocumentCommentReferringWIResponse, error) {
	response := new(CreateDocumentCommentReferringWIResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CreateDocumentCommentReferringWI(request *CreateDocumentCommentReferringWI) (*CreateDocumentCommentReferringWIResponse, error) {
	return service.CreateDocumentCommentReferringWIContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CreateDocumentCommentReplyContext(ctx context.Context, request *CreateDocumentCommentReply) (*CreateDocumentCommentReplyResponse, error) {
	response := new(CreateDocumentCommentReplyResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CreateDocumentCommentReply(request *CreateDocumentCommentReply) (*CreateDocumentCommentReplyResponse, error) {
	return service.CreateDocumentCommentReplyContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CreateFolderContext(ctx context.Context, request *CreateFolder) (*CreateFolderResponse, error) {
	response := new(CreateFolderResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CreateFolder(request *CreateFolder) (*CreateFolderResponse, error) {
	return service.CreateFolderContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CreateModuleContext(ctx context.Context, request *CreateModule) (*CreateModuleResponse, error) {
	response := new(CreateModuleResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CreateModule(request *CreateModule) (*CreateModuleResponse, error) {
	return service.CreateModuleContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CreateWorkItemContext(ctx context.Context, request *CreateWorkItem) (*CreateWorkItemResponse, error) {
	response := new(CreateWorkItemResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CreateWorkItem(request *CreateWorkItem) (*CreateWorkItemResponse, error) {
	return service.CreateWorkItemContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CreateWorkItemInModuleContext(ctx context.Context, request *CreateWorkItemInModule) (*CreateWorkItemInModuleResponse, error) {
	response := new(CreateWorkItemInModuleResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CreateWorkItemInModule(request *CreateWorkItemInModule) (*CreateWorkItemInModuleResponse, error) {
	return service.CreateWorkItemInModuleContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CreateWorkRecordContext(ctx context.Context, request *CreateWorkRecord) (*CreateWorkRecordResponse, error) {
	response := new(CreateWorkRecordResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CreateWorkRecord(request *CreateWorkRecord) (*CreateWorkRecordResponse, error) {
	return service.CreateWorkRecordContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) CreateWorkRecordWithTypeAndCommentContext(ctx context.Context, request *CreateWorkRecordWithTypeAndComment) (*CreateWorkRecordWithTypeAndCommentResponse, error) {
	response := new(CreateWorkRecordWithTypeAndCommentResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) CreateWorkRecordWithTypeAndComment(request *CreateWorkRecordWithTypeAndComment) (*CreateWorkRecordWithTypeAndCommentResponse, error) {
	return service.CreateWorkRecordWithTypeAndCommentContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) DeleteAttachmentContext(ctx context.Context, request *DeleteAttachment) (*DeleteAttachmentResponse, error) {
	response := new(DeleteAttachmentResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) DeleteAttachment(request *DeleteAttachment) (*DeleteAttachmentResponse, error) {
	return service.DeleteAttachmentContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) DeleteBaselineContext(ctx context.Context, request *DeleteBaseline) (*DeleteBaselineResponse, error) {
	response := new(DeleteBaselineResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) DeleteBaseline(request *DeleteBaseline) (*DeleteBaselineResponse, error) {
	return service.DeleteBaselineContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) DeleteModuleContext(ctx context.Context, request *DeleteModule) (*DeleteModuleResponse, error) {
	response := new(DeleteModuleResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) DeleteModule(request *DeleteModule) (*DeleteModuleResponse, error) {
	return service.DeleteModuleContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) DeleteWorkItemContext(ctx context.Context, request *DeleteWorkItem) (*DeleteWorkItemResponse, error) {
	response := new(DeleteWorkItemResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) DeleteWorkItem(request *DeleteWorkItem) (*DeleteWorkItemResponse, error) {
	return service.DeleteWorkItemContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) DeleteWorkRecordContext(ctx context.Context, request *DeleteWorkRecord) (*DeleteWorkRecordResponse, error) {
	response := new(DeleteWorkRecordResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) DeleteWorkRecord(request *DeleteWorkRecord) (*DeleteWorkRecordResponse, error) {
	return service.DeleteWorkRecordContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) DoAutoSuspectContext(ctx context.Context, request *DoAutoSuspect) (*DoAutoSuspectResponse, error) {
	response := new(DoAutoSuspectResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) DoAutoSuspect(request *DoAutoSuspect) (*DoAutoSuspectResponse, error) {
	return service.DoAutoSuspectContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) DoAutoassignContext(ctx context.Context, request *DoAutoassign) (*DoAutoassignResponse, error) {
	response := new(DoAutoassignResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) DoAutoassign(request *DoAutoassign) (*DoAutoassignResponse, error) {
	return service.DoAutoassignContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) EditApprovalContext(ctx context.Context, request *EditApproval) (*EditApprovalResponse, error) {
	response := new(EditApprovalResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) EditApproval(request *EditApproval) (*EditApprovalResponse, error) {
	return service.EditApprovalContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) ExportDocumentToPDFContext(ctx context.Context, request *ExportDocumentToPDF) (*ExportDocumentToPDFResponse, error) {
	response := new(ExportDocumentToPDFResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) ExportDocumentToPDF(request *ExportDocumentToPDF) (*ExportDocumentToPDFResponse, error) {
	return service.ExportDocumentToPDFContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GenerateHistoryContext(ctx context.Context, request *GenerateHistory) (*GenerateHistoryResponse, error) {
	response := new(GenerateHistoryResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GenerateHistory(request *GenerateHistory) (*GenerateHistoryResponse, error) {
	return service.GenerateHistoryContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetActivityByGlobalIdContext(ctx context.Context, request *GetActivityByGlobalId) (*GetActivityByGlobalIdResponse, error) {
	response := new(GetActivityByGlobalIdResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetActivityByGlobalId(request *GetActivityByGlobalId) (*GetActivityByGlobalIdResponse, error) {
	return service.GetActivityByGlobalIdContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetAllEnumOptionIdsForIdContext(ctx context.Context, request *GetAllEnumOptionIdsForId) (*GetAllEnumOptionIdsForIdResponse, error) {
	response := new(GetAllEnumOptionIdsForIdResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetAllEnumOptionIdsForId(request *GetAllEnumOptionIdsForId) (*GetAllEnumOptionIdsForIdResponse, error) {
	return service.GetAllEnumOptionIdsForIdContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetAllEnumOptionIdsForKeyContext(ctx context.Context, request *GetAllEnumOptionIdsForKey) (*GetAllEnumOptionIdsForKeyResponse, error) {
	response := new(GetAllEnumOptionIdsForKeyResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetAllEnumOptionIdsForKey(request *GetAllEnumOptionIdsForKey) (*GetAllEnumOptionIdsForKeyResponse, error) {
	return service.GetAllEnumOptionIdsForKeyContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetAllEnumOptionsForIdContext(ctx context.Context, request *GetAllEnumOptionsForId) (*GetAllEnumOptionsForIdResponse, error) {
	response := new(GetAllEnumOptionsForIdResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetAllEnumOptionsForId(request *GetAllEnumOptionsForId) (*GetAllEnumOptionsForIdResponse, error) {
	return service.GetAllEnumOptionsForIdContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetAllEnumOptionsForKeyContext(ctx context.Context, request *GetAllEnumOptionsForKey) (*GetAllEnumOptionsForKeyResponse, error) {
	response := new(GetAllEnumOptionsForKeyResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetAllEnumOptionsForKey(request *GetAllEnumOptionsForKey) (*GetAllEnumOptionsForKeyResponse, error) {
	return service.GetAllEnumOptionsForKeyContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetAllowedApproversContext(ctx context.Context, request *GetAllowedApprovers) (*GetAllowedApproversResponse, error) {
	response := new(GetAllowedApproversResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetAllowedApprovers(request *GetAllowedApprovers) (*GetAllowedApproversResponse, error) {
	return service.GetAllowedApproversContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetAllowedAssigneesContext(ctx context.Context, request *GetAllowedAssignees) (*GetAllowedAssigneesResponse, error) {
	response := new(GetAllowedAssigneesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetAllowedAssignees(request *GetAllowedAssignees) (*GetAllowedAssigneesResponse, error) {
	return service.GetAllowedAssigneesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetAttachmentContext(ctx context.Context, request *GetAttachment) (*GetAttachmentResponse, error) {
	response := new(GetAttachmentResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetAttachment(request *GetAttachment) (*GetAttachmentResponse, error) {
	return service.GetAttachmentContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetAvailableActionsContext(ctx context.Context, request *GetAvailableActions) (*GetAvailableActionsResponse, error) {
	response := new(GetAvailableActionsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetAvailableActions(request *GetAvailableActions) (*GetAvailableActionsResponse, error) {
	return service.GetAvailableActionsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetAvailableEnumOptionIdsForIdContext(ctx context.Context, request *GetAvailableEnumOptionIdsForId) (*GetAvailableEnumOptionIdsForIdResponse, error) {
	response := new(GetAvailableEnumOptionIdsForIdResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetAvailableEnumOptionIdsForId(request *GetAvailableEnumOptionIdsForId) (*GetAvailableEnumOptionIdsForIdResponse, error) {
	return service.GetAvailableEnumOptionIdsForIdContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetAvailableEnumOptionIdsForKeyContext(ctx context.Context, request *GetAvailableEnumOptionIdsForKey) (*GetAvailableEnumOptionIdsForKeyResponse, error) {
	response := new(GetAvailableEnumOptionIdsForKeyResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetAvailableEnumOptionIdsForKey(request *GetAvailableEnumOptionIdsForKey) (*GetAvailableEnumOptionIdsForKeyResponse, error) {
	return service.GetAvailableEnumOptionIdsForKeyContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetBackLinkedWorkitemsContext(ctx context.Context, request *GetBackLinkedWorkitems) (*GetBackLinkedWorkitemsResponse, error) {
	response := new(GetBackLinkedWorkitemsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetBackLinkedWorkitems(request *GetBackLinkedWorkitems) (*GetBackLinkedWorkitemsResponse, error) {
	return service.GetBackLinkedWorkitemsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetCategoriesContext(ctx context.Context, request *GetCategories) (*GetCategoriesResponse, error) {
	response := new(GetCategoriesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetCategories(request *GetCategories) (*GetCategoriesResponse, error) {
	return service.GetCategoriesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetChildFoldersContext(ctx context.Context, request *GetChildFolders) (*GetChildFoldersResponse, error) {
	response := new(GetChildFoldersResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetChildFolders(request *GetChildFolders) (*GetChildFoldersResponse, error) {
	return service.GetChildFoldersContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetCustomFieldContext(ctx context.Context, request *GetCustomField) (*GetCustomFieldResponse, error) {
	response := new(GetCustomFieldResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetCustomField(request *GetCustomField) (*GetCustomFieldResponse, error) {
	return service.GetCustomFieldContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetCustomFieldKeysContext(ctx context.Context, request *GetCustomFieldKeys) (*GetCustomFieldKeysResponse, error) {
	response := new(GetCustomFieldKeysResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetCustomFieldKeys(request *GetCustomFieldKeys) (*GetCustomFieldKeysResponse, error) {
	return service.GetCustomFieldKeysContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetCustomFieldTypeContext(ctx context.Context, request *GetCustomFieldType) (*GetCustomFieldTypeResponse, error) {
	response := new(GetCustomFieldTypeResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetCustomFieldType(request *GetCustomFieldType) (*GetCustomFieldTypeResponse, error) {
	return service.GetCustomFieldTypeContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetCustomFieldTypesContext(ctx context.Context, request *GetCustomFieldTypes) (*GetCustomFieldTypesResponse, error) {
	response := new(GetCustomFieldTypesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetCustomFieldTypes(request *GetCustomFieldTypes) (*GetCustomFieldTypesResponse, error) {
	return service.GetCustomFieldTypesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetDefaultLanguageDefinitionContext(ctx context.Context, request *GetDefaultLanguageDefinition) (*GetDefaultLanguageDefinitionResponse, error) {
	response := new(GetDefaultLanguageDefinitionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetDefaultLanguageDefinition(request *GetDefaultLanguageDefinition) (*GetDefaultLanguageDefinitionResponse, error) {
	return service.GetDefaultLanguageDefinitionContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetDefinedCustomFieldKeysContext(ctx context.Context, request *GetDefinedCustomFieldKeys) (*GetDefinedCustomFieldKeysResponse, error) {
	response := new(GetDefinedCustomFieldKeysResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetDefinedCustomFieldKeys(request *GetDefinedCustomFieldKeys) (*GetDefinedCustomFieldKeysResponse, error) {
	return service.GetDefinedCustomFieldKeysContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetDefinedCustomFieldTypeContext(ctx context.Context, request *GetDefinedCustomFieldType) (*GetDefinedCustomFieldTypeResponse, error) {
	response := new(GetDefinedCustomFieldTypeResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetDefinedCustomFieldType(request *GetDefinedCustomFieldType) (*GetDefinedCustomFieldTypeResponse, error) {
	return service.GetDefinedCustomFieldTypeContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetDefinedCustomFieldTypesContext(ctx context.Context, request *GetDefinedCustomFieldTypes) (*GetDefinedCustomFieldTypesResponse, error) {
	response := new(GetDefinedCustomFieldTypesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetDefinedCustomFieldTypes(request *GetDefinedCustomFieldTypes) (*GetDefinedCustomFieldTypesResponse, error) {
	return service.GetDefinedCustomFieldTypesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetDocumentSpacesContext(ctx context.Context, request *GetDocumentSpaces) (*GetDocumentSpacesResponse, error) {
	response := new(GetDocumentSpacesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetDocumentSpaces(request *GetDocumentSpaces) (*GetDocumentSpacesResponse, error) {
	return service.GetDocumentSpacesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetDurationHoursContext(ctx context.Context, request *GetDurationHours) (*GetDurationHoursResponse, error) {
	response := new(GetDurationHoursResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetDurationHours(request *GetDurationHours) (*GetDurationHoursResponse, error) {
	return service.GetDurationHoursContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetEnumControlKeyForIdContext(ctx context.Context, request *GetEnumControlKeyForId) (*GetEnumControlKeyForIdResponse, error) {
	response := new(GetEnumControlKeyForIdResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetEnumControlKeyForId(request *GetEnumControlKeyForId) (*GetEnumControlKeyForIdResponse, error) {
	return service.GetEnumControlKeyForIdContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetEnumControlKeyForKeyContext(ctx context.Context, request *GetEnumControlKeyForKey) (*GetEnumControlKeyForKeyResponse, error) {
	response := new(GetEnumControlKeyForKeyResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetEnumControlKeyForKey(request *GetEnumControlKeyForKey) (*GetEnumControlKeyForKeyResponse, error) {
	return service.GetEnumControlKeyForKeyContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetEnumOptionFromObjectUriForIdContext(ctx context.Context, request *GetEnumOptionFromObjectUriForId) (*GetEnumOptionFromObjectUriForIdResponse, error) {
	response := new(GetEnumOptionFromObjectUriForIdResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetEnumOptionFromObjectUriForId(request *GetEnumOptionFromObjectUriForId) (*GetEnumOptionFromObjectUriForIdResponse, error) {
	return service.GetEnumOptionFromObjectUriForIdContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetEnumOptionFromObjectUriForKeyContext(ctx context.Context, request *GetEnumOptionFromObjectUriForKey) (*GetEnumOptionFromObjectUriForKeyResponse, error) {
	response := new(GetEnumOptionFromObjectUriForKeyResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetEnumOptionFromObjectUriForKey(request *GetEnumOptionFromObjectUriForKey) (*GetEnumOptionFromObjectUriForKeyResponse, error) {
	return service.GetEnumOptionFromObjectUriForKeyContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetEnumOptionWithEnumIdContext(ctx context.Context, request *GetEnumOptionWithEnumId) (*GetEnumOptionWithEnumIdResponse, error) {
	response := new(GetEnumOptionWithEnumIdResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetEnumOptionWithEnumId(request *GetEnumOptionWithEnumId) (*GetEnumOptionWithEnumIdResponse, error) {
	return service.GetEnumOptionWithEnumIdContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetEnumOptionWithKeyContext(ctx context.Context, request *GetEnumOptionWithKey) (*GetEnumOptionWithKeyResponse, error) {
	response := new(GetEnumOptionWithKeyResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetEnumOptionWithKey(request *GetEnumOptionWithKey) (*GetEnumOptionWithKeyResponse, error) {
	return service.GetEnumOptionWithKeyContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetEnumOptionsForIdContext(ctx context.Context, request *GetEnumOptionsForId) (*GetEnumOptionsForIdResponse, error) {
	response := new(GetEnumOptionsForIdResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetEnumOptionsForId(request *GetEnumOptionsForId) (*GetEnumOptionsForIdResponse, error) {
	return service.GetEnumOptionsForIdContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetEnumOptionsForIdWithControlContext(ctx context.Context, request *GetEnumOptionsForIdWithControl) (*GetEnumOptionsForIdWithControlResponse, error) {
	response := new(GetEnumOptionsForIdWithControlResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetEnumOptionsForIdWithControl(request *GetEnumOptionsForIdWithControl) (*GetEnumOptionsForIdWithControlResponse, error) {
	return service.GetEnumOptionsForIdWithControlContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetEnumOptionsForKeyContext(ctx context.Context, request *GetEnumOptionsForKey) (*GetEnumOptionsForKeyResponse, error) {
	response := new(GetEnumOptionsForKeyResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetEnumOptionsForKey(request *GetEnumOptionsForKey) (*GetEnumOptionsForKeyResponse, error) {
	return service.GetEnumOptionsForKeyContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetEnumOptionsForKeyWithControlContext(ctx context.Context, request *GetEnumOptionsForKeyWithControl) (*GetEnumOptionsForKeyWithControlResponse, error) {
	response := new(GetEnumOptionsForKeyWithControlResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetEnumOptionsForKeyWithControl(request *GetEnumOptionsForKeyWithControl) (*GetEnumOptionsForKeyWithControlResponse, error) {
	return service.GetEnumOptionsForKeyWithControlContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetFilteredEnumOptionsForKeyContext(ctx context.Context, request *GetFilteredEnumOptionsForKey) (*GetFilteredEnumOptionsForKeyResponse, error) {
	response := new(GetFilteredEnumOptionsForKeyResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetFilteredEnumOptionsForKey(request *GetFilteredEnumOptionsForKey) (*GetFilteredEnumOptionsForKeyResponse, error) {
	return service.GetFilteredEnumOptionsForKeyContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetFolderContext(ctx context.Context, request *GetFolder) (*GetFolderResponse, error) {
	response := new(GetFolderResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetFolder(request *GetFolder) (*GetFolderResponse, error) {
	return service.GetFolderContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetFolderForURIContext(ctx context.Context, request *GetFolderForURI) (*GetFolderForURIResponse, error) {
	response := new(GetFolderForURIResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetFolderForURI(request *GetFolderForURI) (*GetFolderForURIResponse, error) {
	return service.GetFolderForURIContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetFoldersContext(ctx context.Context, request *GetFolders) (*GetFoldersResponse, error) {
	response := new(GetFoldersResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetFolders(request *GetFolders) (*GetFoldersResponse, error) {
	return service.GetFoldersContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetInitialWorkflowActionContext(ctx context.Context, request *GetInitialWorkflowAction) (*GetInitialWorkflowActionResponse, error) {
	response := new(GetInitialWorkflowActionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetInitialWorkflowAction(request *GetInitialWorkflowAction) (*GetInitialWorkflowActionResponse, error) {
	return service.GetInitialWorkflowActionContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetInitialWorkflowActionForProjectAndTypeContext(ctx context.Context, request *GetInitialWorkflowActionForProjectAndType) (*GetInitialWorkflowActionForProjectAndTypeResponse, error) {
	response := new(GetInitialWorkflowActionForProjectAndTypeResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetInitialWorkflowActionForProjectAndType(request *GetInitialWorkflowActionForProjectAndType) (*GetInitialWorkflowActionForProjectAndTypeResponse, error) {
	return service.GetInitialWorkflowActionForProjectAndTypeContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetLanguageDefinitionContext(ctx context.Context, request *GetLanguageDefinition) (*GetLanguageDefinitionResponse, error) {
	response := new(GetLanguageDefinitionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetLanguageDefinition(request *GetLanguageDefinition) (*GetLanguageDefinitionResponse, error) {
	return service.GetLanguageDefinitionContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetLanguageDefinitionsContext(ctx context.Context, request *GetLanguageDefinitions) (*GetLanguageDefinitionsResponse, error) {
	response := new(GetLanguageDefinitionsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetLanguageDefinitions(request *GetLanguageDefinitions) (*GetLanguageDefinitionsResponse, error) {
	return service.GetLanguageDefinitionsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetLinkedResourcesContext(ctx context.Context, request *GetLinkedResources) (*GetLinkedResourcesResponse, error) {
	response := new(GetLinkedResourcesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetLinkedResources(request *GetLinkedResources) (*GetLinkedResourcesResponse, error) {
	return service.GetLinkedResourcesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetLocalizedWorkItemDescriptionContext(ctx context.Context, request *GetLocalizedWorkItemDescription) (*GetLocalizedWorkItemDescriptionResponse, error) {
	response := new(GetLocalizedWorkItemDescriptionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetLocalizedWorkItemDescription(request *GetLocalizedWorkItemDescription) (*GetLocalizedWorkItemDescriptionResponse, error) {
	return service.GetLocalizedWorkItemDescriptionContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetLocalizedWorkItemDescriptionFieldContext(ctx context.Context, request *GetLocalizedWorkItemDescriptionField) (*GetLocalizedWorkItemDescriptionFieldResponse, error) {
	response := new(GetLocalizedWorkItemDescriptionFieldResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetLocalizedWorkItemDescriptionField(request *GetLocalizedWorkItemDescriptionField) (*GetLocalizedWorkItemDescriptionFieldResponse, error) {
	return service.GetLocalizedWorkItemDescriptionFieldContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetLocalizedWorkItemTitleContext(ctx context.Context, request *GetLocalizedWorkItemTitle) (*GetLocalizedWorkItemTitleResponse, error) {
	response := new(GetLocalizedWorkItemTitleResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetLocalizedWorkItemTitle(request *GetLocalizedWorkItemTitle) (*GetLocalizedWorkItemTitleResponse, error) {
	return service.GetLocalizedWorkItemTitleContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetLocalizedWorkItemTitleFieldContext(ctx context.Context, request *GetLocalizedWorkItemTitleField) (*GetLocalizedWorkItemTitleFieldResponse, error) {
	response := new(GetLocalizedWorkItemTitleFieldResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetLocalizedWorkItemTitleField(request *GetLocalizedWorkItemTitleField) (*GetLocalizedWorkItemTitleFieldResponse, error) {
	return service.GetLocalizedWorkItemTitleFieldContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetModuleByLocationContext(ctx context.Context, request *GetModuleByLocation) (*GetModuleByLocationResponse, error) {
	response := new(GetModuleByLocationResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetModuleByLocation(request *GetModuleByLocation) (*GetModuleByLocationResponse, error) {
	return service.GetModuleByLocationContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetModuleByLocationWithFieldsContext(ctx context.Context, request *GetModuleByLocationWithFields) (*GetModuleByLocationWithFieldsResponse, error) {
	response := new(GetModuleByLocationWithFieldsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetModuleByLocationWithFields(request *GetModuleByLocationWithFields) (*GetModuleByLocationWithFieldsResponse, error) {
	return service.GetModuleByLocationWithFieldsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetModuleByUriContext(ctx context.Context, request *GetModuleByUri) (*GetModuleByUriResponse, error) {
	response := new(GetModuleByUriResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetModuleByUri(request *GetModuleByUri) (*GetModuleByUriResponse, error) {
	return service.GetModuleByUriContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetModuleByUriWithFieldsContext(ctx context.Context, request *GetModuleByUriWithFields) (*GetModuleByUriWithFieldsResponse, error) {
	response := new(GetModuleByUriWithFieldsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetModuleByUriWithFields(request *GetModuleByUriWithFields) (*GetModuleByUriWithFieldsResponse, error) {
	return service.GetModuleByUriWithFieldsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetModuleUrisContext(ctx context.Context, request *GetModuleUris) (*GetModuleUrisResponse, error) {
	response := new(GetModuleUrisResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetModuleUris(request *GetModuleUris) (*GetModuleUrisResponse, error) {
	return service.GetModuleUrisContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetModuleWorkItemUrisContext(ctx context.Context, request *GetModuleWorkItemUris) (*GetModuleWorkItemUrisResponse, error) {
	response := new(GetModuleWorkItemUrisResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetModuleWorkItemUris(request *GetModuleWorkItemUris) (*GetModuleWorkItemUrisResponse, error) {
	return service.GetModuleWorkItemUrisContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetModuleWorkItemsContext(ctx context.Context, request *GetModuleWorkItems) (*GetModuleWorkItemsResponse, error) {
	response := new(GetModuleWorkItemsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetModuleWorkItems(request *GetModuleWorkItems) (*GetModuleWorkItemsResponse, error) {
	return service.GetModuleWorkItemsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetModulesContext(ctx context.Context, request *GetModules) (*GetModulesResponse, error) {
	response := new(GetModulesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetModules(request *GetModules) (*GetModulesResponse, error) {
	return service.GetModulesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetModulesSubFoldersContext(ctx context.Context, request *GetModulesSubFolders) (*GetModulesSubFoldersResponse, error) {
	response := new(GetModulesSubFoldersResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetModulesSubFolders(request *GetModulesSubFolders) (*GetModulesSubFoldersResponse, error) {
	return service.GetModulesSubFoldersContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetModulesWithFieldsContext(ctx context.Context, request *GetModulesWithFields) (*GetModulesWithFieldsResponse, error) {
	response := new(GetModulesWithFieldsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetModulesWithFields(request *GetModulesWithFields) (*GetModulesWithFieldsResponse, error) {
	return service.GetModulesWithFieldsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetOneDayLengthContext(ctx context.Context, request *GetOneDayLength) (*GetOneDayLengthResponse, error) {
	response := new(GetOneDayLengthResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetOneDayLength(request *GetOneDayLength) (*GetOneDayLengthResponse, error) {
	return service.GetOneDayLengthContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetRevisionContext(ctx context.Context, request *GetRevision) (*GetRevisionResponse, error) {
	response := new(GetRevisionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetRevision(request *GetRevision) (*GetRevisionResponse, error) {
	return service.GetRevisionContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetRevisionByUriContext(ctx context.Context, request *GetRevisionByUri) (*GetRevisionByUriResponse, error) {
	response := new(GetRevisionByUriResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetRevisionByUri(request *GetRevisionByUri) (*GetRevisionByUriResponse, error) {
	return service.GetRevisionByUriContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetRevisionsContext(ctx context.Context, request *GetRevisions) (*GetRevisionsResponse, error) {
	response := new(GetRevisionsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetRevisions(request *GetRevisions) (*GetRevisionsResponse, error) {
	return service.GetRevisionsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetRootFoldersContext(ctx context.Context, request *GetRootFolders) (*GetRootFoldersResponse, error) {
	response := new(GetRootFoldersResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetRootFolders(request *GetRootFolders) (*GetRootFoldersResponse, error) {
	return service.GetRootFoldersContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetTimepointsContext(ctx context.Context, request *GetTimepoints) (*GetTimepointsResponse, error) {
	response := new(GetTimepointsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetTimepoints(request *GetTimepoints) (*GetTimepointsResponse, error) {
	return service.GetTimepointsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetUnavailableActionsContext(ctx context.Context, request *GetUnavailableActions) (*GetUnavailableActionsResponse, error) {
	response := new(GetUnavailableActionsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetUnavailableActions(request *GetUnavailableActions) (*GetUnavailableActionsResponse, error) {
	return service.GetUnavailableActionsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetWikiPageByUriContext(ctx context.Context, request *GetWikiPageByUri) (*GetWikiPageByUriResponse, error) {
	response := new(GetWikiPageByUriResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetWikiPageByUri(request *GetWikiPageByUri) (*GetWikiPageByUriResponse, error) {
	return service.GetWikiPageByUriContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetWikiPageByUriWithFieldsContext(ctx context.Context, request *GetWikiPageByUriWithFields) (*GetWikiPageByUriWithFieldsResponse, error) {
	response := new(GetWikiPageByUriWithFieldsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetWikiPageByUriWithFields(request *GetWikiPageByUriWithFields) (*GetWikiPageByUriWithFieldsResponse, error) {
	return service.GetWikiPageByUriWithFieldsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetWikiPageUrisContext(ctx context.Context, request *GetWikiPageUris) (*GetWikiPageUrisResponse, error) {
	response := new(GetWikiPageUrisResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetWikiPageUris(request *GetWikiPageUris) (*GetWikiPageUrisResponse, error) {
	return service.GetWikiPageUrisContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetWikiPagesContext(ctx context.Context, request *GetWikiPages) (*GetWikiPagesResponse, error) {
	response := new(GetWikiPagesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetWikiPages(request *GetWikiPages) (*GetWikiPagesResponse, error) {
	return service.GetWikiPagesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetWikiPagesWithFieldsContext(ctx context.Context, request *GetWikiPagesWithFields) (*GetWikiPagesWithFieldsResponse, error) {
	response := new(GetWikiPagesWithFieldsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetWikiPagesWithFields(request *GetWikiPagesWithFields) (*GetWikiPagesWithFieldsResponse, error) {
	return service.GetWikiPagesWithFieldsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetWikiSpacesContext(ctx context.Context, request *GetWikiSpaces) (*GetWikiSpacesResponse, error) {
	response := new(GetWikiSpacesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetWikiSpaces(request *GetWikiSpaces) (*GetWikiSpacesResponse, error) {
	return service.GetWikiSpacesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetWorkItemByIdContext(ctx context.Context, request *GetWorkItemById) (*GetWorkItemByIdResponse, error) {
	response := new(GetWorkItemByIdResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetWorkItemById(request *GetWorkItemById) (*GetWorkItemByIdResponse, error) {
	return service.GetWorkItemByIdContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetWorkItemByIdsWithFieldsContext(ctx context.Context, request *GetWorkItemByIdsWithFields) (*GetWorkItemByIdsWithFieldsResponse, error) {
	response := new(GetWorkItemByIdsWithFieldsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetWorkItemByIdsWithFields(request *GetWorkItemByIdsWithFields) (*GetWorkItemByIdsWithFieldsResponse, error) {
	return service.GetWorkItemByIdsWithFieldsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetWorkItemByUriContext(ctx context.Context, request *GetWorkItemByUri) (*GetWorkItemByUriResponse, error) {
	response := new(GetWorkItemByUriResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetWorkItemByUri(request *GetWorkItemByUri) (*GetWorkItemByUriResponse, error) {
	return service.GetWorkItemByUriContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetWorkItemByUriInRevisionContext(ctx context.Context, request *GetWorkItemByUriInRevision) (*GetWorkItemByUriInRevisionResponse, error) {
	response := new(GetWorkItemByUriInRevisionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetWorkItemByUriInRevision(request *GetWorkItemByUriInRevision) (*GetWorkItemByUriInRevisionResponse, error) {
	return service.GetWorkItemByUriInRevisionContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetWorkItemByUriInRevisionWithFieldsContext(ctx context.Context, request *GetWorkItemByUriInRevisionWithFields) (*GetWorkItemByUriInRevisionWithFieldsResponse, error) {
	response := new(GetWorkItemByUriInRevisionWithFieldsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetWorkItemByUriInRevisionWithFields(request *GetWorkItemByUriInRevisionWithFields) (*GetWorkItemByUriInRevisionWithFieldsResponse, error) {
	return service.GetWorkItemByUriInRevisionWithFieldsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetWorkItemByUriWithFieldsContext(ctx context.Context, request *GetWorkItemByUriWithFields) (*GetWorkItemByUriWithFieldsResponse, error) {
	response := new(GetWorkItemByUriWithFieldsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetWorkItemByUriWithFields(request *GetWorkItemByUriWithFields) (*GetWorkItemByUriWithFieldsResponse, error) {
	return service.GetWorkItemByUriWithFieldsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetWorkItemsCountContext(ctx context.Context, request *GetWorkItemsCount) (*GetWorkItemsCountResponse, error) {
	response := new(GetWorkItemsCountResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetWorkItemsCount(request *GetWorkItemsCount) (*GetWorkItemsCountResponse, error) {
	return service.GetWorkItemsCountContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetWorkItemsLinkedToRevisionContext(ctx context.Context, request *GetWorkItemsLinkedToRevision) (*GetWorkItemsLinkedToRevisionResponse, error) {
	response := new(GetWorkItemsLinkedToRevisionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetWorkItemsLinkedToRevision(request *GetWorkItemsLinkedToRevision) (*GetWorkItemsLinkedToRevisionResponse, error) {
	return service.GetWorkItemsLinkedToRevisionContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) GetWorkItemsLinkedToRevisionWithFieldsContext(ctx context.Context, request *GetWorkItemsLinkedToRevisionWithFields) (*GetWorkItemsLinkedToRevisionWithFieldsResponse, error) {
	response := new(GetWorkItemsLinkedToRevisionWithFieldsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) GetWorkItemsLinkedToRevisionWithFields(request *GetWorkItemsLinkedToRevisionWithFields) (*GetWorkItemsLinkedToRevisionWithFieldsResponse, error) {
	return service.GetWorkItemsLinkedToRevisionWithFieldsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) IsHistoryAvailableContext(ctx context.Context, request *IsHistoryAvailable) (*IsHistoryAvailableResponse, error) {
	response := new(IsHistoryAvailableResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) IsHistoryAvailable(request *IsHistoryAvailable) (*IsHistoryAvailableResponse, error) {
	return service.IsHistoryAvailableContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) IsResolvedCommentContext(ctx context.Context, request *IsResolvedComment) (*IsResolvedCommentResponse, error) {
	response := new(IsResolvedCommentResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) IsResolvedComment(request *IsResolvedComment) (*IsResolvedCommentResponse, error) {
	return service.IsResolvedCommentContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) ListActivitySourcesContext(ctx context.Context, request *ListActivitySources) (*ListActivitySourcesResponse, error) {
	response := new(ListActivitySourcesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) ListActivitySources(request *ListActivitySources) (*ListActivitySourcesResponse, error) {
	return service.ListActivitySourcesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) ListAllActivitiesContext(ctx context.Context, request *ListAllActivities) (*ListAllActivitiesResponse, error) {
	response := new(ListAllActivitiesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) ListAllActivities(request *ListAllActivities) (*ListAllActivitiesResponse, error) {
	return service.ListAllActivitiesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) ListAllActivitiesGlobalIdsContext(ctx context.Context, request *ListAllActivitiesGlobalIds) (*ListAllActivitiesGlobalIdsResponse, error) {
	response := new(ListAllActivitiesGlobalIdsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) ListAllActivitiesGlobalIds(request *ListAllActivitiesGlobalIds) (*ListAllActivitiesGlobalIdsResponse, error) {
	return service.ListAllActivitiesGlobalIdsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) ListGroupActivitiesContext(ctx context.Context, request *ListGroupActivities) (*ListGroupActivitiesResponse, error) {
	response := new(ListGroupActivitiesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) ListGroupActivities(request *ListGroupActivities) (*ListGroupActivitiesResponse, error) {
	return service.ListGroupActivitiesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) ListGroupActivitiesGlobalIdsContext(ctx context.Context, request *ListGroupActivitiesGlobalIds) (*ListGroupActivitiesGlobalIdsResponse, error) {
	response := new(ListGroupActivitiesGlobalIdsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) ListGroupActivitiesGlobalIds(request *ListGroupActivitiesGlobalIds) (*ListGroupActivitiesGlobalIdsResponse, error) {
	return service.ListGroupActivitiesGlobalIdsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) ListProjectActivitiesContext(ctx context.Context, request *ListProjectActivities) (*ListProjectActivitiesResponse, error) {
	response := new(ListProjectActivitiesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) ListProjectActivities(request *ListProjectActivities) (*ListProjectActivitiesResponse, error) {
	return service.ListProjectActivitiesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) ListProjectActivitiesGlobalIdsContext(ctx context.Context, request *ListProjectActivitiesGlobalIds) (*ListProjectActivitiesGlobalIdsResponse, error) {
	response := new(ListProjectActivitiesGlobalIdsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) ListProjectActivitiesGlobalIds(request *ListProjectActivitiesGlobalIds) (*ListProjectActivitiesGlobalIdsResponse, error) {
	return service.ListProjectActivitiesGlobalIdsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) MoveWorkItemToDocumentContext(ctx context.Context, request *MoveWorkItemToDocument) (*MoveWorkItemToDocumentResponse, error) {
	response := new(MoveWorkItemToDocumentResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) MoveWorkItemToDocument(request *MoveWorkItemToDocument) (*MoveWorkItemToDocumentResponse, error) {
	return service.MoveWorkItemToDocumentContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) MoveWorkItemToModuleContext(ctx context.Context, request *MoveWorkItemToModule) (*MoveWorkItemToModuleResponse, error) {
	response := new(MoveWorkItemToModuleResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) MoveWorkItemToModule(request *MoveWorkItemToModule) (*MoveWorkItemToModuleResponse, error) {
	return service.MoveWorkItemToModuleContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) PerformWorkflowActionContext(ctx context.Context, request *PerformWorkflowAction) (*PerformWorkflowActionResponse, error) {
	response := new(PerformWorkflowActionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) PerformWorkflowAction(request *PerformWorkflowAction) (*PerformWorkflowActionResponse, error) {
	return service.PerformWorkflowActionContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryBaselinesContext(ctx context.Context, request *QueryBaselines) (*QueryBaselinesResponse, error) {
	response := new(QueryBaselinesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryBaselines(request *QueryBaselines) (*QueryBaselinesResponse, error) {
	return service.QueryBaselinesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryModuleUrisContext(ctx context.Context, request *QueryModuleUris) (*QueryModuleUrisResponse, error) {
	response := new(QueryModuleUrisResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryModuleUris(request *QueryModuleUris) (*QueryModuleUrisResponse, error) {
	return service.QueryModuleUrisContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryModuleUrisBySQLContext(ctx context.Context, request *QueryModuleUrisBySQL) (*QueryModuleUrisBySQLResponse, error) {
	response := new(QueryModuleUrisBySQLResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryModuleUrisBySQL(request *QueryModuleUrisBySQL) (*QueryModuleUrisBySQLResponse, error) {
	return service.QueryModuleUrisBySQLContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryModuleUrisInBaselineContext(ctx context.Context, request *QueryModuleUrisInBaseline) (*QueryModuleUrisInBaselineResponse, error) {
	response := new(QueryModuleUrisInBaselineResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryModuleUrisInBaseline(request *QueryModuleUrisInBaseline) (*QueryModuleUrisInBaselineResponse, error) {
	return service.QueryModuleUrisInBaselineContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryModuleUrisInBaselineBySQLContext(ctx context.Context, request *QueryModuleUrisInBaselineBySQL) (*QueryModuleUrisInBaselineBySQLResponse, error) {
	response := new(QueryModuleUrisInBaselineBySQLResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryModuleUrisInBaselineBySQL(request *QueryModuleUrisInBaselineBySQL) (*QueryModuleUrisInBaselineBySQLResponse, error) {
	return service.QueryModuleUrisInBaselineBySQLContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryModulesContext(ctx context.Context, request *QueryModules) (*QueryModulesResponse, error) {
	response := new(QueryModulesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryModules(request *QueryModules) (*QueryModulesResponse, error) {
	return service.QueryModulesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryModulesBySQLContext(ctx context.Context, request *QueryModulesBySQL) (*QueryModulesBySQLResponse, error) {
	response := new(QueryModulesBySQLResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryModulesBySQL(request *QueryModulesBySQL) (*QueryModulesBySQLResponse, error) {
	return service.QueryModulesBySQLContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryModulesInBaselineContext(ctx context.Context, request *QueryModulesInBaseline) (*QueryModulesInBaselineResponse, error) {
	response := new(QueryModulesInBaselineResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryModulesInBaseline(request *QueryModulesInBaseline) (*QueryModulesInBaselineResponse, error) {
	return service.QueryModulesInBaselineContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryModulesInBaselineBySQLContext(ctx context.Context, request *QueryModulesInBaselineBySQL) (*QueryModulesInBaselineBySQLResponse, error) {
	response := new(QueryModulesInBaselineBySQLResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryModulesInBaselineBySQL(request *QueryModulesInBaselineBySQL) (*QueryModulesInBaselineBySQLResponse, error) {
	return service.QueryModulesInBaselineBySQLContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryRevisionUrisContext(ctx context.Context, request *QueryRevisionUris) (*QueryRevisionUrisResponse, error) {
	response := new(QueryRevisionUrisResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryRevisionUris(request *QueryRevisionUris) (*QueryRevisionUrisResponse, error) {
	return service.QueryRevisionUrisContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryRevisionsContext(ctx context.Context, request *QueryRevisions) (*QueryRevisionsResponse, error) {
	response := new(QueryRevisionsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryRevisions(request *QueryRevisions) (*QueryRevisionsResponse, error) {
	return service.QueryRevisionsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWikiPageUrisContext(ctx context.Context, request *QueryWikiPageUris) (*QueryWikiPageUrisResponse, error) {
	response := new(QueryWikiPageUrisResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWikiPageUris(request *QueryWikiPageUris) (*QueryWikiPageUrisResponse, error) {
	return service.QueryWikiPageUrisContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWikiPageUrisBySQLContext(ctx context.Context, request *QueryWikiPageUrisBySQL) (*QueryWikiPageUrisBySQLResponse, error) {
	response := new(QueryWikiPageUrisBySQLResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWikiPageUrisBySQL(request *QueryWikiPageUrisBySQL) (*QueryWikiPageUrisBySQLResponse, error) {
	return service.QueryWikiPageUrisBySQLContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWikiPageUrisInBaselineContext(ctx context.Context, request *QueryWikiPageUrisInBaseline) (*QueryWikiPageUrisInBaselineResponse, error) {
	response := new(QueryWikiPageUrisInBaselineResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWikiPageUrisInBaseline(request *QueryWikiPageUrisInBaseline) (*QueryWikiPageUrisInBaselineResponse, error) {
	return service.QueryWikiPageUrisInBaselineContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWikiPageUrisInBaselineBySQLContext(ctx context.Context, request *QueryWikiPageUrisInBaselineBySQL) (*QueryWikiPageUrisInBaselineBySQLResponse, error) {
	response := new(QueryWikiPageUrisInBaselineBySQLResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWikiPageUrisInBaselineBySQL(request *QueryWikiPageUrisInBaselineBySQL) (*QueryWikiPageUrisInBaselineBySQLResponse, error) {
	return service.QueryWikiPageUrisInBaselineBySQLContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWikiPagesContext(ctx context.Context, request *QueryWikiPages) (*QueryWikiPagesResponse, error) {
	response := new(QueryWikiPagesResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWikiPages(request *QueryWikiPages) (*QueryWikiPagesResponse, error) {
	return service.QueryWikiPagesContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWikiPagesBySQLContext(ctx context.Context, request *QueryWikiPagesBySQL) (*QueryWikiPagesBySQLResponse, error) {
	response := new(QueryWikiPagesBySQLResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWikiPagesBySQL(request *QueryWikiPagesBySQL) (*QueryWikiPagesBySQLResponse, error) {
	return service.QueryWikiPagesBySQLContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWikiPagesInBaselineContext(ctx context.Context, request *QueryWikiPagesInBaseline) (*QueryWikiPagesInBaselineResponse, error) {
	response := new(QueryWikiPagesInBaselineResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWikiPagesInBaseline(request *QueryWikiPagesInBaseline) (*QueryWikiPagesInBaselineResponse, error) {
	return service.QueryWikiPagesInBaselineContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWikiPagesInBaselineBySQLContext(ctx context.Context, request *QueryWikiPagesInBaselineBySQL) (*QueryWikiPagesInBaselineBySQLResponse, error) {
	response := new(QueryWikiPagesInBaselineBySQLResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWikiPagesInBaselineBySQL(request *QueryWikiPagesInBaselineBySQL) (*QueryWikiPagesInBaselineBySQLResponse, error) {
	return service.QueryWikiPagesInBaselineBySQLContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWorkItemUrisContext(ctx context.Context, request *QueryWorkItemUris) (*QueryWorkItemUrisResponse, error) {
	response := new(QueryWorkItemUrisResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWorkItemUris(request *QueryWorkItemUris) (*QueryWorkItemUrisResponse, error) {
	return service.QueryWorkItemUrisContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWorkItemUrisBySQLContext(ctx context.Context, request *QueryWorkItemUrisBySQL) (*QueryWorkItemUrisBySQLResponse, error) {
	response := new(QueryWorkItemUrisBySQLResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWorkItemUrisBySQL(request *QueryWorkItemUrisBySQL) (*QueryWorkItemUrisBySQLResponse, error) {
	return service.QueryWorkItemUrisBySQLContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWorkItemUrisInBaselineContext(ctx context.Context, request *QueryWorkItemUrisInBaseline) (*QueryWorkItemUrisInBaselineResponse, error) {
	response := new(QueryWorkItemUrisInBaselineResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWorkItemUrisInBaseline(request *QueryWorkItemUrisInBaseline) (*QueryWorkItemUrisInBaselineResponse, error) {
	return service.QueryWorkItemUrisInBaselineContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWorkItemUrisInBaselineBySQLContext(ctx context.Context, request *QueryWorkItemUrisInBaselineBySQL) (*QueryWorkItemUrisInBaselineBySQLResponse, error) {
	response := new(QueryWorkItemUrisInBaselineBySQLResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWorkItemUrisInBaselineBySQL(request *QueryWorkItemUrisInBaselineBySQL) (*QueryWorkItemUrisInBaselineBySQLResponse, error) {
	return service.QueryWorkItemUrisInBaselineBySQLContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWorkItemUrisInBaselineLimitedContext(ctx context.Context, request *QueryWorkItemUrisInBaselineLimited) (*QueryWorkItemUrisInBaselineLimitedResponse, error) {
	response := new(QueryWorkItemUrisInBaselineLimitedResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWorkItemUrisInBaselineLimited(request *QueryWorkItemUrisInBaselineLimited) (*QueryWorkItemUrisInBaselineLimitedResponse, error) {
	return service.QueryWorkItemUrisInBaselineLimitedContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWorkItemUrisLimitedContext(ctx context.Context, request *QueryWorkItemUrisLimited) (*QueryWorkItemUrisLimitedResponse, error) {
	response := new(QueryWorkItemUrisLimitedResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWorkItemUrisLimited(request *QueryWorkItemUrisLimited) (*QueryWorkItemUrisLimitedResponse, error) {
	return service.QueryWorkItemUrisLimitedContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWorkItemsContext(ctx context.Context, request *QueryWorkItems) (*QueryWorkItemsResponse, error) {
	response := new(QueryWorkItemsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWorkItems(request *QueryWorkItems) (*QueryWorkItemsResponse, error) {
	return service.QueryWorkItemsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWorkItemsBySQLContext(ctx context.Context, request *QueryWorkItemsBySQL) (*QueryWorkItemsBySQLResponse, error) {
	response := new(QueryWorkItemsBySQLResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWorkItemsBySQL(request *QueryWorkItemsBySQL) (*QueryWorkItemsBySQLResponse, error) {
	return service.QueryWorkItemsBySQLContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWorkItemsInBaselineContext(ctx context.Context, request *QueryWorkItemsInBaseline) (*QueryWorkItemsInBaselineResponse, error) {
	response := new(QueryWorkItemsInBaselineResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWorkItemsInBaseline(request *QueryWorkItemsInBaseline) (*QueryWorkItemsInBaselineResponse, error) {
	return service.QueryWorkItemsInBaselineContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWorkItemsInBaselineBySQLContext(ctx context.Context, request *QueryWorkItemsInBaselineBySQL) (*QueryWorkItemsInBaselineBySQLResponse, error) {
	response := new(QueryWorkItemsInBaselineBySQLResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWorkItemsInBaselineBySQL(request *QueryWorkItemsInBaselineBySQL) (*QueryWorkItemsInBaselineBySQLResponse, error) {
	return service.QueryWorkItemsInBaselineBySQLContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWorkItemsInBaselineLimitedContext(ctx context.Context, request *QueryWorkItemsInBaselineLimited) (*QueryWorkItemsInBaselineLimitedResponse, error) {
	response := new(QueryWorkItemsInBaselineLimitedResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWorkItemsInBaselineLimited(request *QueryWorkItemsInBaselineLimited) (*QueryWorkItemsInBaselineLimitedResponse, error) {
	return service.QueryWorkItemsInBaselineLimitedContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWorkItemsInRevisionContext(ctx context.Context, request *QueryWorkItemsInRevision) (*QueryWorkItemsInRevisionResponse, error) {
	response := new(QueryWorkItemsInRevisionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWorkItemsInRevision(request *QueryWorkItemsInRevision) (*QueryWorkItemsInRevisionResponse, error) {
	return service.QueryWorkItemsInRevisionContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWorkItemsInRevisionLimitedContext(ctx context.Context, request *QueryWorkItemsInRevisionLimited) (*QueryWorkItemsInRevisionLimitedResponse, error) {
	response := new(QueryWorkItemsInRevisionLimitedResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWorkItemsInRevisionLimited(request *QueryWorkItemsInRevisionLimited) (*QueryWorkItemsInRevisionLimitedResponse, error) {
	return service.QueryWorkItemsInRevisionLimitedContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) QueryWorkItemsLimitedContext(ctx context.Context, request *QueryWorkItemsLimited) (*QueryWorkItemsLimitedResponse, error) {
	response := new(QueryWorkItemsLimitedResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) QueryWorkItemsLimited(request *QueryWorkItemsLimited) (*QueryWorkItemsLimitedResponse, error) {
	return service.QueryWorkItemsLimitedContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) RemoveApproveeContext(ctx context.Context, request *RemoveApprovee) (*RemoveApproveeResponse, error) {
	response := new(RemoveApproveeResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) RemoveApprovee(request *RemoveApprovee) (*RemoveApproveeResponse, error) {
	return service.RemoveApproveeContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) RemoveAssigneeContext(ctx context.Context, request *RemoveAssignee) (*RemoveAssigneeResponse, error) {
	response := new(RemoveAssigneeResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) RemoveAssignee(request *RemoveAssignee) (*RemoveAssigneeResponse, error) {
	return service.RemoveAssigneeContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) RemoveCategoryContext(ctx context.Context, request *RemoveCategory) (*RemoveCategoryResponse, error) {
	response := new(RemoveCategoryResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) RemoveCategory(request *RemoveCategory) (*RemoveCategoryResponse, error) {
	return service.RemoveCategoryContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) RemoveExternalLinkedRevisionContext(ctx context.Context, request *RemoveExternalLinkedRevision) (*RemoveExternalLinkedRevisionResponse, error) {
	response := new(RemoveExternalLinkedRevisionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) RemoveExternalLinkedRevision(request *RemoveExternalLinkedRevision) (*RemoveExternalLinkedRevisionResponse, error) {
	return service.RemoveExternalLinkedRevisionContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) RemoveExternallyLinkedItemContext(ctx context.Context, request *RemoveExternallyLinkedItem) (*RemoveExternallyLinkedItemResponse, error) {
	response := new(RemoveExternallyLinkedItemResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) RemoveExternallyLinkedItem(request *RemoveExternallyLinkedItem) (*RemoveExternallyLinkedItemResponse, error) {
	return service.RemoveExternallyLinkedItemContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) RemoveHyperlinkContext(ctx context.Context, request *RemoveHyperlink) (*RemoveHyperlinkResponse, error) {
	response := new(RemoveHyperlinkResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) RemoveHyperlink(request *RemoveHyperlink) (*RemoveHyperlinkResponse, error) {
	return service.RemoveHyperlinkContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) RemoveLinkedItemContext(ctx context.Context, request *RemoveLinkedItem) (*RemoveLinkedItemResponse, error) {
	response := new(RemoveLinkedItemResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) RemoveLinkedItem(request *RemoveLinkedItem) (*RemoveLinkedItemResponse, error) {
	return service.RemoveLinkedItemContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) RemoveLinkedRevisionContext(ctx context.Context, request *RemoveLinkedRevision) (*RemoveLinkedRevisionResponse, error) {
	response := new(RemoveLinkedRevisionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) RemoveLinkedRevision(request *RemoveLinkedRevision) (*RemoveLinkedRevisionResponse, error) {
	return service.RemoveLinkedRevisionContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) RemovePlaningConstraintContext(ctx context.Context, request *RemovePlaningConstraint) (*RemovePlaningConstraintResponse, error) {
	response := new(RemovePlaningConstraintResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) RemovePlaningConstraint(request *RemovePlaningConstraint) (*RemovePlaningConstraintResponse, error) {
	return service.RemovePlaningConstraintContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) ResetWorkflowContext(ctx context.Context, request *ResetWorkflow) (*ResetWorkflowResponse, error) {
	response := new(ResetWorkflowResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) ResetWorkflow(request *ResetWorkflow) (*ResetWorkflowResponse, error) {
	return service.ResetWorkflowContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) ReuseDocumentContext(ctx context.Context, request *ReuseDocument) (*ReuseDocumentResponse, error) {
	response := new(ReuseDocumentResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) ReuseDocument(request *ReuseDocument) (*ReuseDocumentResponse, error) {
	return service.ReuseDocumentContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) ReuseModuleContext(ctx context.Context, request *ReuseModule) (*ReuseModuleResponse, error) {
	response := new(ReuseModuleResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) ReuseModule(request *ReuseModule) (*ReuseModuleResponse, error) {
	return service.ReuseModuleContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) SetCommentTagsContext(ctx context.Context, request *SetCommentTags) (*SetCommentTagsResponse, error) {
	response := new(SetCommentTagsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) SetCommentTags(request *SetCommentTags) (*SetCommentTagsResponse, error) {
	return service.SetCommentTagsContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) SetCustomFieldContext(ctx context.Context, request *SetCustomField) (*SetCustomFieldResponse, error) {
	response := new(SetCustomFieldResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) SetCustomField(request *SetCustomField) (*SetCustomFieldResponse, error) {
	return service.SetCustomFieldContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) SetFieldsNullContext(ctx context.Context, request *SetFieldsNull) (*SetFieldsNullResponse, error) {
	response := new(SetFieldsNullResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) SetFieldsNull(request *SetFieldsNull) (*SetFieldsNullResponse, error) {
	return service.SetFieldsNullContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) SetLocalizedWorkItemDescriptionContext(ctx context.Context, request *SetLocalizedWorkItemDescription) (*SetLocalizedWorkItemDescriptionResponse, error) {
	response := new(SetLocalizedWorkItemDescriptionResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) SetLocalizedWorkItemDescription(request *SetLocalizedWorkItemDescription) (*SetLocalizedWorkItemDescriptionResponse, error) {
	return service.SetLocalizedWorkItemDescriptionContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) SetLocalizedWorkItemTitleContext(ctx context.Context, request *SetLocalizedWorkItemTitle) (*SetLocalizedWorkItemTitleResponse, error) {
	response := new(SetLocalizedWorkItemTitleResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) SetLocalizedWorkItemTitle(request *SetLocalizedWorkItemTitle) (*SetLocalizedWorkItemTitleResponse, error) {
	return service.SetLocalizedWorkItemTitleContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) SetResolvedCommentContext(ctx context.Context, request *SetResolvedComment) (*SetResolvedCommentResponse, error) {
	response := new(SetResolvedCommentResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) SetResolvedComment(request *SetResolvedComment) (*SetResolvedCommentResponse, error) {
	return service.SetResolvedCommentContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) UpdateAttachmentContext(ctx context.Context, request *UpdateAttachment) (*UpdateAttachmentResponse, error) {
	response := new(UpdateAttachmentResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) UpdateAttachment(request *UpdateAttachment) (*UpdateAttachmentResponse, error) {
	return service.UpdateAttachmentContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) UpdateBaselineContext(ctx context.Context, request *UpdateBaseline) (*UpdateBaselineResponse, error) {
	response := new(UpdateBaselineResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) UpdateBaseline(request *UpdateBaseline) (*UpdateBaselineResponse, error) {
	return service.UpdateBaselineContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) UpdateDerivedDocumentContext(ctx context.Context, request *UpdateDerivedDocument) (*UpdateDerivedDocumentResponse, error) {
	response := new(UpdateDerivedDocumentResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) UpdateDerivedDocument(request *UpdateDerivedDocument) (*UpdateDerivedDocumentResponse, error) {
	return service.UpdateDerivedDocumentContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) UpdateDerivedModuleContext(ctx context.Context, request *UpdateDerivedModule) (*UpdateDerivedModuleResponse, error) {
	response := new(UpdateDerivedModuleResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) UpdateDerivedModule(request *UpdateDerivedModule) (*UpdateDerivedModuleResponse, error) {
	return service.UpdateDerivedModuleContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) UpdateModuleContext(ctx context.Context, request *UpdateModule) (*UpdateModuleResponse, error) {
	response := new(UpdateModuleResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) UpdateModule(request *UpdateModule) (*UpdateModuleResponse, error) {
	return service.UpdateModuleContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) UpdateTitleHeadingInDocumentContext(ctx context.Context, request *UpdateTitleHeadingInDocument) (*UpdateTitleHeadingInDocumentResponse, error) {
	response := new(UpdateTitleHeadingInDocumentResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) UpdateTitleHeadingInDocument(request *UpdateTitleHeadingInDocument) (*UpdateTitleHeadingInDocumentResponse, error) {
	return service.UpdateTitleHeadingInDocumentContext(
		context.Background(),
		request,
	)
}

func (service *trackerWebService) UpdateWorkItemContext(ctx context.Context, request *UpdateWorkItem) (*UpdateWorkItemResponse, error) {
	response := new(UpdateWorkItemResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *trackerWebService) UpdateWorkItem(request *UpdateWorkItem) (*UpdateWorkItemResponse, error) {
	return service.UpdateWorkItemContext(
		context.Background(),
		request,
	)
}
